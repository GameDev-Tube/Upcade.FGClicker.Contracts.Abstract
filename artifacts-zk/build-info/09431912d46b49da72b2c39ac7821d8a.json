{"id":"09431912d46b49da72b2c39ac7821d8a","_format":"hh-sol-build-info-1","solcVersion":"zkVM-0.8.27-1.0.1","solcLongVersion":"zkVM-0.8.27-1.0.1","input":{"language":"Solidity","sources":{"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/Ownable2Step.sol)\n\npragma solidity ^0.8.20;\n\nimport {OwnableUpgradeable} from \"./OwnableUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This extension of the {Ownable} contract includes a two-step mechanism to transfer\n * ownership, where the new owner must call {acceptOwnership} in order to replace the\n * old one. This can help prevent common mistakes, such as transfers of ownership to\n * incorrect accounts, or to contracts that are unable to interact with the\n * permission system.\n *\n * The initial owner is specified at deployment time in the constructor for `Ownable`. This\n * can later be changed with {transferOwnership} and {acceptOwnership}.\n *\n * This module is used through inheritance. It will make available all functions\n * from parent (Ownable).\n */\nabstract contract Ownable2StepUpgradeable is Initializable, OwnableUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable2Step\n    struct Ownable2StepStorage {\n        address _pendingOwner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable2Step\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant Ownable2StepStorageLocation = 0x237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00;\n\n    function _getOwnable2StepStorage() private pure returns (Ownable2StepStorage storage $) {\n        assembly {\n            $.slot := Ownable2StepStorageLocation\n        }\n    }\n\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n\n    function __Ownable2Step_init() internal onlyInitializing {\n    }\n\n    function __Ownable2Step_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Returns the address of the pending owner.\n     */\n    function pendingOwner() public view virtual returns (address) {\n        Ownable2StepStorage storage $ = _getOwnable2StepStorage();\n        return $._pendingOwner;\n    }\n\n    /**\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n     * Can only be called by the current owner.\n     *\n     * Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\n     */\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        Ownable2StepStorage storage $ = _getOwnable2StepStorage();\n        $._pendingOwner = newOwner;\n        emit OwnershipTransferStarted(owner(), newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual override {\n        Ownable2StepStorage storage $ = _getOwnable2StepStorage();\n        delete $._pendingOwner;\n        super._transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev The new owner accepts the ownership transfer.\n     */\n    function acceptOwnership() public virtual {\n        address sender = _msgSender();\n        if (pendingOwner() != sender) {\n            revert OwnableUnauthorizedAccount(sender);\n        }\n        _transferOwnership(sender);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC-1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\";\nimport {IERC5267} from \"@openzeppelin/contracts/interfaces/IERC5267.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n */\nabstract contract EIP712Upgradeable is Initializable, IERC5267 {\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.EIP712\n    struct EIP712Storage {\n        /// @custom:oz-renamed-from _HASHED_NAME\n        bytes32 _hashedName;\n        /// @custom:oz-renamed-from _HASHED_VERSION\n        bytes32 _hashedVersion;\n\n        string _name;\n        string _version;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.EIP712\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant EIP712StorageLocation = 0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100;\n\n    function _getEIP712Storage() private pure returns (EIP712Storage storage $) {\n        assembly {\n            $.slot := EIP712StorageLocation\n        }\n    }\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    function __EIP712_init(string memory name, string memory version) internal onlyInitializing {\n        __EIP712_init_unchained(name, version);\n    }\n\n    function __EIP712_init_unchained(string memory name, string memory version) internal onlyInitializing {\n        EIP712Storage storage $ = _getEIP712Storage();\n        $._name = name;\n        $._version = version;\n\n        // Reset prior values in storage if upgrading\n        $._hashedName = 0;\n        $._hashedVersion = 0;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        return _buildDomainSeparator();\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _EIP712NameHash(), _EIP712VersionHash(), block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        EIP712Storage storage $ = _getEIP712Storage();\n        // If the hashed name and version in storage are non-zero, the contract hasn't been properly initialized\n        // and the EIP712 domain is not reliable, as it will be missing name and version.\n        require($._hashedName == 0 && $._hashedVersion == 0, \"EIP712: Uninitialized\");\n\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Name() internal view virtual returns (string memory) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n     * are a concern.\n     */\n    function _EIP712Version() internal view virtual returns (string memory) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        return $._version;\n    }\n\n    /**\n     * @dev The hash of the name parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead.\n     */\n    function _EIP712NameHash() internal view returns (bytes32) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        string memory name = _EIP712Name();\n        if (bytes(name).length > 0) {\n            return keccak256(bytes(name));\n        } else {\n            // If the name is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the name hash in storage if non-zero, otherwise we assume the name is empty by design.\n            bytes32 hashedName = $._hashedName;\n            if (hashedName != 0) {\n                return hashedName;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n\n    /**\n     * @dev The hash of the version parameter for the EIP712 domain.\n     *\n     * NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead.\n     */\n    function _EIP712VersionHash() internal view returns (bytes32) {\n        EIP712Storage storage $ = _getEIP712Storage();\n        string memory version = _EIP712Version();\n        if (bytes(version).length > 0) {\n            return keccak256(bytes(version));\n        } else {\n            // If the version is empty, the contract may have been upgraded without initializing the new storage.\n            // We return the version hash in storage if non-zero, otherwise we assume the version is empty by design.\n            bytes32 hashedVersion = $._hashedVersion;\n            if (hashedVersion != 0) {\n                return hashedVersion;\n            } else {\n                return keccak256(\"\");\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC1967.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\n */\ninterface IERC1967 {\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n}\n"},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC5267.sol)\n\npragma solidity ^0.8.20;\n\ninterface IERC5267 {\n    /**\n     * @dev MAY be emitted to signal that the domain could have changed.\n     */\n    event EIP712DomainChanged();\n\n    /**\n     * @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n     * signature.\n     */\n    function eip712Domain()\n        external\n        view\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        );\n}\n"},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/ERC1967/ERC1967Proxy.sol)\n\npragma solidity ^0.8.20;\n\nimport {Proxy} from \"../Proxy.sol\";\nimport {ERC1967Utils} from \"./ERC1967Utils.sol\";\n\n/**\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n * implementation address that can be changed. This address is stored in storage in the location specified by\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n * implementation behind the proxy.\n */\ncontract ERC1967Proxy is Proxy {\n    /**\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n     *\n     * If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n     * encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n     *\n     * Requirements:\n     *\n     * - If `data` is empty, `msg.value` must be zero.\n     */\n    constructor(address implementation, bytes memory _data) payable {\n        ERC1967Utils.upgradeToAndCall(implementation, _data);\n    }\n\n    /**\n     * @dev Returns the current implementation address.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`\n     */\n    function _implementation() internal view virtual override returns (address) {\n        return ERC1967Utils.getImplementation();\n    }\n}\n"},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.21;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {IERC1967} from \"../../interfaces/IERC1967.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This library provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.\n */\nlibrary ERC1967Utils {\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit IERC1967.Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the ERC-1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit IERC1967.AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the ERC-1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit IERC1967.BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"},"@openzeppelin/contracts/proxy/Proxy.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/Proxy.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n * be specified by overriding the virtual {_implementation} function.\n *\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n * different contract through the {_delegate} function.\n *\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\n */\nabstract contract Proxy {\n    /**\n     * @dev Delegates the current call to `implementation`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _delegate(address implementation) internal virtual {\n        assembly {\n            // Copy msg.data. We take full control of memory in this inline assembly\n            // block because it will not return to Solidity code. We overwrite the\n            // Solidity scratch pad at memory position 0.\n            calldatacopy(0, 0, calldatasize())\n\n            // Call the implementation.\n            // out and outsize are 0 because we don't know the size yet.\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\n\n            // Copy the returned data.\n            returndatacopy(0, 0, returndatasize())\n\n            switch result\n            // delegatecall returns 0 on error.\n            case 0 {\n                revert(0, returndatasize())\n            }\n            default {\n                return(0, returndatasize())\n            }\n        }\n    }\n\n    /**\n     * @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n     * function and {_fallback} should delegate.\n     */\n    function _implementation() internal view virtual returns (address);\n\n    /**\n     * @dev Delegates the current call to the address returned by `_implementation()`.\n     *\n     * This function does not return to its internal call site, it will return directly to the external caller.\n     */\n    function _fallback() internal virtual {\n        _delegate(_implementation());\n    }\n\n    /**\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n     * function in the contract matches the call data.\n     */\n    fallback() external payable virtual {\n        _fallback();\n    }\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS\n    }\n\n    /**\n     * @dev The signature derives the `address(0)`.\n     */\n    error ECDSAInvalidSignature();\n\n    /**\n     * @dev The signature has an invalid length.\n     */\n    error ECDSAInvalidSignatureLength(uint256 length);\n\n    /**\n     * @dev The signature has an S value that is in the upper half order.\n     */\n    error ECDSAInvalidSignatureS(bytes32 s);\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n     * return address(0) without also returning an error description. Errors are documented using an enum (error type)\n     * and a bytes32 providing additional information about the error.\n     *\n     * If no error is returned, then the address can be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes memory signature\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            assembly (\"memory-safe\") {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength, bytes32(signature.length));\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, signature);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        unchecked {\n            bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n            // We do not check for an overflow here since the shift operation results in 0 or 1.\n            uint8 v = uint8((uint256(vs) >> 255) + 27);\n            return tryRecover(hash, v, r, s);\n        }\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     */\n    function recover(bytes32 hash, bytes32 r, bytes32 vs) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, r, vs);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address recovered, RecoverError err, bytes32 errArg) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS, s);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature, bytes32(0));\n        }\n\n        return (signer, RecoverError.NoError, bytes32(0));\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(bytes32 hash, uint8 v, bytes32 r, bytes32 s) internal pure returns (address) {\n        (address recovered, RecoverError error, bytes32 errorArg) = tryRecover(hash, v, r, s);\n        _throwError(error, errorArg);\n        return recovered;\n    }\n\n    /**\n     * @dev Optionally reverts with the corresponding custom error according to the `error` argument provided.\n     */\n    function _throwError(RecoverError error, bytes32 errorArg) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert ECDSAInvalidSignature();\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert ECDSAInvalidSignatureLength(uint256(errorArg));\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert ECDSAInvalidSignatureS(errorArg);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/EIP712.sol)\n\npragma solidity ^0.8.20;\n\nimport {MessageHashUtils} from \"./MessageHashUtils.sol\";\nimport {ShortStrings, ShortString} from \"../ShortStrings.sol\";\nimport {IERC5267} from \"../../interfaces/IERC5267.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n * encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n * does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n * produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n * separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n * separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n *\n * @custom:oz-upgrades-unsafe-allow state-variable-immutable\n */\nabstract contract EIP712 is IERC5267 {\n    using ShortStrings for *;\n\n    bytes32 private constant TYPE_HASH =\n        keccak256(\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\");\n\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _cachedDomainSeparator;\n    uint256 private immutable _cachedChainId;\n    address private immutable _cachedThis;\n\n    bytes32 private immutable _hashedName;\n    bytes32 private immutable _hashedVersion;\n\n    ShortString private immutable _name;\n    ShortString private immutable _version;\n    string private _nameFallback;\n    string private _versionFallback;\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        _name = name.toShortStringWithFallback(_nameFallback);\n        _version = version.toShortStringWithFallback(_versionFallback);\n        _hashedName = keccak256(bytes(name));\n        _hashedVersion = keccak256(bytes(version));\n\n        _cachedChainId = block.chainid;\n        _cachedDomainSeparator = _buildDomainSeparator();\n        _cachedThis = address(this);\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _cachedThis && block.chainid == _cachedChainId) {\n            return _cachedDomainSeparator;\n        } else {\n            return _buildDomainSeparator();\n        }\n    }\n\n    function _buildDomainSeparator() private view returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, _hashedName, _hashedVersion, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return MessageHashUtils.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n\n    /**\n     * @dev See {IERC-5267}.\n     */\n    function eip712Domain()\n        public\n        view\n        virtual\n        returns (\n            bytes1 fields,\n            string memory name,\n            string memory version,\n            uint256 chainId,\n            address verifyingContract,\n            bytes32 salt,\n            uint256[] memory extensions\n        )\n    {\n        return (\n            hex\"0f\", // 01111\n            _EIP712Name(),\n            _EIP712Version(),\n            block.chainid,\n            address(this),\n            bytes32(0),\n            new uint256[](0)\n        );\n    }\n\n    /**\n     * @dev The name parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _name which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Name() internal view returns (string memory) {\n        return _name.toStringWithFallback(_nameFallback);\n    }\n\n    /**\n     * @dev The version parameter for the EIP712 domain.\n     *\n     * NOTE: By default this function reads _version which is an immutable value.\n     * It only reads from storage if necessary (in case the value is too large to fit in a ShortString).\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function _EIP712Version() internal view returns (string memory) {\n        return _version.toStringWithFallback(_versionFallback);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/cryptography/MessageHashUtils.sol)\n\npragma solidity ^0.8.20;\n\nimport {Strings} from \"../Strings.sol\";\n\n/**\n * @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n *\n * The library provides methods for generating a hash of a message that conforms to the\n * https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n * specifications.\n */\nlibrary MessageHashUtils {\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing a bytes32 `messageHash` with\n     * `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n     * keccak256, although any bytes32 value can be safely used because the final digest will\n     * be re-hashed.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes32 messageHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            mstore(0x00, \"\\x19Ethereum Signed Message:\\n32\") // 32 is the bytes-length of messageHash\n            mstore(0x1c, messageHash) // 0x1c (28) is the length of the prefix\n            digest := keccak256(0x00, 0x3c) // 0x3c is the length of the prefix (0x1c) + messageHash (0x20)\n        }\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x45` (`personal_sign` messages).\n     *\n     * The digest is calculated by prefixing an arbitrary `message` with\n     * `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n     * hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toEthSignedMessageHash(bytes memory message) internal pure returns (bytes32) {\n        return\n            keccak256(bytes.concat(\"\\x19Ethereum Signed Message:\\n\", bytes(Strings.toString(message.length)), message));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an ERC-191 signed data with version\n     * `0x00` (data with intended validator).\n     *\n     * The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n     * `validator` address. Then hashing the result.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toDataWithIntendedValidatorHash(address validator, bytes memory data) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(hex\"19_00\", validator, data));\n    }\n\n    /**\n     * @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n     *\n     * The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n     * `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n     *\n     * See {ECDSA-recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32 digest) {\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            mstore(ptr, hex\"19_01\")\n            mstore(add(ptr, 0x02), domainSeparator)\n            mstore(add(ptr, 0x22), structHash)\n            digest := keccak256(ptr, 0x42)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Errors.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\nimport {Panic} from \"../Panic.sol\";\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow).\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow).\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero).\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool success, uint256 result) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, uint256 a, uint256 b) internal pure returns (uint256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * SafeCast.toUint(condition));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n\n        // The following calculation ensures accurate ceiling division without overflow.\n        // Since a is non-zero, (a - 1) / b will not overflow.\n        // The largest possible result occurs when (a - 1) / b is type(uint256).max,\n        // but the largest value we can obtain is type(uint256).max - 1, which happens\n        // when a = type(uint256).max and b = 1.\n        unchecked {\n            return SafeCast.toUint(a > 0) * ((a - 1) / b + 1);\n        }\n    }\n\n    /**\n     * @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     *\n     * Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2²⁵⁶ and mod 2²⁵⁶ - 1, then use\n            // the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2²⁵⁶ + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2²⁵⁶. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                Panic.panic(ternary(denominator == 0, Panic.DIVISION_BY_ZERO, Panic.UNDER_OVERFLOW));\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2²⁵⁶ / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2²⁵⁶. Now that denominator is an odd number, it has an inverse modulo 2²⁵⁶ such\n            // that denominator * inv ≡ 1 mod 2²⁵⁶. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv ≡ 1 mod 2⁴.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹⁶\n            inverse *= 2 - denominator * inverse; // inverse mod 2³²\n            inverse *= 2 - denominator * inverse; // inverse mod 2⁶⁴\n            inverse *= 2 - denominator * inverse; // inverse mod 2¹²⁸\n            inverse *= 2 - denominator * inverse; // inverse mod 2²⁵⁶\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2²⁵⁶. Since the preconditions guarantee that the outcome is\n            // less than 2²⁵⁶, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @dev Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        return mulDiv(x, y, denominator) + SafeCast.toUint(unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0);\n    }\n\n    /**\n     * @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n     *\n     * If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n     * If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n     *\n     * If the input value is not inversible, 0 is returned.\n     *\n     * NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n     * inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}.\n     */\n    function invMod(uint256 a, uint256 n) internal pure returns (uint256) {\n        unchecked {\n            if (n == 0) return 0;\n\n            // The inverse modulo is calculated using the Extended Euclidean Algorithm (iterative version)\n            // Used to compute integers x and y such that: ax + ny = gcd(a, n).\n            // When the gcd is 1, then the inverse of a modulo n exists and it's x.\n            // ax + ny = 1\n            // ax = 1 + (-y)n\n            // ax ≡ 1 (mod n) # x is the inverse of a modulo n\n\n            // If the remainder is 0 the gcd is n right away.\n            uint256 remainder = a % n;\n            uint256 gcd = n;\n\n            // Therefore the initial coefficients are:\n            // ax + ny = gcd(a, n) = n\n            // 0a + 1n = n\n            int256 x = 0;\n            int256 y = 1;\n\n            while (remainder != 0) {\n                uint256 quotient = gcd / remainder;\n\n                (gcd, remainder) = (\n                    // The old remainder is the next gcd to try.\n                    remainder,\n                    // Compute the next remainder.\n                    // Can't overflow given that (a % gcd) * (gcd // (a % gcd)) <= gcd\n                    // where gcd is at most n (capped to type(uint256).max)\n                    gcd - remainder * quotient\n                );\n\n                (x, y) = (\n                    // Increment the coefficient of a.\n                    y,\n                    // Decrement the coefficient of n.\n                    // Can overflow, but the result is casted to uint256 so that the\n                    // next value of y is \"wrapped around\" to a value between 0 and n - 1.\n                    x - y * int256(quotient)\n                );\n            }\n\n            if (gcd != 1) return 0; // No inverse exists.\n            return ternary(x < 0, n - uint256(-x), uint256(x)); // Wrap the result if it's negative.\n        }\n    }\n\n    /**\n     * @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n     *\n     * From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n     * prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n     * `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n     *\n     * NOTE: this function does NOT check that `p` is a prime greater than `2`.\n     */\n    function invModPrime(uint256 a, uint256 p) internal view returns (uint256) {\n        unchecked {\n            return Math.modExp(a, p - 2, p);\n        }\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n     *\n     * Requirements:\n     * - modulus can't be zero\n     * - underlying staticcall to precompile must succeed\n     *\n     * IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n     * sure the chain you're using it on supports the precompiled contract for modular exponentiation\n     * at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n     * the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n     * interpreted as 0.\n     */\n    function modExp(uint256 b, uint256 e, uint256 m) internal view returns (uint256) {\n        (bool success, uint256 result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n     * It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n     * to operate modulo 0 or if the underlying precompile reverted.\n     *\n     * IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n     * you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n     * https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n     * of a revert, but the result may be incorrectly interpreted as 0.\n     */\n    function tryModExp(uint256 b, uint256 e, uint256 m) internal view returns (bool success, uint256 result) {\n        if (m == 0) return (false, 0);\n        assembly (\"memory-safe\") {\n            let ptr := mload(0x40)\n            // | Offset    | Content    | Content (Hex)                                                      |\n            // |-----------|------------|--------------------------------------------------------------------|\n            // | 0x00:0x1f | size of b  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x20:0x3f | size of e  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x40:0x5f | size of m  | 0x0000000000000000000000000000000000000000000000000000000000000020 |\n            // | 0x60:0x7f | value of b | 0x<.............................................................b> |\n            // | 0x80:0x9f | value of e | 0x<.............................................................e> |\n            // | 0xa0:0xbf | value of m | 0x<.............................................................m> |\n            mstore(ptr, 0x20)\n            mstore(add(ptr, 0x20), 0x20)\n            mstore(add(ptr, 0x40), 0x20)\n            mstore(add(ptr, 0x60), b)\n            mstore(add(ptr, 0x80), e)\n            mstore(add(ptr, 0xa0), m)\n\n            // Given the result < m, it's guaranteed to fit in 32 bytes,\n            // so we can use the memory scratch space located at offset 0.\n            success := staticcall(gas(), 0x05, ptr, 0xc0, 0x00, 0x20)\n            result := mload(0x00)\n        }\n    }\n\n    /**\n     * @dev Variant of {modExp} that supports inputs of arbitrary length.\n     */\n    function modExp(bytes memory b, bytes memory e, bytes memory m) internal view returns (bytes memory) {\n        (bool success, bytes memory result) = tryModExp(b, e, m);\n        if (!success) {\n            Panic.panic(Panic.DIVISION_BY_ZERO);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Variant of {tryModExp} that supports inputs of arbitrary length.\n     */\n    function tryModExp(\n        bytes memory b,\n        bytes memory e,\n        bytes memory m\n    ) internal view returns (bool success, bytes memory result) {\n        if (_zeroBytes(m)) return (false, new bytes(0));\n\n        uint256 mLen = m.length;\n\n        // Encode call args in result and move the free memory pointer\n        result = abi.encodePacked(b.length, e.length, mLen, b, e, m);\n\n        assembly (\"memory-safe\") {\n            let dataPtr := add(result, 0x20)\n            // Write result on top of args to avoid allocating extra memory.\n            success := staticcall(gas(), 0x05, dataPtr, mload(result), dataPtr, mLen)\n            // Overwrite the length.\n            // result.length > returndatasize() is guaranteed because returndatasize() == m.length\n            mstore(result, mLen)\n            // Set the memory pointer after the returned data.\n            mstore(0x40, add(dataPtr, mLen))\n        }\n    }\n\n    /**\n     * @dev Returns whether the provided byte array is zero.\n     */\n    function _zeroBytes(bytes memory byteArray) private pure returns (bool) {\n        for (uint256 i = 0; i < byteArray.length; ++i) {\n            if (byteArray[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n     * using integer operations.\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        unchecked {\n            // Take care of easy edge cases when a == 0 or a == 1\n            if (a <= 1) {\n                return a;\n            }\n\n            // In this function, we use Newton's method to get a root of `f(x) := x² - a`. It involves building a\n            // sequence x_n that converges toward sqrt(a). For each iteration x_n, we also define the error between\n            // the current value as `ε_n = | x_n - sqrt(a) |`.\n            //\n            // For our first estimation, we consider `e` the smallest power of 2 which is bigger than the square root\n            // of the target. (i.e. `2**(e-1) ≤ sqrt(a) < 2**e`). We know that `e ≤ 128` because `(2¹²⁸)² = 2²⁵⁶` is\n            // bigger than any uint256.\n            //\n            // By noticing that\n            // `2**(e-1) ≤ sqrt(a) < 2**e → (2**(e-1))² ≤ a < (2**e)² → 2**(2*e-2) ≤ a < 2**(2*e)`\n            // we can deduce that `e - 1` is `log2(a) / 2`. We can thus compute `x_n = 2**(e-1)` using a method similar\n            // to the msb function.\n            uint256 aa = a;\n            uint256 xn = 1;\n\n            if (aa >= (1 << 128)) {\n                aa >>= 128;\n                xn <<= 64;\n            }\n            if (aa >= (1 << 64)) {\n                aa >>= 64;\n                xn <<= 32;\n            }\n            if (aa >= (1 << 32)) {\n                aa >>= 32;\n                xn <<= 16;\n            }\n            if (aa >= (1 << 16)) {\n                aa >>= 16;\n                xn <<= 8;\n            }\n            if (aa >= (1 << 8)) {\n                aa >>= 8;\n                xn <<= 4;\n            }\n            if (aa >= (1 << 4)) {\n                aa >>= 4;\n                xn <<= 2;\n            }\n            if (aa >= (1 << 2)) {\n                xn <<= 1;\n            }\n\n            // We now have x_n such that `x_n = 2**(e-1) ≤ sqrt(a) < 2**e = 2 * x_n`. This implies ε_n ≤ 2**(e-1).\n            //\n            // We can refine our estimation by noticing that the middle of that interval minimizes the error.\n            // If we move x_n to equal 2**(e-1) + 2**(e-2), then we reduce the error to ε_n ≤ 2**(e-2).\n            // This is going to be our x_0 (and ε_0)\n            xn = (3 * xn) >> 1; // ε_0 := | x_0 - sqrt(a) | ≤ 2**(e-2)\n\n            // From here, Newton's method give us:\n            // x_{n+1} = (x_n + a / x_n) / 2\n            //\n            // One should note that:\n            // x_{n+1}² - a = ((x_n + a / x_n) / 2)² - a\n            //              = ((x_n² + a) / (2 * x_n))² - a\n            //              = (x_n⁴ + 2 * a * x_n² + a²) / (4 * x_n²) - a\n            //              = (x_n⁴ + 2 * a * x_n² + a² - 4 * a * x_n²) / (4 * x_n²)\n            //              = (x_n⁴ - 2 * a * x_n² + a²) / (4 * x_n²)\n            //              = (x_n² - a)² / (2 * x_n)²\n            //              = ((x_n² - a) / (2 * x_n))²\n            //              ≥ 0\n            // Which proves that for all n ≥ 1, sqrt(a) ≤ x_n\n            //\n            // This gives us the proof of quadratic convergence of the sequence:\n            // ε_{n+1} = | x_{n+1} - sqrt(a) |\n            //         = | (x_n + a / x_n) / 2 - sqrt(a) |\n            //         = | (x_n² + a - 2*x_n*sqrt(a)) / (2 * x_n) |\n            //         = | (x_n - sqrt(a))² / (2 * x_n) |\n            //         = | ε_n² / (2 * x_n) |\n            //         = ε_n² / | (2 * x_n) |\n            //\n            // For the first iteration, we have a special case where x_0 is known:\n            // ε_1 = ε_0² / | (2 * x_0) |\n            //     ≤ (2**(e-2))² / (2 * (2**(e-1) + 2**(e-2)))\n            //     ≤ 2**(2*e-4) / (3 * 2**(e-1))\n            //     ≤ 2**(e-3) / 3\n            //     ≤ 2**(e-3-log2(3))\n            //     ≤ 2**(e-4.5)\n            //\n            // For the following iterations, we use the fact that, 2**(e-1) ≤ sqrt(a) ≤ x_n:\n            // ε_{n+1} = ε_n² / | (2 * x_n) |\n            //         ≤ (2**(e-k))² / (2 * 2**(e-1))\n            //         ≤ 2**(2*e-2*k) / 2**e\n            //         ≤ 2**(e-2*k)\n            xn = (xn + a / xn) >> 1; // ε_1 := | x_1 - sqrt(a) | ≤ 2**(e-4.5)  -- special case, see above\n            xn = (xn + a / xn) >> 1; // ε_2 := | x_2 - sqrt(a) | ≤ 2**(e-9)    -- general case with k = 4.5\n            xn = (xn + a / xn) >> 1; // ε_3 := | x_3 - sqrt(a) | ≤ 2**(e-18)   -- general case with k = 9\n            xn = (xn + a / xn) >> 1; // ε_4 := | x_4 - sqrt(a) | ≤ 2**(e-36)   -- general case with k = 18\n            xn = (xn + a / xn) >> 1; // ε_5 := | x_5 - sqrt(a) | ≤ 2**(e-72)   -- general case with k = 36\n            xn = (xn + a / xn) >> 1; // ε_6 := | x_6 - sqrt(a) | ≤ 2**(e-144)  -- general case with k = 72\n\n            // Because e ≤ 128 (as discussed during the first estimation phase), we know have reached a precision\n            // ε_6 ≤ 2**(e-144) < 1. Given we're operating on integers, then we can ensure that xn is now either\n            // sqrt(a) or sqrt(a) + 1.\n            return xn - SafeCast.toUint(xn > a / xn);\n        }\n    }\n\n    /**\n     * @dev Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && result * result < a);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 exp;\n        unchecked {\n            exp = 128 * SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 64 * SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 32 * SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 16 * SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 8 * SafeCast.toUint(value > (1 << 8) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 4 * SafeCast.toUint(value > (1 << 4) - 1);\n            value >>= exp;\n            result += exp;\n\n            exp = 2 * SafeCast.toUint(value > (1 << 2) - 1);\n            value >>= exp;\n            result += exp;\n\n            result += SafeCast.toUint(value > 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 10 ** result < value);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        uint256 isGt;\n        unchecked {\n            isGt = SafeCast.toUint(value > (1 << 128) - 1);\n            value >>= isGt * 128;\n            result += isGt * 16;\n\n            isGt = SafeCast.toUint(value > (1 << 64) - 1);\n            value >>= isGt * 64;\n            result += isGt * 8;\n\n            isGt = SafeCast.toUint(value > (1 << 32) - 1);\n            value >>= isGt * 32;\n            result += isGt * 4;\n\n            isGt = SafeCast.toUint(value > (1 << 16) - 1);\n            value >>= isGt * 16;\n            result += isGt * 2;\n\n            result += SafeCast.toUint(value > (1 << 8) - 1);\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + SafeCast.toUint(unsignedRoundsUp(rounding) && 1 << (result << 3) < value);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n\n    /**\n     * @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump.\n     */\n    function toUint(bool b) internal pure returns (uint256 u) {\n        assembly (\"memory-safe\") {\n            u := iszero(iszero(b))\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\nimport {SafeCast} from \"./SafeCast.sol\";\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n     *\n     * IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n     * However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n     * one branch when needed, making this function more expensive.\n     */\n    function ternary(bool condition, int256 a, int256 b) internal pure returns (int256) {\n        unchecked {\n            // branchless ternary works because:\n            // b ^ (a ^ b) == a\n            // b ^ 0 == b\n            return b ^ ((a ^ b) * int256(SafeCast.toUint(condition)));\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a > b, a, b);\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return ternary(a < b, a, b);\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // Formula from the \"Bit Twiddling Hacks\" by Sean Eron Anderson.\n            // Since `n` is a signed integer, the generated bytecode will use the SAR opcode to perform the right shift,\n            // taking advantage of the most significant (or \"sign\" bit) in two's complement representation.\n            // This opcode adds new most significant bits set to the value of the previous most significant bit. As a result,\n            // the mask will either be `bytes32(0)` (if n is positive) or `~bytes32(0)` (if n is negative).\n            int256 mask = n >> 255;\n\n            // A `bytes32(0)` mask leaves the input unchanged, while a `~bytes32(0)` mask complements it.\n            return uint256((n + mask) ^ mask);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Panic.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Panic.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Helper library for emitting standardized panic codes.\n *\n * ```solidity\n * contract Example {\n *      using Panic for uint256;\n *\n *      // Use any of the declared internal constants\n *      function foo() { Panic.GENERIC.panic(); }\n *\n *      // Alternatively\n *      function foo() { Panic.panic(Panic.GENERIC); }\n * }\n * ```\n *\n * Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n *\n * _Available since v5.1._\n */\n// slither-disable-next-line unused-state\nlibrary Panic {\n    /// @dev generic / unspecified error\n    uint256 internal constant GENERIC = 0x00;\n    /// @dev used by the assert() builtin\n    uint256 internal constant ASSERT = 0x01;\n    /// @dev arithmetic underflow or overflow\n    uint256 internal constant UNDER_OVERFLOW = 0x11;\n    /// @dev division or modulo by zero\n    uint256 internal constant DIVISION_BY_ZERO = 0x12;\n    /// @dev enum conversion error\n    uint256 internal constant ENUM_CONVERSION_ERROR = 0x21;\n    /// @dev invalid encoding in storage\n    uint256 internal constant STORAGE_ENCODING_ERROR = 0x22;\n    /// @dev empty array pop\n    uint256 internal constant EMPTY_ARRAY_POP = 0x31;\n    /// @dev array out of bounds access\n    uint256 internal constant ARRAY_OUT_OF_BOUNDS = 0x32;\n    /// @dev resource error (too large allocation or too large array)\n    uint256 internal constant RESOURCE_ERROR = 0x41;\n    /// @dev calling invalid internal function\n    uint256 internal constant INVALID_INTERNAL_FUNCTION = 0x51;\n\n    /// @dev Reverts with a panic code. Recommended to use with\n    /// the internal constants with predefined codes.\n    function panic(uint256 code) internal pure {\n        assembly (\"memory-safe\") {\n            mstore(0x00, 0x4e487b71)\n            mstore(0x20, code)\n            revert(0x1c, 0x24)\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/ShortStrings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/ShortStrings.sol)\n\npragma solidity ^0.8.20;\n\nimport {StorageSlot} from \"./StorageSlot.sol\";\n\n// | string  | 0xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA   |\n// | length  | 0x                                                              BB |\ntype ShortString is bytes32;\n\n/**\n * @dev This library provides functions to convert short memory strings\n * into a `ShortString` type that can be used as an immutable variable.\n *\n * Strings of arbitrary length can be optimized using this library if\n * they are short enough (up to 31 bytes) by packing them with their\n * length (1 byte) in a single EVM word (32 bytes). Additionally, a\n * fallback mechanism can be used for every other case.\n *\n * Usage example:\n *\n * ```solidity\n * contract Named {\n *     using ShortStrings for *;\n *\n *     ShortString private immutable _name;\n *     string private _nameFallback;\n *\n *     constructor(string memory contractName) {\n *         _name = contractName.toShortStringWithFallback(_nameFallback);\n *     }\n *\n *     function name() external view returns (string memory) {\n *         return _name.toStringWithFallback(_nameFallback);\n *     }\n * }\n * ```\n */\nlibrary ShortStrings {\n    // Used as an identifier for strings longer than 31 bytes.\n    bytes32 private constant FALLBACK_SENTINEL = 0x00000000000000000000000000000000000000000000000000000000000000FF;\n\n    error StringTooLong(string str);\n    error InvalidShortString();\n\n    /**\n     * @dev Encode a string of at most 31 chars into a `ShortString`.\n     *\n     * This will trigger a `StringTooLong` error is the input string is too long.\n     */\n    function toShortString(string memory str) internal pure returns (ShortString) {\n        bytes memory bstr = bytes(str);\n        if (bstr.length > 31) {\n            revert StringTooLong(str);\n        }\n        return ShortString.wrap(bytes32(uint256(bytes32(bstr)) | bstr.length));\n    }\n\n    /**\n     * @dev Decode a `ShortString` back to a \"normal\" string.\n     */\n    function toString(ShortString sstr) internal pure returns (string memory) {\n        uint256 len = byteLength(sstr);\n        // using `new string(len)` would work locally but is not memory safe.\n        string memory str = new string(32);\n        assembly (\"memory-safe\") {\n            mstore(str, len)\n            mstore(add(str, 0x20), sstr)\n        }\n        return str;\n    }\n\n    /**\n     * @dev Return the length of a `ShortString`.\n     */\n    function byteLength(ShortString sstr) internal pure returns (uint256) {\n        uint256 result = uint256(ShortString.unwrap(sstr)) & 0xFF;\n        if (result > 31) {\n            revert InvalidShortString();\n        }\n        return result;\n    }\n\n    /**\n     * @dev Encode a string into a `ShortString`, or write it to storage if it is too long.\n     */\n    function toShortStringWithFallback(string memory value, string storage store) internal returns (ShortString) {\n        if (bytes(value).length < 32) {\n            return toShortString(value);\n        } else {\n            StorageSlot.getStringSlot(store).value = value;\n            return ShortString.wrap(FALLBACK_SENTINEL);\n        }\n    }\n\n    /**\n     * @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}.\n     */\n    function toStringWithFallback(ShortString value, string storage store) internal pure returns (string memory) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return toString(value);\n        } else {\n            return store;\n        }\n    }\n\n    /**\n     * @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n     * {setWithFallback}.\n     *\n     * WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n     * actual characters as the UTF-8 encoding of a single character can span over multiple bytes.\n     */\n    function byteLengthWithFallback(ShortString value, string storage store) internal view returns (uint256) {\n        if (ShortString.unwrap(value) != FALLBACK_SENTINEL) {\n            return byteLength(value);\n        } else {\n            return bytes(store).length;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/StorageSlot.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC-1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n *\n * TIP: Consider using this library along with {SlotDerivation}.\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct Int256Slot {\n        int256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `Int256Slot` with member `value` located at `slot`.\n     */\n    function getInt256Slot(bytes32 slot) internal pure returns (Int256Slot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns a `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns a `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        assembly (\"memory-safe\") {\n            r.slot := store.slot\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            assembly (\"memory-safe\") {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                assembly (\"memory-safe\") {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n     * representation, according to EIP-55.\n     */\n    function toChecksumHexString(address addr) internal pure returns (string memory) {\n        bytes memory buffer = bytes(toHexString(addr));\n\n        // hash the hex part of buffer (skip length + 2 bytes, length 40)\n        uint256 hashValue;\n        assembly (\"memory-safe\") {\n            hashValue := shr(96, keccak256(add(buffer, 0x22), 40))\n        }\n\n        for (uint256 i = 41; i > 1; --i) {\n            // possible values for buffer[i] are 48 (0) to 57 (9) and 97 (a) to 102 (f)\n            if (hashValue & 0xf > 7 && uint8(buffer[i]) > 96) {\n                // case shift by xoring with 0x20\n                buffer[i] ^= 0x20;\n            }\n            hashValue >>= 4;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"},"contracts/PepenadeCrush.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.27;\r\n\r\nimport {UUPSUpgradeable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport {Initializable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport {EIP712Upgradeable} from \"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\";\r\nimport {Ownable2StepUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\";\r\n\r\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport {EIP712} from \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\r\n\r\n/// @title Fear & Greed: Pepenade Crush\r\n/// @notice TODO\r\ncontract PepenadeCrush is\r\n    Initializable,\r\n    UUPSUpgradeable,\r\n    EIP712Upgradeable,\r\n    Ownable2StepUpgradeable\r\n{\r\n    /// @notice The address of the backend wallet that will sign the messages\r\n    address public backendSigner;\r\n\r\n    /// @notice The message struct containing the player address, score and nonce\r\n    struct ScoreMessage {\r\n        address player;\r\n        uint256 score;\r\n        string nonce;\r\n    }\r\n\r\n    /// @notice Event emitted when player's high score reaches a milestone\r\n    event MilestoneReached(\r\n        address indexed player,\r\n        uint256 milestoneIndex,\r\n        uint256 highScore,\r\n        bool isCrew\r\n    );\r\n\r\n    /// @notice Event emitted when the backend wallet address is set\r\n    event BackendSignerSet(address backendSigner);\r\n\r\n    /// @dev Custom errors\r\n    error NonceAlreadyUsed(string nonce);\r\n    error InvalidSigner();\r\n    error ScoreBelowThreshold(uint score, uint threshold);\r\n\r\n    /// @notice Mapping of player address to their high score\r\n    mapping(address => uint256) public highScore;\r\n\r\n    /// @notice Mapping of player address to their high score milestones\r\n    mapping(address => uint256) public reachedMilestoneIndex;\r\n\r\n    /// @notice Mapping of crew address to their high score\r\n    mapping(address => uint256) public crewHighScore;\r\n\r\n    /// @notice Mapping of crew address to their high score milestones\r\n    mapping(address => uint256) public crewReachedMilestoneIndex;\r\n\r\n    /// @notice Mapping of nonce to a boolean indicating if it was already used\r\n    mapping(string => bool) public nonces;\r\n\r\n    /// @notice Initializes the contract with the backend wallet address and the deployer as the owner\r\n    /// @param _backendSigner The address of the backend wallet\r\n    function initialize(address _backendSigner) external initializer {\r\n        __Ownable_init(msg.sender);\r\n        __EIP712_init(\"PepenadeCrush\", \"1\");\r\n        setBackendSigner(_backendSigner);\r\n    }\r\n\r\n    /// @notice Adds a score to a player's current score\r\n    /// @param message The message containing the player address, score and nonce\r\n    /// @param signature The signature of the message signed by the backend wallet\r\n    function setHighScore(\r\n        ScoreMessage memory message,\r\n        bytes memory signature\r\n    ) external {\r\n        _setHighScore(message, signature, false);\r\n    }\r\n\r\n    function setCrewHighScore(\r\n        ScoreMessage memory message,\r\n        bytes memory signature\r\n    ) external {\r\n        _setHighScore(message, signature, true);\r\n    }\r\n\r\n    function _setHighScore(\r\n        ScoreMessage memory message,\r\n        bytes memory signature,\r\n        bool isCrew\r\n    ) private {\r\n        _consumeNonce(message.nonce);\r\n        _verifySignature(message, signature);\r\n\r\n        mapping (address => uint256) storage scoreMapping = isCrew ? crewHighScore : highScore;\r\n        mapping (address => uint256) storage reachedMilestoneMapping = isCrew ? crewReachedMilestoneIndex : reachedMilestoneIndex;\r\n\r\n        uint256 newScore = message.score;\r\n        uint256 currentMilestone = reachedMilestoneMapping[message.player];\r\n        uint256 nextMilestoneScore = getMilestoneScore(currentMilestone + 1);\r\n\r\n        // Prevent player from setting a score lower than the next milestone\r\n        if (newScore < nextMilestoneScore) {\r\n            revert ScoreBelowThreshold(newScore, nextMilestoneScore);\r\n        }\r\n\r\n        // Player can beat multiple milestones in one go, so we keep checking the next milestone until it's higher than the new score\r\n        while (newScore >= nextMilestoneScore) {\r\n            reachedMilestoneMapping[message.player]++;\r\n            nextMilestoneScore = getMilestoneScore(reachedMilestoneMapping[message.player] + 1);\r\n\r\n            emit MilestoneReached(\r\n                message.player,\r\n                reachedMilestoneMapping[message.player],\r\n                newScore,\r\n                isCrew\r\n            );\r\n        }\r\n\r\n        // Update the player's high score\r\n        scoreMapping[message.player] = newScore;\r\n    }\r\n\r\n    /// @notice Calculates the score for a given milestone\r\n    /// @dev The milestones are calculated as Fibonacci numbers, starting from 10\r\n    /// @param milestoneIndex The 1-based index of the milestone. The first milestone to beat has index 1\r\n    /// @return uint256\r\n    function getMilestoneScore(\r\n        uint256 milestoneIndex\r\n    ) public pure returns (uint256) {\r\n        if (milestoneIndex == 0) {\r\n            return 0;\r\n        }\r\n        if (milestoneIndex == 1) {\r\n            return 10;\r\n        }\r\n\r\n        uint256 a = 10;\r\n        uint256 b = 20;\r\n        for (uint256 i = 2; i < milestoneIndex; i++) {\r\n            uint256 c = a + b;\r\n            a = b;\r\n            b = c;\r\n        }\r\n\r\n        return b;\r\n    }\r\n\r\n    /// @notice Utility function to check if the message encoding is valid\r\n    /// @param message The message containing the player address, score and nonce\r\n    /// @param encodedMessage Hashed, ABI encoded message\r\n    function isMessageEncodingValid(\r\n        ScoreMessage memory message,\r\n        bytes32 encodedMessage\r\n    ) public view returns (bool) {\r\n        return _verifyMessage(message, encodedMessage);\r\n    }\r\n\r\n    /// @notice Utility function to get the signer of a message\r\n    /// @param message The message containing the player address, score and nonce\r\n    /// @param signature The signature of the message\r\n    function getSigner(\r\n        ScoreMessage memory message,\r\n        bytes memory signature\r\n    ) public view returns (address) {\r\n        return\r\n            ECDSA.recover(_hashTypedDataV4(_hashMessage(message)), signature);\r\n    }\r\n\r\n    /// @notice Sets the backend wallet address. Can only be called by the owner\r\n    /// @param _backendSigner The address of the backend wallet\r\n    function setBackendSigner(address _backendSigner) public onlyOwner {\r\n        backendSigner = _backendSigner;\r\n        emit BackendSignerSet(_backendSigner);\r\n    }\r\n\r\n    /// @dev Verifies if the message was constructed correctly\r\n    /// @param message The message containing the player address, score, nonce\r\n    /// @param rawMessage The raw message\r\n    /// @return bool\r\n    function _verifyMessage(\r\n        ScoreMessage memory message,\r\n        bytes32 rawMessage\r\n    ) private view returns (bool) {\r\n        bytes32 expectedDigest = _hashTypedDataV4(_hashMessage(message));\r\n        bytes32 digest = _hashTypedDataV4(rawMessage);\r\n        return expectedDigest == digest;\r\n    }\r\n\r\n    /// @dev Verifies if the message was signed by the backend wallet. Reverts with InvalidSigner if not\r\n    /// @param message The message containing the player address, score, nonce\r\n    /// @param signature The signature of the message\r\n    function _verifySignature(\r\n        ScoreMessage memory message,\r\n        bytes memory signature\r\n    ) private view {\r\n        bytes32 digest = _hashTypedDataV4(_hashMessage(message));\r\n        address signer = ECDSA.recover(digest, signature);\r\n        if (signer != backendSigner) {\r\n            revert InvalidSigner();\r\n        }\r\n    }\r\n\r\n    /// @notice Validates whether a nonce was already used and marks it as used\r\n    /// @param nonce The nonce to validate\r\n    /// @dev Reverts with NonceAlreadyUsed if the nonce was already used\r\n    function _consumeNonce(string memory nonce) private {\r\n        if (nonces[nonce]) {\r\n            revert NonceAlreadyUsed(nonce);\r\n        }\r\n\r\n        nonces[nonce] = true;\r\n    }\r\n\r\n    /// @dev ABI encodes the message and hashes it using keccak256\r\n    /// @param message The message containing the player address, score, nonce\r\n    /// @return bytes32\r\n    function _hashMessage(\r\n        ScoreMessage memory message\r\n    ) private pure returns (bytes32) {\r\n        return\r\n            keccak256(\r\n                abi.encode(\r\n                    keccak256(\r\n                        \"ScoreMessage(address player,uint256 score,string nonce)\"\r\n                    ),\r\n                    message.player,\r\n                    message.score,\r\n                    keccak256(bytes(message.nonce))\r\n                )\r\n            );\r\n    }\r\n\r\n    /// @dev Upgrades the contract to a new implementation\r\n    /// @param newImplementation The address of the new implementation\r\n    function _authorizeUpgrade(\r\n        address newImplementation\r\n    ) internal override onlyOwner {}\r\n}\r\n"},"contracts/Proxy.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.27;\r\n\r\nimport \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\";\r\n"},"contracts/test/PepenadeCrushV2Test.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\r\npragma solidity 0.8.27;\r\n\r\nimport {UUPSUpgradeable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\r\nimport {Initializable} from \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\r\nimport {EIP712Upgradeable} from \"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\";\r\nimport {Ownable2StepUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\";\r\n\r\nimport {ECDSA} from \"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\";\r\nimport {EIP712} from \"@openzeppelin/contracts/utils/cryptography/EIP712.sol\";\r\n\r\n/// @title HighScore contract for upgrade testing purposes\r\n/// @notice UUPS upgradable contract, used to store the high score for Pepenade Crush game by utilizing EIP-712 standard\r\ncontract PepenadeCrushV2Test is\r\n    Initializable,\r\n    UUPSUpgradeable,\r\n    EIP712Upgradeable,\r\n    Ownable2StepUpgradeable\r\n{\r\n    /// @notice The address of the backend wallet that will sign the messages\r\n    address public backendSigner;\r\n\r\n    /// @notice Mapping of player address to their high score\r\n    mapping(address => uint256) public highScore;\r\n\r\n    /// @notice Mapping of nonces to check if they were already used\r\n    mapping(string => bool) public nonces;\r\n\r\n    /// @notice The version of the contract\r\n    string public version = \"2.0.0\";\r\n\r\n    /// @notice Sets the high score for a player\r\n    /// @param player The player address\r\n    /// @param score The score to set\r\n    function addScore(\r\n        address player,\r\n        uint256 score\r\n    ) external {\r\n        highScore[player] += score;\r\n    }\r\n\r\n    /// @dev Upgrades the contract to a new implementation\r\n    /// @param newImplementation The address of the new implementation\r\n    function _authorizeUpgrade(\r\n        address newImplementation\r\n    ) internal override onlyOwner {}\r\n}\r\n"}},"settings":{"evmVersion":"paris","optimizer":{"enabled":true,"mode":"3"},"outputSelection":{"*":{"*":["abi","evm.methodIdentifiers","metadata"],"":["ast"]}},"detectMissingLibraries":false,"forceEVMLA":false,"enableEraVMExtensions":false,"libraries":{}}},"output":{"errors":[{"component":"general","formattedMessage":"Warning: The `codegen` setting will become mandatory in future versions of zksolc. Please set it to either `evmla` or `yul`.\n","message":"The `codegen` setting will become mandatory in future versions of zksolc. Please set it to either `evmla` or `yul`.","severity":"warning","type":"Warning"}],"version":"0.8.27","long_version":"0.8.27+commit.fd3a7203.mod.Windows.clang","zk_version":"1.5.8","sources":{"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol":{"id":0,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol","exportedSymbols":{"Initializable":[585],"Ownable2StepUpgradeable":[136],"OwnableUpgradeable":[331]},"id":137,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:0"},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","file":"./OwnableUpgradeable.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":137,"sourceUnit":332,"src":"133:60:0","symbolAliases":[{"foreign":{"id":2,"name":"OwnableUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"141:18:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":137,"sourceUnit":586,"src":"194:63:0","symbolAliases":[{"foreign":{"id":4,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"202:13:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Initializable","nameLocations":["1115:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":585,"src":"1115:13:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1115:13:0"},{"baseName":{"id":9,"name":"OwnableUpgradeable","nameLocations":["1130:18:0"],"nodeType":"IdentifierPath","referencedDeclaration":331,"src":"1130:18:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1130:18:0"}],"canonicalName":"Ownable2StepUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"259:810:0","text":" @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n This extension of the {Ownable} contract includes a two-step mechanism to transfer\n ownership, where the new owner must call {acceptOwnership} in order to replace the\n old one. This can help prevent common mistakes, such as transfers of ownership to\n incorrect accounts, or to contracts that are unable to interact with the\n permission system.\n The initial owner is specified at deployment time in the constructor for `Ownable`. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."},"fullyImplemented":true,"id":136,"linearizedBaseContracts":[136,331,813,585],"name":"Ownable2StepUpgradeable","nameLocation":"1088:23:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Ownable2StepUpgradeable.Ownable2StepStorage","documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"1155:70:0","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable2Step"},"id":14,"members":[{"constant":false,"id":13,"mutability":"mutable","name":"_pendingOwner","nameLocation":"1275:13:0","nodeType":"VariableDeclaration","scope":14,"src":"1267:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"1267:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Ownable2StepStorage","nameLocation":"1237:19:0","nodeType":"StructDefinition","scope":136,"src":"1230:65:0","visibility":"public"},{"constant":true,"id":17,"mutability":"constant","name":"Ownable2StepStorageLocation","nameLocation":"1442:27:0","nodeType":"VariableDeclaration","scope":136,"src":"1417:121:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":15,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1417:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307832333765313538323232653365363936386237326239646230643830343361616366303734616439663635306630643136303662346438326565343332633030","id":16,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1472:66:0","typeDescriptions":{"typeIdentifier":"t_rational_16053720875717120191110171845200109550086765943194951757191984851604933389312_by_1","typeString":"int_const 1605...(69 digits omitted)...9312"},"value":"0x237e158222e3e6968b72b9db0d8043aacf074ad9f650f0d1606b4d82ee432c00"},"visibility":"private"},{"body":{"id":24,"nodeType":"Block","src":"1633:86:0","statements":[{"AST":{"nativeSrc":"1652:61:0","nodeType":"YulBlock","src":"1652:61:0","statements":[{"nativeSrc":"1666:37:0","nodeType":"YulAssignment","src":"1666:37:0","value":{"name":"Ownable2StepStorageLocation","nativeSrc":"1676:27:0","nodeType":"YulIdentifier","src":"1676:27:0"},"variableNames":[{"name":"$.slot","nativeSrc":"1666:6:0","nodeType":"YulIdentifier","src":"1666:6:0"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":21,"isOffset":false,"isSlot":true,"src":"1666:6:0","suffix":"slot","valueSize":1},{"declaration":17,"isOffset":false,"isSlot":false,"src":"1676:27:0","valueSize":1}],"id":23,"nodeType":"InlineAssembly","src":"1643:70:0"}]},"id":25,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnable2StepStorage","nameLocation":"1554:23:0","nodeType":"FunctionDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[],"src":"1577:2:0"},"returnParameters":{"id":22,"nodeType":"ParameterList","parameters":[{"constant":false,"id":21,"mutability":"mutable","name":"$","nameLocation":"1630:1:0","nodeType":"VariableDeclaration","scope":25,"src":"1602:29:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Ownable2StepStorage_$14_storage_ptr","typeString":"struct Ownable2StepUpgradeable.Ownable2StepStorage"},"typeName":{"id":20,"nodeType":"UserDefinedTypeName","pathNode":{"id":19,"name":"Ownable2StepStorage","nameLocations":["1602:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"1602:19:0"},"referencedDeclaration":14,"src":"1602:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Ownable2StepStorage_$14_storage_ptr","typeString":"struct Ownable2StepUpgradeable.Ownable2StepStorage"}},"visibility":"internal"}],"src":"1601:31:0"},"scope":136,"src":"1545:174:0","stateMutability":"pure","virtual":false,"visibility":"private"},{"anonymous":false,"eventSelector":"38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700","id":31,"name":"OwnershipTransferStarted","nameLocation":"1731:24:0","nodeType":"EventDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1772:13:0","nodeType":"VariableDeclaration","scope":31,"src":"1756:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":26,"name":"address","nodeType":"ElementaryTypeName","src":"1756:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":29,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1803:8:0","nodeType":"VariableDeclaration","scope":31,"src":"1787:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28,"name":"address","nodeType":"ElementaryTypeName","src":"1787:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1755:57:0"},"src":"1725:88:0"},{"body":{"id":36,"nodeType":"Block","src":"1876:7:0","statements":[]},"id":37,"implemented":true,"kind":"function","modifiers":[{"id":34,"kind":"modifierInvocation","modifierName":{"id":33,"name":"onlyInitializing","nameLocations":["1859:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":494,"src":"1859:16:0"},"nodeType":"ModifierInvocation","src":"1859:16:0"}],"name":"__Ownable2Step_init","nameLocation":"1828:19:0","nodeType":"FunctionDefinition","parameters":{"id":32,"nodeType":"ParameterList","parameters":[],"src":"1847:2:0"},"returnParameters":{"id":35,"nodeType":"ParameterList","parameters":[],"src":"1876:0:0"},"scope":136,"src":"1819:64:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":42,"nodeType":"Block","src":"1956:7:0","statements":[]},"id":43,"implemented":true,"kind":"function","modifiers":[{"id":40,"kind":"modifierInvocation","modifierName":{"id":39,"name":"onlyInitializing","nameLocations":["1939:16:0"],"nodeType":"IdentifierPath","referencedDeclaration":494,"src":"1939:16:0"},"nodeType":"ModifierInvocation","src":"1939:16:0"}],"name":"__Ownable2Step_init_unchained","nameLocation":"1898:29:0","nodeType":"FunctionDefinition","parameters":{"id":38,"nodeType":"ParameterList","parameters":[],"src":"1927:2:0"},"returnParameters":{"id":41,"nodeType":"ParameterList","parameters":[],"src":"1956:0:0"},"scope":136,"src":"1889:74:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":58,"nodeType":"Block","src":"2100:106:0","statements":[{"assignments":[51],"declarations":[{"constant":false,"id":51,"mutability":"mutable","name":"$","nameLocation":"2138:1:0","nodeType":"VariableDeclaration","scope":58,"src":"2110:29:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Ownable2StepStorage_$14_storage_ptr","typeString":"struct Ownable2StepUpgradeable.Ownable2StepStorage"},"typeName":{"id":50,"nodeType":"UserDefinedTypeName","pathNode":{"id":49,"name":"Ownable2StepStorage","nameLocations":["2110:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2110:19:0"},"referencedDeclaration":14,"src":"2110:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Ownable2StepStorage_$14_storage_ptr","typeString":"struct Ownable2StepUpgradeable.Ownable2StepStorage"}},"visibility":"internal"}],"id":54,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":52,"name":"_getOwnable2StepStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2142:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Ownable2StepStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer)"}},"id":53,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2142:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Ownable2StepStorage_$14_storage_ptr","typeString":"struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2110:57:0"},{"expression":{"expression":{"id":55,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":51,"src":"2184:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Ownable2StepStorage_$14_storage_ptr","typeString":"struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"}},"id":56,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2186:13:0","memberName":"_pendingOwner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2184:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":48,"id":57,"nodeType":"Return","src":"2177:22:0"}]},"documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"1968:65:0","text":" @dev Returns the address of the pending owner."},"functionSelector":"e30c3978","id":59,"implemented":true,"kind":"function","modifiers":[],"name":"pendingOwner","nameLocation":"2047:12:0","nodeType":"FunctionDefinition","parameters":{"id":45,"nodeType":"ParameterList","parameters":[],"src":"2059:2:0"},"returnParameters":{"id":48,"nodeType":"ParameterList","parameters":[{"constant":false,"id":47,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":59,"src":"2091:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":46,"name":"address","nodeType":"ElementaryTypeName","src":"2091:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2090:9:0"},"scope":136,"src":"2038:168:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[301],"body":{"id":86,"nodeType":"Block","src":"2603:168:0","statements":[{"assignments":[70],"declarations":[{"constant":false,"id":70,"mutability":"mutable","name":"$","nameLocation":"2641:1:0","nodeType":"VariableDeclaration","scope":86,"src":"2613:29:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Ownable2StepStorage_$14_storage_ptr","typeString":"struct Ownable2StepUpgradeable.Ownable2StepStorage"},"typeName":{"id":69,"nodeType":"UserDefinedTypeName","pathNode":{"id":68,"name":"Ownable2StepStorage","nameLocations":["2613:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"2613:19:0"},"referencedDeclaration":14,"src":"2613:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Ownable2StepStorage_$14_storage_ptr","typeString":"struct Ownable2StepUpgradeable.Ownable2StepStorage"}},"visibility":"internal"}],"id":73,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":71,"name":"_getOwnable2StepStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2645:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Ownable2StepStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer)"}},"id":72,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2645:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Ownable2StepStorage_$14_storage_ptr","typeString":"struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2613:57:0"},{"expression":{"id":78,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":74,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":70,"src":"2680:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Ownable2StepStorage_$14_storage_ptr","typeString":"struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"}},"id":76,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"2682:13:0","memberName":"_pendingOwner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"2680:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"2698:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2680:26:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":79,"nodeType":"ExpressionStatement","src":"2680:26:0"},{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":81,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"2746:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2746:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":83,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":62,"src":"2755:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":80,"name":"OwnershipTransferStarted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":31,"src":"2721:24:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2721:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"EmitStatement","src":"2716:48:0"}]},"documentation":{"id":60,"nodeType":"StructuredDocumentation","src":"2212:307:0","text":" @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner.\n Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."},"functionSelector":"f2fde38b","id":87,"implemented":true,"kind":"function","modifiers":[{"id":66,"kind":"modifierInvocation","modifierName":{"id":65,"name":"onlyOwner","nameLocations":["2593:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":226,"src":"2593:9:0"},"nodeType":"ModifierInvocation","src":"2593:9:0"}],"name":"transferOwnership","nameLocation":"2533:17:0","nodeType":"FunctionDefinition","overrides":{"id":64,"nodeType":"OverrideSpecifier","overrides":[],"src":"2584:8:0"},"parameters":{"id":63,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"newOwner","nameLocation":"2559:8:0","nodeType":"VariableDeclaration","scope":87,"src":"2551:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"2551:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2550:18:0"},"returnParameters":{"id":67,"nodeType":"ParameterList","parameters":[],"src":"2603:0:0"},"scope":136,"src":"2524:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[330],"body":{"id":110,"nodeType":"Block","src":"3027:150:0","statements":[{"assignments":[96],"declarations":[{"constant":false,"id":96,"mutability":"mutable","name":"$","nameLocation":"3065:1:0","nodeType":"VariableDeclaration","scope":110,"src":"3037:29:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Ownable2StepStorage_$14_storage_ptr","typeString":"struct Ownable2StepUpgradeable.Ownable2StepStorage"},"typeName":{"id":95,"nodeType":"UserDefinedTypeName","pathNode":{"id":94,"name":"Ownable2StepStorage","nameLocations":["3037:19:0"],"nodeType":"IdentifierPath","referencedDeclaration":14,"src":"3037:19:0"},"referencedDeclaration":14,"src":"3037:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_Ownable2StepStorage_$14_storage_ptr","typeString":"struct Ownable2StepUpgradeable.Ownable2StepStorage"}},"visibility":"internal"}],"id":99,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":97,"name":"_getOwnable2StepStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"3069:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_Ownable2StepStorage_$14_storage_ptr_$","typeString":"function () pure returns (struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer)"}},"id":98,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3069:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Ownable2StepStorage_$14_storage_ptr","typeString":"struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3037:57:0"},{"expression":{"id":102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3104:22:0","subExpression":{"expression":{"id":100,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":96,"src":"3111:1:0","typeDescriptions":{"typeIdentifier":"t_struct$_Ownable2StepStorage_$14_storage_ptr","typeString":"struct Ownable2StepUpgradeable.Ownable2StepStorage storage pointer"}},"id":101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3113:13:0","memberName":"_pendingOwner","nodeType":"MemberAccess","referencedDeclaration":13,"src":"3111:15:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":103,"nodeType":"ExpressionStatement","src":"3104:22:0"},{"expression":{"arguments":[{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":90,"src":"3161:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":104,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3136:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_Ownable2StepUpgradeable_$136_$","typeString":"type(contract super Ownable2StepUpgradeable)"}},"id":106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3142:18:0","memberName":"_transferOwnership","nodeType":"MemberAccess","referencedDeclaration":330,"src":"3136:24:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3136:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"ExpressionStatement","src":"3136:34:0"}]},"documentation":{"id":88,"nodeType":"StructuredDocumentation","src":"2777:173:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2964:18:0","nodeType":"FunctionDefinition","overrides":{"id":92,"nodeType":"OverrideSpecifier","overrides":[],"src":"3018:8:0"},"parameters":{"id":91,"nodeType":"ParameterList","parameters":[{"constant":false,"id":90,"mutability":"mutable","name":"newOwner","nameLocation":"2991:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2983:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89,"name":"address","nodeType":"ElementaryTypeName","src":"2983:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2982:18:0"},"returnParameters":{"id":93,"nodeType":"ParameterList","parameters":[],"src":"3027:0:0"},"scope":136,"src":"2955:222:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":134,"nodeType":"Block","src":"3299:187:0","statements":[{"assignments":[116],"declarations":[{"constant":false,"id":116,"mutability":"mutable","name":"sender","nameLocation":"3317:6:0","nodeType":"VariableDeclaration","scope":134,"src":"3309:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":115,"name":"address","nodeType":"ElementaryTypeName","src":"3309:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":119,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":117,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"3326:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3326:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3309:29:0"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":120,"name":"pendingOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":59,"src":"3352:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3352:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":122,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"3370:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3352:24:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3348:96:0","trueBody":{"id":128,"nodeType":"Block","src":"3378:66:0","statements":[{"errorCall":{"arguments":[{"id":125,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"3426:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":124,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"3399:26:0","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3399:34:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":127,"nodeType":"RevertStatement","src":"3392:41:0"}]}},{"expression":{"arguments":[{"id":131,"name":"sender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":116,"src":"3472:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":130,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[111],"referencedDeclaration":111,"src":"3453:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3453:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":133,"nodeType":"ExpressionStatement","src":"3453:26:0"}]},"documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"3183:69:0","text":" @dev The new owner accepts the ownership transfer."},"functionSelector":"79ba5097","id":135,"implemented":true,"kind":"function","modifiers":[],"name":"acceptOwnership","nameLocation":"3266:15:0","nodeType":"FunctionDefinition","parameters":{"id":113,"nodeType":"ParameterList","parameters":[],"src":"3281:2:0"},"returnParameters":{"id":114,"nodeType":"ParameterList","parameters":[],"src":"3299:0:0"},"scope":136,"src":"3257:229:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":137,"src":"1070:2418:0","usedErrors":[167,172,348,351],"usedEvents":[31,178,356]}],"src":"107:3382:0"}},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"id":1,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[813],"Initializable":[585],"OwnableUpgradeable":[331]},"id":332,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":138,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"102:24:1"},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","file":"../utils/ContextUpgradeable.sol","id":140,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":332,"sourceUnit":814,"src":"128:67:1","symbolAliases":[{"foreign":{"id":139,"name":"ContextUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":813,"src":"136:18:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":332,"sourceUnit":586,"src":"196:63:1","symbolAliases":[{"foreign":{"id":141,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"204:13:1","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":144,"name":"Initializable","nameLocations":["789:13:1"],"nodeType":"IdentifierPath","referencedDeclaration":585,"src":"789:13:1"},"id":145,"nodeType":"InheritanceSpecifier","src":"789:13:1"},{"baseName":{"id":146,"name":"ContextUpgradeable","nameLocations":["804:18:1"],"nodeType":"IdentifierPath","referencedDeclaration":813,"src":"804:18:1"},"id":147,"nodeType":"InheritanceSpecifier","src":"804:18:1"}],"canonicalName":"OwnableUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":143,"nodeType":"StructuredDocumentation","src":"261:487:1","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":331,"linearizedBaseContracts":[331,813,585],"name":"OwnableUpgradeable","nameLocation":"767:18:1","nodeType":"ContractDefinition","nodes":[{"canonicalName":"OwnableUpgradeable.OwnableStorage","documentation":{"id":148,"nodeType":"StructuredDocumentation","src":"829:65:1","text":"@custom:storage-location erc7201:openzeppelin.storage.Ownable"},"id":151,"members":[{"constant":false,"id":150,"mutability":"mutable","name":"_owner","nameLocation":"939:6:1","nodeType":"VariableDeclaration","scope":151,"src":"931:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":149,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"OwnableStorage","nameLocation":"906:14:1","nodeType":"StructDefinition","scope":331,"src":"899:53:1","visibility":"public"},{"constant":true,"id":154,"mutability":"constant","name":"OwnableStorageLocation","nameLocation":"1094:22:1","nodeType":"VariableDeclaration","scope":331,"src":"1069:116:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1069:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1119:66:1","typeDescriptions":{"typeIdentifier":"t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1","typeString":"int_const 6517...(69 digits omitted)...7328"},"value":"0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"},"visibility":"private"},{"body":{"id":161,"nodeType":"Block","src":"1270:81:1","statements":[{"AST":{"nativeSrc":"1289:56:1","nodeType":"YulBlock","src":"1289:56:1","statements":[{"nativeSrc":"1303:32:1","nodeType":"YulAssignment","src":"1303:32:1","value":{"name":"OwnableStorageLocation","nativeSrc":"1313:22:1","nodeType":"YulIdentifier","src":"1313:22:1"},"variableNames":[{"name":"$.slot","nativeSrc":"1303:6:1","nodeType":"YulIdentifier","src":"1303:6:1"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":158,"isOffset":false,"isSlot":true,"src":"1303:6:1","suffix":"slot","valueSize":1},{"declaration":154,"isOffset":false,"isSlot":false,"src":"1313:22:1","valueSize":1}],"id":160,"nodeType":"InlineAssembly","src":"1280:65:1"}]},"id":162,"implemented":true,"kind":"function","modifiers":[],"name":"_getOwnableStorage","nameLocation":"1201:18:1","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[],"src":"1219:2:1"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"$","nameLocation":"1267:1:1","nodeType":"VariableDeclaration","scope":162,"src":"1244:24:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$151_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":157,"nodeType":"UserDefinedTypeName","pathNode":{"id":156,"name":"OwnableStorage","nameLocations":["1244:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":151,"src":"1244:14:1"},"referencedDeclaration":151,"src":"1244:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$151_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"src":"1243:26:1"},"scope":331,"src":"1192:159:1","stateMutability":"pure","virtual":false,"visibility":"private"},{"documentation":{"id":163,"nodeType":"StructuredDocumentation","src":"1357:85:1","text":" @dev The caller account is not authorized to perform an operation."},"errorSelector":"118cdaa7","id":167,"name":"OwnableUnauthorizedAccount","nameLocation":"1453:26:1","nodeType":"ErrorDefinition","parameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":165,"mutability":"mutable","name":"account","nameLocation":"1488:7:1","nodeType":"VariableDeclaration","scope":167,"src":"1480:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":164,"name":"address","nodeType":"ElementaryTypeName","src":"1480:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1479:17:1"},"src":"1447:50:1"},{"documentation":{"id":168,"nodeType":"StructuredDocumentation","src":"1503:82:1","text":" @dev The owner is not a valid owner account. (eg. `address(0)`)"},"errorSelector":"1e4fbdf7","id":172,"name":"OwnableInvalidOwner","nameLocation":"1596:19:1","nodeType":"ErrorDefinition","parameters":{"id":171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":170,"mutability":"mutable","name":"owner","nameLocation":"1624:5:1","nodeType":"VariableDeclaration","scope":172,"src":"1616:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":169,"name":"address","nodeType":"ElementaryTypeName","src":"1616:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1615:15:1"},"src":"1590:41:1"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":178,"name":"OwnershipTransferred","nameLocation":"1643:20:1","nodeType":"EventDefinition","parameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":174,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"1680:13:1","nodeType":"VariableDeclaration","scope":178,"src":"1664:29:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":173,"name":"address","nodeType":"ElementaryTypeName","src":"1664:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":176,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"1711:8:1","nodeType":"VariableDeclaration","scope":178,"src":"1695:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":175,"name":"address","nodeType":"ElementaryTypeName","src":"1695:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1663:57:1"},"src":"1637:84:1"},{"body":{"id":190,"nodeType":"Block","src":"1919:55:1","statements":[{"expression":{"arguments":[{"id":187,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":181,"src":"1954:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":186,"name":"__Ownable_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"1929:24:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1929:38:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":189,"nodeType":"ExpressionStatement","src":"1929:38:1"}]},"documentation":{"id":179,"nodeType":"StructuredDocumentation","src":"1727:115:1","text":" @dev Initializes the contract setting the address provided by the deployer as the initial owner."},"id":191,"implemented":true,"kind":"function","modifiers":[{"id":184,"kind":"modifierInvocation","modifierName":{"id":183,"name":"onlyInitializing","nameLocations":["1902:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":494,"src":"1902:16:1"},"nodeType":"ModifierInvocation","src":"1902:16:1"}],"name":"__Ownable_init","nameLocation":"1856:14:1","nodeType":"FunctionDefinition","parameters":{"id":182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":181,"mutability":"mutable","name":"initialOwner","nameLocation":"1879:12:1","nodeType":"VariableDeclaration","scope":191,"src":"1871:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":180,"name":"address","nodeType":"ElementaryTypeName","src":"1871:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1870:22:1"},"returnParameters":{"id":185,"nodeType":"ParameterList","parameters":[],"src":"1919:0:1"},"scope":331,"src":"1847:127:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":217,"nodeType":"Block","src":"2062:153:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":198,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2076:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":201,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2100:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2092:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":199,"name":"address","nodeType":"ElementaryTypeName","src":"2092:7:1","typeDescriptions":{}}},"id":202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2092:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2076:26:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":212,"nodeType":"IfStatement","src":"2072:95:1","trueBody":{"id":211,"nodeType":"Block","src":"2104:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2153:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":206,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":205,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:1","typeDescriptions":{}}},"id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":204,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"2125:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2125:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":210,"nodeType":"RevertStatement","src":"2118:38:1"}]}},{"expression":{"arguments":[{"id":214,"name":"initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"2195:12:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":213,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"2176:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":216,"nodeType":"ExpressionStatement","src":"2176:32:1"}]},"id":218,"implemented":true,"kind":"function","modifiers":[{"id":196,"kind":"modifierInvocation","modifierName":{"id":195,"name":"onlyInitializing","nameLocations":["2045:16:1"],"nodeType":"IdentifierPath","referencedDeclaration":494,"src":"2045:16:1"},"nodeType":"ModifierInvocation","src":"2045:16:1"}],"name":"__Ownable_init_unchained","nameLocation":"1989:24:1","nodeType":"FunctionDefinition","parameters":{"id":194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"initialOwner","nameLocation":"2022:12:1","nodeType":"VariableDeclaration","scope":218,"src":"2014:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2014:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2013:22:1"},"returnParameters":{"id":197,"nodeType":"ParameterList","parameters":[],"src":"2062:0:1"},"scope":331,"src":"1980:235:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":225,"nodeType":"Block","src":"2324:41:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":221,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":259,"src":"2334:11:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2334:13:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":223,"nodeType":"ExpressionStatement","src":"2334:13:1"},{"id":224,"nodeType":"PlaceholderStatement","src":"2357:1:1"}]},"documentation":{"id":219,"nodeType":"StructuredDocumentation","src":"2221:77:1","text":" @dev Throws if called by any account other than the owner."},"id":226,"name":"onlyOwner","nameLocation":"2312:9:1","nodeType":"ModifierDefinition","parameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"2321:2:1"},"src":"2303:62:1","virtual":false,"visibility":"internal"},{"body":{"id":241,"nodeType":"Block","src":"2496:89:1","statements":[{"assignments":[234],"declarations":[{"constant":false,"id":234,"mutability":"mutable","name":"$","nameLocation":"2529:1:1","nodeType":"VariableDeclaration","scope":241,"src":"2506:24:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$151_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":233,"nodeType":"UserDefinedTypeName","pathNode":{"id":232,"name":"OwnableStorage","nameLocations":["2506:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":151,"src":"2506:14:1"},"referencedDeclaration":151,"src":"2506:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$151_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":237,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":235,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2533:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$151_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2533:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$151_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"2506:47:1"},{"expression":{"expression":{"id":238,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":234,"src":"2570:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$151_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2572:6:1","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":150,"src":"2570:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":231,"id":240,"nodeType":"Return","src":"2563:15:1"}]},"documentation":{"id":227,"nodeType":"StructuredDocumentation","src":"2371:65:1","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":242,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"2450:5:1","nodeType":"FunctionDefinition","parameters":{"id":228,"nodeType":"ParameterList","parameters":[],"src":"2455:2:1"},"returnParameters":{"id":231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":242,"src":"2487:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":229,"name":"address","nodeType":"ElementaryTypeName","src":"2487:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2486:9:1"},"scope":331,"src":"2441:144:1","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":258,"nodeType":"Block","src":"2703:117:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":250,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":246,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":242,"src":"2717:5:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2717:7:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":248,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"2728:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2728:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2717:23:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":257,"nodeType":"IfStatement","src":"2713:101:1","trueBody":{"id":256,"nodeType":"Block","src":"2742:72:1","statements":[{"errorCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":252,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":795,"src":"2790:10:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2790:12:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":251,"name":"OwnableUnauthorizedAccount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":167,"src":"2763:26:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":254,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2763:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":255,"nodeType":"RevertStatement","src":"2756:47:1"}]}}]},"documentation":{"id":243,"nodeType":"StructuredDocumentation","src":"2591:62:1","text":" @dev Throws if the sender is not the owner."},"id":259,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"2667:11:1","nodeType":"FunctionDefinition","parameters":{"id":244,"nodeType":"ParameterList","parameters":[],"src":"2678:2:1"},"returnParameters":{"id":245,"nodeType":"ParameterList","parameters":[],"src":"2703:0:1"},"scope":331,"src":"2658:162:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":272,"nodeType":"Block","src":"3209:47:1","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3246:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3238:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":266,"name":"address","nodeType":"ElementaryTypeName","src":"3238:7:1","typeDescriptions":{}}},"id":269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3238:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":265,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3219:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3219:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":271,"nodeType":"ExpressionStatement","src":"3219:30:1"}]},"documentation":{"id":260,"nodeType":"StructuredDocumentation","src":"2826:324:1","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":273,"implemented":true,"kind":"function","modifiers":[{"id":263,"kind":"modifierInvocation","modifierName":{"id":262,"name":"onlyOwner","nameLocations":["3199:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":226,"src":"3199:9:1"},"nodeType":"ModifierInvocation","src":"3199:9:1"}],"name":"renounceOwnership","nameLocation":"3164:17:1","nodeType":"FunctionDefinition","parameters":{"id":261,"nodeType":"ParameterList","parameters":[],"src":"3181:2:1"},"returnParameters":{"id":264,"nodeType":"ParameterList","parameters":[],"src":"3209:0:1"},"scope":331,"src":"3155:101:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":300,"nodeType":"Block","src":"3475:145:1","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":281,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3489:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3509:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3501:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":282,"name":"address","nodeType":"ElementaryTypeName","src":"3501:7:1","typeDescriptions":{}}},"id":285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3501:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3489:22:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":295,"nodeType":"IfStatement","src":"3485:91:1","trueBody":{"id":294,"nodeType":"Block","src":"3513:63:1","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3562:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":289,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3554:7:1","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"3554:7:1","typeDescriptions":{}}},"id":291,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3554:10:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":287,"name":"OwnableInvalidOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":172,"src":"3534:19:1","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3534:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":293,"nodeType":"RevertStatement","src":"3527:38:1"}]}},{"expression":{"arguments":[{"id":297,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":276,"src":"3604:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":296,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3585:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3585:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":299,"nodeType":"ExpressionStatement","src":"3585:28:1"}]},"documentation":{"id":274,"nodeType":"StructuredDocumentation","src":"3262:138:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":301,"implemented":true,"kind":"function","modifiers":[{"id":279,"kind":"modifierInvocation","modifierName":{"id":278,"name":"onlyOwner","nameLocations":["3465:9:1"],"nodeType":"IdentifierPath","referencedDeclaration":226,"src":"3465:9:1"},"nodeType":"ModifierInvocation","src":"3465:9:1"}],"name":"transferOwnership","nameLocation":"3414:17:1","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"newOwner","nameLocation":"3440:8:1","nodeType":"VariableDeclaration","scope":301,"src":"3432:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"3432:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3431:18:1"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[],"src":"3475:0:1"},"scope":331,"src":"3405:215:1","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":329,"nodeType":"Block","src":"3837:185:1","statements":[{"assignments":[309],"declarations":[{"constant":false,"id":309,"mutability":"mutable","name":"$","nameLocation":"3870:1:1","nodeType":"VariableDeclaration","scope":329,"src":"3847:24:1","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$151_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"},"typeName":{"id":308,"nodeType":"UserDefinedTypeName","pathNode":{"id":307,"name":"OwnableStorage","nameLocations":["3847:14:1"],"nodeType":"IdentifierPath","referencedDeclaration":151,"src":"3847:14:1"},"referencedDeclaration":151,"src":"3847:14:1","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$151_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage"}},"visibility":"internal"}],"id":312,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":310,"name":"_getOwnableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"3874:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$151_storage_ptr_$","typeString":"function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"}},"id":311,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3874:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$151_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3847:47:1"},{"assignments":[314],"declarations":[{"constant":false,"id":314,"mutability":"mutable","name":"oldOwner","nameLocation":"3912:8:1","nodeType":"VariableDeclaration","scope":329,"src":"3904:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":313,"name":"address","nodeType":"ElementaryTypeName","src":"3904:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":317,"initialValue":{"expression":{"id":315,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"3923:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$151_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3925:6:1","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":150,"src":"3923:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3904:27:1"},{"expression":{"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":318,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":309,"src":"3941:1:1","typeDescriptions":{"typeIdentifier":"t_struct$_OwnableStorage_$151_storage_ptr","typeString":"struct OwnableUpgradeable.OwnableStorage storage pointer"}},"id":320,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3943:6:1","memberName":"_owner","nodeType":"MemberAccess","referencedDeclaration":150,"src":"3941:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":321,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"3952:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3941:19:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":323,"nodeType":"ExpressionStatement","src":"3941:19:1"},{"eventCall":{"arguments":[{"id":325,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"3996:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":326,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":304,"src":"4006:8:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":324,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":178,"src":"3975:20:1","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":327,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3975:40:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":328,"nodeType":"EmitStatement","src":"3970:45:1"}]},"documentation":{"id":302,"nodeType":"StructuredDocumentation","src":"3626:143:1","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":330,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"3783:18:1","nodeType":"FunctionDefinition","parameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"newOwner","nameLocation":"3810:8:1","nodeType":"VariableDeclaration","scope":330,"src":"3802:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"3802:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3801:18:1"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[],"src":"3837:0:1"},"scope":331,"src":"3774:248:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":332,"src":"749:3275:1","usedErrors":[167,172,348,351],"usedEvents":[178,356]}],"src":"102:3923:1"}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"id":2,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","exportedSymbols":{"Initializable":[585]},"id":586,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":333,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"139:2209:2","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="},"fullyImplemented":true,"id":585,"linearizedBaseContracts":[585],"name":"Initializable","nameLocation":"2367:13:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Initializable.InitializableStorage","documentation":{"id":335,"nodeType":"StructuredDocumentation","src":"2387:293:2","text":" @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"},"id":342,"members":[{"constant":false,"id":338,"mutability":"mutable","name":"_initialized","nameLocation":"2820:12:2","nodeType":"VariableDeclaration","scope":342,"src":"2813:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":337,"name":"uint64","nodeType":"ElementaryTypeName","src":"2813:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"_initializing","nameLocation":"2955:13:2","nodeType":"VariableDeclaration","scope":342,"src":"2950:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":340,"name":"bool","nodeType":"ElementaryTypeName","src":"2950:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"InitializableStorage","nameLocation":"2692:20:2","nodeType":"StructDefinition","scope":585,"src":"2685:290:2","visibility":"public"},{"constant":true,"id":345,"mutability":"constant","name":"INITIALIZABLE_STORAGE","nameLocation":"3123:21:2","nodeType":"VariableDeclaration","scope":585,"src":"3098:115:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":343,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3098:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030","id":344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3147:66:2","typeDescriptions":{"typeIdentifier":"t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1","typeString":"int_const 1089...(70 digits omitted)...9600"},"value":"0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"},"visibility":"private"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"3220:60:2","text":" @dev The contract is already initialized."},"errorSelector":"f92ee8a9","id":348,"name":"InvalidInitialization","nameLocation":"3291:21:2","nodeType":"ErrorDefinition","parameters":{"id":347,"nodeType":"ParameterList","parameters":[],"src":"3312:2:2"},"src":"3285:30:2"},{"documentation":{"id":349,"nodeType":"StructuredDocumentation","src":"3321:57:2","text":" @dev The contract is not initializing."},"errorSelector":"d7e6bcf8","id":351,"name":"NotInitializing","nameLocation":"3389:15:2","nodeType":"ErrorDefinition","parameters":{"id":350,"nodeType":"ParameterList","parameters":[],"src":"3404:2:2"},"src":"3383:24:2"},{"anonymous":false,"documentation":{"id":352,"nodeType":"StructuredDocumentation","src":"3413:90:2","text":" @dev Triggered when the contract has been initialized or reinitialized."},"eventSelector":"c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2","id":356,"name":"Initialized","nameLocation":"3514:11:2","nodeType":"EventDefinition","parameters":{"id":355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"indexed":false,"mutability":"mutable","name":"version","nameLocation":"3533:7:2","nodeType":"VariableDeclaration","scope":356,"src":"3526:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":353,"name":"uint64","nodeType":"ElementaryTypeName","src":"3526:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"3525:16:2"},"src":"3508:34:2"},{"body":{"id":438,"nodeType":"Block","src":"4092:1081:2","statements":[{"assignments":[361],"declarations":[{"constant":false,"id":361,"mutability":"mutable","name":"$","nameLocation":"4187:1:2","nodeType":"VariableDeclaration","scope":438,"src":"4158:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":360,"nodeType":"UserDefinedTypeName","pathNode":{"id":359,"name":"InitializableStorage","nameLocations":["4158:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":342,"src":"4158:20:2"},"referencedDeclaration":342,"src":"4158:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":364,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":362,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"4191:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$342_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4191:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"4158:59:2"},{"assignments":[366],"declarations":[{"constant":false,"id":366,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"4284:14:2","nodeType":"VariableDeclaration","scope":438,"src":"4279:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":365,"name":"bool","nodeType":"ElementaryTypeName","src":"4279:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":370,"initialValue":{"id":369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4301:16:2","subExpression":{"expression":{"id":367,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4302:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":368,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4304:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":341,"src":"4302:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4279:38:2"},{"assignments":[372],"declarations":[{"constant":false,"id":372,"mutability":"mutable","name":"initialized","nameLocation":"4334:11:2","nodeType":"VariableDeclaration","scope":438,"src":"4327:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":371,"name":"uint64","nodeType":"ElementaryTypeName","src":"4327:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"id":375,"initialValue":{"expression":{"id":373,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4348:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4350:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":338,"src":"4348:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"VariableDeclarationStatement","src":"4327:35:2"},{"assignments":[377],"declarations":[{"constant":false,"id":377,"mutability":"mutable","name":"initialSetup","nameLocation":"4711:12:2","nodeType":"VariableDeclaration","scope":438,"src":"4706:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":376,"name":"bool","nodeType":"ElementaryTypeName","src":"4706:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":383,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":378,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"4726:11:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":379,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4741:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4726:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":381,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"4746:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4726:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4706:54:2"},{"assignments":[385],"declarations":[{"constant":false,"id":385,"mutability":"mutable","name":"construction","nameLocation":"4775:12:2","nodeType":"VariableDeclaration","scope":438,"src":"4770:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":384,"name":"bool","nodeType":"ElementaryTypeName","src":"4770:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":398,"initialValue":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":386,"name":"initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":372,"src":"4790:11:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4805:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4790:16:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"arguments":[{"id":391,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4818:4:2","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$585","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$585","typeString":"contract Initializable"}],"id":390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4810:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":389,"name":"address","nodeType":"ElementaryTypeName","src":"4810:7:2","typeDescriptions":{}}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4810:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4824:4:2","memberName":"code","nodeType":"MemberAccess","src":"4810:18:2","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4829:6:2","memberName":"length","nodeType":"MemberAccess","src":"4810:25:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4839:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4810:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4790:50:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"4770:70:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4855:13:2","subExpression":{"id":399,"name":"initialSetup","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":377,"src":"4856:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4872:13:2","subExpression":{"id":401,"name":"construction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":385,"src":"4873:12:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4855:30:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":408,"nodeType":"IfStatement","src":"4851:91:2","trueBody":{"id":407,"nodeType":"Block","src":"4887:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":404,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"4908:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4908:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":406,"nodeType":"RevertStatement","src":"4901:30:2"}]}},{"expression":{"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":409,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"4951:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":411,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4953:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":338,"src":"4951:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":412,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4968:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4951:18:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":414,"nodeType":"ExpressionStatement","src":"4951:18:2"},{"condition":{"id":415,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"4983:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":423,"nodeType":"IfStatement","src":"4979:67:2","trueBody":{"id":422,"nodeType":"Block","src":"4999:47:2","statements":[{"expression":{"id":420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":416,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5013:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":418,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5015:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":341,"src":"5013:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":419,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5031:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5013:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":421,"nodeType":"ExpressionStatement","src":"5013:22:2"}]}},{"id":424,"nodeType":"PlaceholderStatement","src":"5055:1:2"},{"condition":{"id":425,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":366,"src":"5070:14:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":437,"nodeType":"IfStatement","src":"5066:101:2","trueBody":{"id":436,"nodeType":"Block","src":"5086:81:2","statements":[{"expression":{"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":426,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":361,"src":"5100:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":428,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"5102:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":341,"src":"5100:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":429,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5118:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5100:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":431,"nodeType":"ExpressionStatement","src":"5100:23:2"},{"eventCall":{"arguments":[{"hexValue":"31","id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5154:1:2","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":432,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"5142:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5142:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":435,"nodeType":"EmitStatement","src":"5137:19:2"}]}}]},"documentation":{"id":357,"nodeType":"StructuredDocumentation","src":"3548:516:2","text":" @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."},"id":439,"name":"initializer","nameLocation":"4078:11:2","nodeType":"ModifierDefinition","parameters":{"id":358,"nodeType":"ParameterList","parameters":[],"src":"4089:2:2"},"src":"4069:1104:2","virtual":false,"visibility":"internal"},{"body":{"id":485,"nodeType":"Block","src":"6291:392:2","statements":[{"assignments":[446],"declarations":[{"constant":false,"id":446,"mutability":"mutable","name":"$","nameLocation":"6386:1:2","nodeType":"VariableDeclaration","scope":485,"src":"6357:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":445,"nodeType":"UserDefinedTypeName","pathNode":{"id":444,"name":"InitializableStorage","nameLocations":["6357:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":342,"src":"6357:20:2"},"referencedDeclaration":342,"src":"6357:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":449,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":447,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"6390:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$342_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6390:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6357:59:2"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":450,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6431:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":451,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6433:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":341,"src":"6431:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":452,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6450:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":453,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6452:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":338,"src":"6450:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":454,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6468:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6450:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6431:44:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":461,"nodeType":"IfStatement","src":"6427:105:2","trueBody":{"id":460,"nodeType":"Block","src":"6477:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":457,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"6498:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6498:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":459,"nodeType":"RevertStatement","src":"6491:30:2"}]}},{"expression":{"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":462,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6541:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":464,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6543:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":338,"src":"6541:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":465,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6558:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"6541:24:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":467,"nodeType":"ExpressionStatement","src":"6541:24:2"},{"expression":{"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":468,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6575:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6577:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":341,"src":"6575:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6593:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6575:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":473,"nodeType":"ExpressionStatement","src":"6575:22:2"},{"id":474,"nodeType":"PlaceholderStatement","src":"6607:1:2"},{"expression":{"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":475,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":446,"src":"6618:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":477,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6620:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":341,"src":"6618:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":478,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6636:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6618:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":480,"nodeType":"ExpressionStatement","src":"6618:23:2"},{"eventCall":{"arguments":[{"id":482,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":442,"src":"6668:7:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":481,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"6656:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6656:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":484,"nodeType":"EmitStatement","src":"6651:25:2"}]},"documentation":{"id":440,"nodeType":"StructuredDocumentation","src":"5179:1068:2","text":" @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."},"id":486,"name":"reinitializer","nameLocation":"6261:13:2","nodeType":"ModifierDefinition","parameters":{"id":443,"nodeType":"ParameterList","parameters":[{"constant":false,"id":442,"mutability":"mutable","name":"version","nameLocation":"6282:7:2","nodeType":"VariableDeclaration","scope":486,"src":"6275:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":441,"name":"uint64","nodeType":"ElementaryTypeName","src":"6275:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"6274:16:2"},"src":"6252:431:2","virtual":false,"visibility":"internal"},{"body":{"id":493,"nodeType":"Block","src":"6921:48:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":489,"name":"_checkInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":507,"src":"6931:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6931:20:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":491,"nodeType":"ExpressionStatement","src":"6931:20:2"},{"id":492,"nodeType":"PlaceholderStatement","src":"6961:1:2"}]},"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"6689:199:2","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."},"id":494,"name":"onlyInitializing","nameLocation":"6902:16:2","nodeType":"ModifierDefinition","parameters":{"id":488,"nodeType":"ParameterList","parameters":[],"src":"6918:2:2"},"src":"6893:76:2","virtual":false,"visibility":"internal"},{"body":{"id":506,"nodeType":"Block","src":"7136:89:2","statements":[{"condition":{"id":500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7150:18:2","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":498,"name":"_isInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":575,"src":"7151:15:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":499,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7151:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":505,"nodeType":"IfStatement","src":"7146:73:2","trueBody":{"id":504,"nodeType":"Block","src":"7170:49:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":501,"name":"NotInitializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":351,"src":"7191:15:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7191:17:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":503,"nodeType":"RevertStatement","src":"7184:24:2"}]}}]},"documentation":{"id":495,"nodeType":"StructuredDocumentation","src":"6975:104:2","text":" @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."},"id":507,"implemented":true,"kind":"function","modifiers":[],"name":"_checkInitializing","nameLocation":"7093:18:2","nodeType":"FunctionDefinition","parameters":{"id":496,"nodeType":"ParameterList","parameters":[],"src":"7111:2:2"},"returnParameters":{"id":497,"nodeType":"ParameterList","parameters":[],"src":"7136:0:2"},"scope":585,"src":"7084:141:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":552,"nodeType":"Block","src":"7760:373:2","statements":[{"assignments":[513],"declarations":[{"constant":false,"id":513,"mutability":"mutable","name":"$","nameLocation":"7855:1:2","nodeType":"VariableDeclaration","scope":552,"src":"7826:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":512,"nodeType":"UserDefinedTypeName","pathNode":{"id":511,"name":"InitializableStorage","nameLocations":["7826:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":342,"src":"7826:20:2"},"referencedDeclaration":342,"src":"7826:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"id":516,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":514,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"7859:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$342_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7859:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7826:59:2"},{"condition":{"expression":{"id":517,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"7900:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":518,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7902:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":341,"src":"7900:15:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":523,"nodeType":"IfStatement","src":"7896:76:2","trueBody":{"id":522,"nodeType":"Block","src":"7917:55:2","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":519,"name":"InvalidInitialization","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"7938:21:2","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7938:23:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":521,"nodeType":"RevertStatement","src":"7931:30:2"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint64","typeString":"uint64"},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":524,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"7985:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7987:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":338,"src":"7985:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":528,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8008:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":527,"name":"uint64","nodeType":"ElementaryTypeName","src":"8008:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":526,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8003:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":529,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8003:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8016:3:2","memberName":"max","nodeType":"MemberAccess","src":"8003:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"7985:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":551,"nodeType":"IfStatement","src":"7981:146:2","trueBody":{"id":550,"nodeType":"Block","src":"8021:106:2","statements":[{"expression":{"id":540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":532,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"8035:1:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":534,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8037:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":338,"src":"8035:14:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8057:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":536,"name":"uint64","nodeType":"ElementaryTypeName","src":"8057:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":535,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8052:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":538,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8052:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8065:3:2","memberName":"max","nodeType":"MemberAccess","src":"8052:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"8035:33:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":541,"nodeType":"ExpressionStatement","src":"8035:33:2"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":545,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8104:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":544,"name":"uint64","nodeType":"ElementaryTypeName","src":"8104:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":543,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8099:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":546,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8099:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":547,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8112:3:2","memberName":"max","nodeType":"MemberAccess","src":"8099:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":542,"name":"Initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":356,"src":"8087:11:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint64_$returns$__$","typeString":"function (uint64)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8087:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"EmitStatement","src":"8082:34:2"}]}}]},"documentation":{"id":508,"nodeType":"StructuredDocumentation","src":"7231:475:2","text":" @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."},"id":553,"implemented":true,"kind":"function","modifiers":[],"name":"_disableInitializers","nameLocation":"7720:20:2","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[],"src":"7740:2:2"},"returnParameters":{"id":510,"nodeType":"ParameterList","parameters":[],"src":"7760:0:2"},"scope":585,"src":"7711:422:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":563,"nodeType":"Block","src":"8308:63:2","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":559,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"8325:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$342_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8325:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":561,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8352:12:2","memberName":"_initialized","nodeType":"MemberAccess","referencedDeclaration":338,"src":"8325:39:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":558,"id":562,"nodeType":"Return","src":"8318:46:2"}]},"documentation":{"id":554,"nodeType":"StructuredDocumentation","src":"8139:99:2","text":" @dev Returns the highest version that has been initialized. See {reinitializer}."},"id":564,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializedVersion","nameLocation":"8252:22:2","nodeType":"FunctionDefinition","parameters":{"id":555,"nodeType":"ParameterList","parameters":[],"src":"8274:2:2"},"returnParameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":564,"src":"8300:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":556,"name":"uint64","nodeType":"ElementaryTypeName","src":"8300:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"8299:8:2"},"scope":585,"src":"8243:128:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":574,"nodeType":"Block","src":"8543:64:2","statements":[{"expression":{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":570,"name":"_getInitializableStorage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":584,"src":"8560:24:2","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$342_storage_ptr_$","typeString":"function () pure returns (struct Initializable.InitializableStorage storage pointer)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8560:26:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage storage pointer"}},"id":572,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8587:13:2","memberName":"_initializing","nodeType":"MemberAccess","referencedDeclaration":341,"src":"8560:40:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":569,"id":573,"nodeType":"Return","src":"8553:47:2"}]},"documentation":{"id":565,"nodeType":"StructuredDocumentation","src":"8377:105:2","text":" @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."},"id":575,"implemented":true,"kind":"function","modifiers":[],"name":"_isInitializing","nameLocation":"8496:15:2","nodeType":"FunctionDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[],"src":"8511:2:2"},"returnParameters":{"id":569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":575,"src":"8537:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":567,"name":"bool","nodeType":"ElementaryTypeName","src":"8537:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8536:6:2"},"scope":585,"src":"8487:120:2","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":583,"nodeType":"Block","src":"8827:80:2","statements":[{"AST":{"nativeSrc":"8846:55:2","nodeType":"YulBlock","src":"8846:55:2","statements":[{"nativeSrc":"8860:31:2","nodeType":"YulAssignment","src":"8860:31:2","value":{"name":"INITIALIZABLE_STORAGE","nativeSrc":"8870:21:2","nodeType":"YulIdentifier","src":"8870:21:2"},"variableNames":[{"name":"$.slot","nativeSrc":"8860:6:2","nodeType":"YulIdentifier","src":"8860:6:2"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":580,"isOffset":false,"isSlot":true,"src":"8860:6:2","suffix":"slot","valueSize":1},{"declaration":345,"isOffset":false,"isSlot":false,"src":"8870:21:2","valueSize":1}],"id":582,"nodeType":"InlineAssembly","src":"8837:64:2"}]},"documentation":{"id":576,"nodeType":"StructuredDocumentation","src":"8613:67:2","text":" @dev Returns a pointer to the storage namespace."},"id":584,"implemented":true,"kind":"function","modifiers":[],"name":"_getInitializableStorage","nameLocation":"8746:24:2","nodeType":"FunctionDefinition","parameters":{"id":577,"nodeType":"ParameterList","parameters":[],"src":"8770:2:2"},"returnParameters":{"id":581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":580,"mutability":"mutable","name":"$","nameLocation":"8824:1:2","nodeType":"VariableDeclaration","scope":584,"src":"8795:30:2","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage"},"typeName":{"id":579,"nodeType":"UserDefinedTypeName","pathNode":{"id":578,"name":"InitializableStorage","nameLocations":["8795:20:2"],"nodeType":"IdentifierPath","referencedDeclaration":342,"src":"8795:20:2"},"referencedDeclaration":342,"src":"8795:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_InitializableStorage_$342_storage_ptr","typeString":"struct Initializable.InitializableStorage"}},"visibility":"internal"}],"src":"8794:32:2"},"scope":585,"src":"8737:170:2","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":586,"src":"2349:6560:2","usedErrors":[348,351],"usedEvents":[356]}],"src":"113:8797:2"}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"id":3,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","exportedSymbols":{"ERC1967Utils":[1545],"IERC1822Proxiable":[1213],"Initializable":[585],"UUPSUpgradeable":[767]},"id":768,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":587,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"115:24:3"},{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","file":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","id":589,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":768,"sourceUnit":1214,"src":"141:88:3","symbolAliases":[{"foreign":{"id":588,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"149:17:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","id":591,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":768,"sourceUnit":1546,"src":"230:84:3","symbolAliases":[{"foreign":{"id":590,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"238:12:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"./Initializable.sol","id":593,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":768,"sourceUnit":586,"src":"315:50:3","symbolAliases":[{"foreign":{"id":592,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"323:13:3","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":595,"name":"Initializable","nameLocations":["1023:13:3"],"nodeType":"IdentifierPath","referencedDeclaration":585,"src":"1023:13:3"},"id":596,"nodeType":"InheritanceSpecifier","src":"1023:13:3"},{"baseName":{"id":597,"name":"IERC1822Proxiable","nameLocations":["1038:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"1038:17:3"},"id":598,"nodeType":"InheritanceSpecifier","src":"1038:17:3"}],"canonicalName":"UUPSUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":594,"nodeType":"StructuredDocumentation","src":"367:618:3","text":" @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."},"fullyImplemented":false,"id":767,"linearizedBaseContracts":[767,1213,585],"name":"UUPSUpgradeable","nameLocation":"1004:15:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"1062:61:3","text":"@custom:oz-upgrades-unsafe-allow state-variable-immutable"},"id":605,"mutability":"immutable","name":"__self","nameLocation":"1154:6:3","nodeType":"VariableDeclaration","scope":767,"src":"1128:48:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"1128:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":{"arguments":[{"id":603,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1171:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$767","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$767","typeString":"contract UUPSUpgradeable"}],"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1163:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":601,"name":"address","nodeType":"ElementaryTypeName","src":"1163:7:3","typeDescriptions":{}}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1163:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":true,"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"1183:631:3","text":" @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."},"functionSelector":"ad3cb1cc","id":609,"mutability":"constant","name":"UPGRADE_INTERFACE_VERSION","nameLocation":"1842:25:3","nodeType":"VariableDeclaration","scope":767,"src":"1819:58:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":607,"name":"string","nodeType":"ElementaryTypeName","src":"1819:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"352e302e30","id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1870:7:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c","typeString":"literal_string \"5.0.0\""},"value":"5.0.0"},"visibility":"public"},{"documentation":{"id":610,"nodeType":"StructuredDocumentation","src":"1884:65:3","text":" @dev The call is from an unauthorized context."},"errorSelector":"e07c8dba","id":612,"name":"UUPSUnauthorizedCallContext","nameLocation":"1960:27:3","nodeType":"ErrorDefinition","parameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"1987:2:3"},"src":"1954:36:3"},{"documentation":{"id":613,"nodeType":"StructuredDocumentation","src":"1996:68:3","text":" @dev The storage `slot` is unsupported as a UUID."},"errorSelector":"aa1d49a4","id":617,"name":"UUPSUnsupportedProxiableUUID","nameLocation":"2075:28:3","nodeType":"ErrorDefinition","parameters":{"id":616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":615,"mutability":"mutable","name":"slot","nameLocation":"2112:4:3","nodeType":"VariableDeclaration","scope":617,"src":"2104:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":614,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2104:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2103:14:3"},"src":"2069:49:3"},{"body":{"id":624,"nodeType":"Block","src":"2645:41:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":620,"name":"_checkProxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"2655:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2655:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":622,"nodeType":"ExpressionStatement","src":"2655:13:3"},{"id":623,"nodeType":"PlaceholderStatement","src":"2678:1:3"}]},"documentation":{"id":618,"nodeType":"StructuredDocumentation","src":"2124:495:3","text":" @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC-1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC-1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."},"id":625,"name":"onlyProxy","nameLocation":"2633:9:3","nodeType":"ModifierDefinition","parameters":{"id":619,"nodeType":"ParameterList","parameters":[],"src":"2642:2:3"},"src":"2624:62:3","virtual":false,"visibility":"internal"},{"body":{"id":632,"nodeType":"Block","src":"2916:48:3","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":628,"name":"_checkNotDelegated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"2926:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2926:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":630,"nodeType":"ExpressionStatement","src":"2926:20:3"},{"id":631,"nodeType":"PlaceholderStatement","src":"2956:1:3"}]},"documentation":{"id":626,"nodeType":"StructuredDocumentation","src":"2692:195:3","text":" @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."},"id":633,"name":"notDelegated","nameLocation":"2901:12:3","nodeType":"ModifierDefinition","parameters":{"id":627,"nodeType":"ParameterList","parameters":[],"src":"2913:2:3"},"src":"2892:72:3","virtual":false,"visibility":"internal"},{"body":{"id":638,"nodeType":"Block","src":"3030:7:3","statements":[]},"id":639,"implemented":true,"kind":"function","modifiers":[{"id":636,"kind":"modifierInvocation","modifierName":{"id":635,"name":"onlyInitializing","nameLocations":["3013:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":494,"src":"3013:16:3"},"nodeType":"ModifierInvocation","src":"3013:16:3"}],"name":"__UUPSUpgradeable_init","nameLocation":"2979:22:3","nodeType":"FunctionDefinition","parameters":{"id":634,"nodeType":"ParameterList","parameters":[],"src":"3001:2:3"},"returnParameters":{"id":637,"nodeType":"ParameterList","parameters":[],"src":"3030:0:3"},"scope":767,"src":"2970:67:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":644,"nodeType":"Block","src":"3113:7:3","statements":[]},"id":645,"implemented":true,"kind":"function","modifiers":[{"id":642,"kind":"modifierInvocation","modifierName":{"id":641,"name":"onlyInitializing","nameLocations":["3096:16:3"],"nodeType":"IdentifierPath","referencedDeclaration":494,"src":"3096:16:3"},"nodeType":"ModifierInvocation","src":"3096:16:3"}],"name":"__UUPSUpgradeable_init_unchained","nameLocation":"3052:32:3","nodeType":"FunctionDefinition","parameters":{"id":640,"nodeType":"ParameterList","parameters":[],"src":"3084:2:3"},"returnParameters":{"id":643,"nodeType":"ParameterList","parameters":[],"src":"3113:0:3"},"scope":767,"src":"3043:77:3","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1212],"body":{"id":656,"nodeType":"Block","src":"3786:56:3","statements":[{"expression":{"expression":{"id":653,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"3803:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1545_$","typeString":"type(library ERC1967Utils)"}},"id":654,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3816:19:3","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1266,"src":"3803:32:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":652,"id":655,"nodeType":"Return","src":"3796:39:3"}]},"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"3125:578:3","text":" @dev Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"functionSelector":"52d1902d","id":657,"implemented":true,"kind":"function","modifiers":[{"id":649,"kind":"modifierInvocation","modifierName":{"id":648,"name":"notDelegated","nameLocations":["3755:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":633,"src":"3755:12:3"},"nodeType":"ModifierInvocation","src":"3755:12:3"}],"name":"proxiableUUID","nameLocation":"3717:13:3","nodeType":"FunctionDefinition","parameters":{"id":647,"nodeType":"ParameterList","parameters":[],"src":"3730:2:3"},"returnParameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":657,"src":"3777:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":650,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3777:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3776:9:3"},"scope":767,"src":"3708:134:3","stateMutability":"view","virtual":true,"visibility":"external"},{"body":{"id":676,"nodeType":"Block","src":"4266:109:3","statements":[{"expression":{"arguments":[{"id":668,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"4294:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":667,"name":"_authorizeUpgrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"4276:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4276:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"4276:36:3"},{"expression":{"arguments":[{"id":672,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"4344:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":673,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"4363:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":671,"name":"_upgradeToAndCallUUPS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"4322:21:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4322:46:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":675,"nodeType":"ExpressionStatement","src":"4322:46:3"}]},"documentation":{"id":658,"nodeType":"StructuredDocumentation","src":"3848:308:3","text":" @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"},"functionSelector":"4f1ef286","id":677,"implemented":true,"kind":"function","modifiers":[{"id":665,"kind":"modifierInvocation","modifierName":{"id":664,"name":"onlyProxy","nameLocations":["4256:9:3"],"nodeType":"IdentifierPath","referencedDeclaration":625,"src":"4256:9:3"},"nodeType":"ModifierInvocation","src":"4256:9:3"}],"name":"upgradeToAndCall","nameLocation":"4170:16:3","nodeType":"FunctionDefinition","parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":660,"mutability":"mutable","name":"newImplementation","nameLocation":"4195:17:3","nodeType":"VariableDeclaration","scope":677,"src":"4187:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"4187:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"data","nameLocation":"4227:4:3","nodeType":"VariableDeclaration","scope":677,"src":"4214:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":661,"name":"bytes","nodeType":"ElementaryTypeName","src":"4214:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4186:46:3"},"returnParameters":{"id":666,"nodeType":"ParameterList","parameters":[],"src":"4266:0:3"},"scope":767,"src":"4161:214:3","stateMutability":"payable","virtual":true,"visibility":"public"},{"body":{"id":698,"nodeType":"Block","src":"4648:267:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":683,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4683:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$767","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$767","typeString":"contract UUPSUpgradeable"}],"id":682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4675:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"4675:7:3","typeDescriptions":{}}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4675:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":685,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"4692:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4675:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":687,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"4753:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1545_$","typeString":"type(library ERC1967Utils)"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4766:17:3","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":1297,"src":"4753:30:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4753:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":690,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"4789:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4753:42:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4675:120:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":697,"nodeType":"IfStatement","src":"4658:251:3","trueBody":{"id":696,"nodeType":"Block","src":"4848:61:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":693,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"4869:27:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4869:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":695,"nodeType":"RevertStatement","src":"4862:36:3"}]}}]},"documentation":{"id":678,"nodeType":"StructuredDocumentation","src":"4381:217:3","text":" @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC-1967 compliant implementation pointing to self.\n See {_onlyProxy}."},"id":699,"implemented":true,"kind":"function","modifiers":[],"name":"_checkProxy","nameLocation":"4612:11:3","nodeType":"FunctionDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[],"src":"4623:2:3"},"returnParameters":{"id":680,"nodeType":"ParameterList","parameters":[],"src":"4648:0:3"},"scope":767,"src":"4603:312:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":714,"nodeType":"Block","src":"5084:161:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":705,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5106:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_UUPSUpgradeable_$767","typeString":"contract UUPSUpgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_UUPSUpgradeable_$767","typeString":"contract UUPSUpgradeable"}],"id":704,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5098:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"5098:7:3","typeDescriptions":{}}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5098:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":707,"name":"__self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5115:6:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5098:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":713,"nodeType":"IfStatement","src":"5094:145:3","trueBody":{"id":712,"nodeType":"Block","src":"5123:116:3","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":709,"name":"UUPSUnauthorizedCallContext","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"5199:27:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5199:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":711,"nodeType":"RevertStatement","src":"5192:36:3"}]}}]},"documentation":{"id":700,"nodeType":"StructuredDocumentation","src":"4921:106:3","text":" @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNotDelegated","nameLocation":"5041:18:3","nodeType":"FunctionDefinition","parameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"5059:2:3"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[],"src":"5084:0:3"},"scope":767,"src":"5032:213:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"documentation":{"id":716,"nodeType":"StructuredDocumentation","src":"5251:372:3","text":" @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"},"id":721,"implemented":false,"kind":"function","modifiers":[],"name":"_authorizeUpgrade","nameLocation":"5637:17:3","nodeType":"FunctionDefinition","parameters":{"id":719,"nodeType":"ParameterList","parameters":[{"constant":false,"id":718,"mutability":"mutable","name":"newImplementation","nameLocation":"5663:17:3","nodeType":"VariableDeclaration","scope":721,"src":"5655:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":717,"name":"address","nodeType":"ElementaryTypeName","src":"5655:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5654:27:3"},"returnParameters":{"id":720,"nodeType":"ParameterList","parameters":[],"src":"5698:0:3"},"scope":767,"src":"5628:71:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":765,"nodeType":"Block","src":"6142:453:3","statements":[{"clauses":[{"block":{"id":754,"nodeType":"Block","src":"6232:212:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":737,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"6250:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":738,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"6258:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1545_$","typeString":"type(library ERC1967Utils)"}},"id":739,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6271:19:3","memberName":"IMPLEMENTATION_SLOT","nodeType":"MemberAccess","referencedDeclaration":1266,"src":"6258:32:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6250:40:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":746,"nodeType":"IfStatement","src":"6246:120:3","trueBody":{"id":745,"nodeType":"Block","src":"6292:74:3","statements":[{"errorCall":{"arguments":[{"id":742,"name":"slot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"6346:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":741,"name":"UUPSUnsupportedProxiableUUID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":617,"src":"6317:28:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6317:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":744,"nodeType":"RevertStatement","src":"6310:41:3"}]}},{"expression":{"arguments":[{"id":750,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6409:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":751,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"6428:4:3","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":747,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"6379:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1545_$","typeString":"type(library ERC1967Utils)"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6392:16:3","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"6379:29:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6379:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":753,"nodeType":"ExpressionStatement","src":"6379:54:3"}]},"errorName":"","id":755,"nodeType":"TryCatchClause","parameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"slot","nameLocation":"6226:4:3","nodeType":"VariableDeclaration","scope":755,"src":"6218:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6218:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6217:14:3"},"src":"6209:235:3"},{"block":{"id":762,"nodeType":"Block","src":"6451:138:3","statements":[{"errorCall":{"arguments":[{"id":759,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6560:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":756,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"6518:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1545_$","typeString":"type(library ERC1967Utils)"}},"id":758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6531:28:3","memberName":"ERC1967InvalidImplementation","nodeType":"MemberAccess","referencedDeclaration":1271,"src":"6518:41:3","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6518:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":761,"nodeType":"RevertStatement","src":"6511:67:3"}]},"errorName":"","id":763,"nodeType":"TryCatchClause","src":"6445:144:3"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":730,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":724,"src":"6174:17:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":729,"name":"IERC1822Proxiable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"6156:17:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1822Proxiable_$1213_$","typeString":"type(contract IERC1822Proxiable)"}},"id":731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6156:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC1822Proxiable_$1213","typeString":"contract IERC1822Proxiable"}},"id":732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6193:13:3","memberName":"proxiableUUID","nodeType":"MemberAccess","referencedDeclaration":1212,"src":"6156:50:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_bytes32_$","typeString":"function () view external returns (bytes32)"}},"id":733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6156:52:3","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":764,"nodeType":"TryStatement","src":"6152:437:3"}]},"documentation":{"id":722,"nodeType":"StructuredDocumentation","src":"5705:347:3","text":" @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC-1967.\n Emits an {IERC1967-Upgraded} event."},"id":766,"implemented":true,"kind":"function","modifiers":[],"name":"_upgradeToAndCallUUPS","nameLocation":"6066:21:3","nodeType":"FunctionDefinition","parameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":724,"mutability":"mutable","name":"newImplementation","nameLocation":"6096:17:3","nodeType":"VariableDeclaration","scope":766,"src":"6088:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":723,"name":"address","nodeType":"ElementaryTypeName","src":"6088:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":726,"mutability":"mutable","name":"data","nameLocation":"6128:4:3","nodeType":"VariableDeclaration","scope":766,"src":"6115:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":725,"name":"bytes","nodeType":"ElementaryTypeName","src":"6115:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6087:46:3"},"returnParameters":{"id":728,"nodeType":"ParameterList","parameters":[],"src":"6142:0:3"},"scope":767,"src":"6057:538:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":768,"src":"986:5611:3","usedErrors":[348,351,612,617,1271,1284,1601,1863],"usedEvents":[356,1165]}],"src":"115:6483:3"}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"id":4,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol","exportedSymbols":{"ContextUpgradeable":[813],"Initializable":[585]},"id":814,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":769,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:4"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../proxy/utils/Initializable.sol","id":771,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":814,"sourceUnit":586,"src":"126:63:4","symbolAliases":[{"foreign":{"id":770,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"134:13:4","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":773,"name":"Initializable","nameLocations":["728:13:4"],"nodeType":"IdentifierPath","referencedDeclaration":585,"src":"728:13:4"},"id":774,"nodeType":"InheritanceSpecifier","src":"728:13:4"}],"canonicalName":"ContextUpgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":772,"nodeType":"StructuredDocumentation","src":"191:496:4","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":813,"linearizedBaseContracts":[813,585],"name":"ContextUpgradeable","nameLocation":"706:18:4","nodeType":"ContractDefinition","nodes":[{"body":{"id":779,"nodeType":"Block","src":"800:7:4","statements":[]},"id":780,"implemented":true,"kind":"function","modifiers":[{"id":777,"kind":"modifierInvocation","modifierName":{"id":776,"name":"onlyInitializing","nameLocations":["783:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":494,"src":"783:16:4"},"nodeType":"ModifierInvocation","src":"783:16:4"}],"name":"__Context_init","nameLocation":"757:14:4","nodeType":"FunctionDefinition","parameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"771:2:4"},"returnParameters":{"id":778,"nodeType":"ParameterList","parameters":[],"src":"800:0:4"},"scope":813,"src":"748:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":785,"nodeType":"Block","src":"875:7:4","statements":[]},"id":786,"implemented":true,"kind":"function","modifiers":[{"id":783,"kind":"modifierInvocation","modifierName":{"id":782,"name":"onlyInitializing","nameLocations":["858:16:4"],"nodeType":"IdentifierPath","referencedDeclaration":494,"src":"858:16:4"},"nodeType":"ModifierInvocation","src":"858:16:4"}],"name":"__Context_init_unchained","nameLocation":"822:24:4","nodeType":"FunctionDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[],"src":"846:2:4"},"returnParameters":{"id":784,"nodeType":"ParameterList","parameters":[],"src":"875:0:4"},"scope":813,"src":"813:69:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":794,"nodeType":"Block","src":"949:34:4","statements":[{"expression":{"expression":{"id":791,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"966:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"970:6:4","memberName":"sender","nodeType":"MemberAccess","src":"966:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":790,"id":793,"nodeType":"Return","src":"959:17:4"}]},"id":795,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"896:10:4","nodeType":"FunctionDefinition","parameters":{"id":787,"nodeType":"ParameterList","parameters":[],"src":"906:2:4"},"returnParameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":789,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"940:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":788,"name":"address","nodeType":"ElementaryTypeName","src":"940:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"939:9:4"},"scope":813,"src":"887:96:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":803,"nodeType":"Block","src":"1056:32:4","statements":[{"expression":{"expression":{"id":800,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1073:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1077:4:4","memberName":"data","nodeType":"MemberAccess","src":"1073:8:4","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":799,"id":802,"nodeType":"Return","src":"1066:15:4"}]},"id":804,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"998:8:4","nodeType":"FunctionDefinition","parameters":{"id":796,"nodeType":"ParameterList","parameters":[],"src":"1006:2:4"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":804,"src":"1040:14:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":797,"name":"bytes","nodeType":"ElementaryTypeName","src":"1040:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1039:16:4"},"scope":813,"src":"989:99:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":811,"nodeType":"Block","src":"1166:25:4","statements":[{"expression":{"hexValue":"30","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1183:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":808,"id":810,"nodeType":"Return","src":"1176:8:4"}]},"id":812,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"1103:20:4","nodeType":"FunctionDefinition","parameters":{"id":805,"nodeType":"ParameterList","parameters":[],"src":"1123:2:4"},"returnParameters":{"id":808,"nodeType":"ParameterList","parameters":[{"constant":false,"id":807,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":812,"src":"1157:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":806,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:9:4"},"scope":813,"src":"1094:97:4","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":814,"src":"688:505:4","usedErrors":[348,351],"usedEvents":[356]}],"src":"101:1093:4"}},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"id":5,"ast":{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","exportedSymbols":{"EIP712Upgradeable":[1157],"IERC5267":[1203],"Initializable":[585],"MessageHashUtils":[3234]},"id":1158,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":815,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:5"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","id":817,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":3235,"src":"139:97:5","symbolAliases":[{"foreign":{"id":816,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"147:16:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"@openzeppelin/contracts/interfaces/IERC5267.sol","id":819,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":1204,"src":"237:73:5","symbolAliases":[{"foreign":{"id":818,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"245:8:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"../../proxy/utils/Initializable.sol","id":821,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1158,"sourceUnit":586,"src":"311:66:5","symbolAliases":[{"foreign":{"id":820,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"319:13:5","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":823,"name":"Initializable","nameLocations":["1998:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":585,"src":"1998:13:5"},"id":824,"nodeType":"InheritanceSpecifier","src":"1998:13:5"},{"baseName":{"id":825,"name":"IERC5267","nameLocations":["2013:8:5"],"nodeType":"IdentifierPath","referencedDeclaration":1203,"src":"2013:8:5"},"id":826,"nodeType":"InheritanceSpecifier","src":"2013:8:5"}],"canonicalName":"EIP712Upgradeable","contractDependencies":[],"contractKind":"contract","documentation":{"id":822,"nodeType":"StructuredDocumentation","src":"379:1579:5","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage."},"fullyImplemented":true,"id":1157,"linearizedBaseContracts":[1157,1203,585],"name":"EIP712Upgradeable","nameLocation":"1977:17:5","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":831,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2053:9:5","nodeType":"VariableDeclaration","scope":1157,"src":"2028:140:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":827,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2028:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2083:84:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":828,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2073:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2073:95:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"canonicalName":"EIP712Upgradeable.EIP712Storage","documentation":{"id":832,"nodeType":"StructuredDocumentation","src":"2175:64:5","text":"@custom:storage-location erc7201:openzeppelin.storage.EIP712"},"id":843,"members":[{"constant":false,"id":835,"mutability":"mutable","name":"_hashedName","nameLocation":"2332:11:5","nodeType":"VariableDeclaration","scope":843,"src":"2324:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":834,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":838,"mutability":"mutable","name":"_hashedVersion","nameLocation":"2413:14:5","nodeType":"VariableDeclaration","scope":843,"src":"2405:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2405:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":840,"mutability":"mutable","name":"_name","nameLocation":"2445:5:5","nodeType":"VariableDeclaration","scope":843,"src":"2438:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":839,"name":"string","nodeType":"ElementaryTypeName","src":"2438:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":842,"mutability":"mutable","name":"_version","nameLocation":"2467:8:5","nodeType":"VariableDeclaration","scope":843,"src":"2460:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":841,"name":"string","nodeType":"ElementaryTypeName","src":"2460:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"EIP712Storage","nameLocation":"2251:13:5","nodeType":"StructDefinition","scope":1157,"src":"2244:238:5","visibility":"public"},{"constant":true,"id":846,"mutability":"constant","name":"EIP712StorageLocation","nameLocation":"2623:21:5","nodeType":"VariableDeclaration","scope":1157,"src":"2598:115:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2598:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861313661343664393432363163373531376363386666383966363163306365393335393865336338343938303130313164656536343961366135353764313030","id":845,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2647:66:5","typeDescriptions":{"typeIdentifier":"t_rational_73010143390315934406010559831118728393600729754696197287367516085911467577600_by_1","typeString":"int_const 7301...(69 digits omitted)...7600"},"value":"0xa16a46d94261c7517cc8ff89f61c0ce93598e3c849801011dee649a6a557d100"},"visibility":"private"},{"body":{"id":853,"nodeType":"Block","src":"2796:80:5","statements":[{"AST":{"nativeSrc":"2815:55:5","nodeType":"YulBlock","src":"2815:55:5","statements":[{"nativeSrc":"2829:31:5","nodeType":"YulAssignment","src":"2829:31:5","value":{"name":"EIP712StorageLocation","nativeSrc":"2839:21:5","nodeType":"YulIdentifier","src":"2839:21:5"},"variableNames":[{"name":"$.slot","nativeSrc":"2829:6:5","nodeType":"YulIdentifier","src":"2829:6:5"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":850,"isOffset":false,"isSlot":true,"src":"2829:6:5","suffix":"slot","valueSize":1},{"declaration":846,"isOffset":false,"isSlot":false,"src":"2839:21:5","valueSize":1}],"id":852,"nodeType":"InlineAssembly","src":"2806:64:5"}]},"id":854,"implemented":true,"kind":"function","modifiers":[],"name":"_getEIP712Storage","nameLocation":"2729:17:5","nodeType":"FunctionDefinition","parameters":{"id":847,"nodeType":"ParameterList","parameters":[],"src":"2746:2:5"},"returnParameters":{"id":851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":850,"mutability":"mutable","name":"$","nameLocation":"2793:1:5","nodeType":"VariableDeclaration","scope":854,"src":"2771:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":849,"nodeType":"UserDefinedTypeName","pathNode":{"id":848,"name":"EIP712Storage","nameLocations":["2771:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":843,"src":"2771:13:5"},"referencedDeclaration":843,"src":"2771:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"src":"2770:25:5"},"scope":1157,"src":"2720:156:5","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":869,"nodeType":"Block","src":"3538:55:5","statements":[{"expression":{"arguments":[{"id":865,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":857,"src":"3572:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":866,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"3578:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":864,"name":"__EIP712_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"3548:23:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3548:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":868,"nodeType":"ExpressionStatement","src":"3548:38:5"}]},"documentation":{"id":855,"nodeType":"StructuredDocumentation","src":"2882:559:5","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":870,"implemented":true,"kind":"function","modifiers":[{"id":862,"kind":"modifierInvocation","modifierName":{"id":861,"name":"onlyInitializing","nameLocations":["3521:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":494,"src":"3521:16:5"},"nodeType":"ModifierInvocation","src":"3521:16:5"}],"name":"__EIP712_init","nameLocation":"3455:13:5","nodeType":"FunctionDefinition","parameters":{"id":860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":857,"mutability":"mutable","name":"name","nameLocation":"3483:4:5","nodeType":"VariableDeclaration","scope":870,"src":"3469:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":856,"name":"string","nodeType":"ElementaryTypeName","src":"3469:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":859,"mutability":"mutable","name":"version","nameLocation":"3503:7:5","nodeType":"VariableDeclaration","scope":870,"src":"3489:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":858,"name":"string","nodeType":"ElementaryTypeName","src":"3489:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3468:43:5"},"returnParameters":{"id":863,"nodeType":"ParameterList","parameters":[],"src":"3538:0:5"},"scope":1157,"src":"3446:147:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":909,"nodeType":"Block","src":"3701:228:5","statements":[{"assignments":[881],"declarations":[{"constant":false,"id":881,"mutability":"mutable","name":"$","nameLocation":"3733:1:5","nodeType":"VariableDeclaration","scope":909,"src":"3711:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":880,"nodeType":"UserDefinedTypeName","pathNode":{"id":879,"name":"EIP712Storage","nameLocations":["3711:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":843,"src":"3711:13:5"},"referencedDeclaration":843,"src":"3711:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":884,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":882,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"3737:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$843_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3737:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"3711:45:5"},{"expression":{"id":889,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":885,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"3766:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":887,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3768:5:5","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":840,"src":"3766:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":888,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":872,"src":"3776:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3766:14:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":890,"nodeType":"ExpressionStatement","src":"3766:14:5"},{"expression":{"id":895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":891,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"3790:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3792:8:5","memberName":"_version","nodeType":"MemberAccess","referencedDeclaration":842,"src":"3790:10:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":894,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":874,"src":"3803:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3790:20:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":896,"nodeType":"ExpressionStatement","src":"3790:20:5"},{"expression":{"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":897,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"3875:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":899,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3877:11:5","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":835,"src":"3875:13:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3891:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3875:17:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":902,"nodeType":"ExpressionStatement","src":"3875:17:5"},{"expression":{"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":903,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":881,"src":"3902:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":905,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3904:14:5","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":838,"src":"3902:16:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3921:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3902:20:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":908,"nodeType":"ExpressionStatement","src":"3902:20:5"}]},"id":910,"implemented":true,"kind":"function","modifiers":[{"id":877,"kind":"modifierInvocation","modifierName":{"id":876,"name":"onlyInitializing","nameLocations":["3684:16:5"],"nodeType":"IdentifierPath","referencedDeclaration":494,"src":"3684:16:5"},"nodeType":"ModifierInvocation","src":"3684:16:5"}],"name":"__EIP712_init_unchained","nameLocation":"3608:23:5","nodeType":"FunctionDefinition","parameters":{"id":875,"nodeType":"ParameterList","parameters":[{"constant":false,"id":872,"mutability":"mutable","name":"name","nameLocation":"3646:4:5","nodeType":"VariableDeclaration","scope":910,"src":"3632:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":871,"name":"string","nodeType":"ElementaryTypeName","src":"3632:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":874,"mutability":"mutable","name":"version","nameLocation":"3666:7:5","nodeType":"VariableDeclaration","scope":910,"src":"3652:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":873,"name":"string","nodeType":"ElementaryTypeName","src":"3652:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3631:43:5"},"returnParameters":{"id":878,"nodeType":"ParameterList","parameters":[],"src":"3701:0:5"},"scope":1157,"src":"3599:330:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":919,"nodeType":"Block","src":"4077:47:5","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":916,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":943,"src":"4094:21:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4094:23:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":915,"id":918,"nodeType":"Return","src":"4087:30:5"}]},"documentation":{"id":911,"nodeType":"StructuredDocumentation","src":"3935:75:5","text":" @dev Returns the domain separator for the current chain."},"id":920,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"4024:18:5","nodeType":"FunctionDefinition","parameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"4042:2:5"},"returnParameters":{"id":915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":920,"src":"4068:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":913,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4068:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4067:9:5"},"scope":1157,"src":"4015:109:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":942,"nodeType":"Block","src":"4194:127:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":928,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":831,"src":"4232:9:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":929,"name":"_EIP712NameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1104,"src":"4243:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:17:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":931,"name":"_EIP712VersionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1156,"src":"4262:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":933,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4284:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4290:7:5","memberName":"chainid","nodeType":"MemberAccess","src":"4284:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":937,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4307:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$1157","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$1157","typeString":"contract EIP712Upgradeable"}],"id":936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4299:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":935,"name":"address","nodeType":"ElementaryTypeName","src":"4299:7:5","typeDescriptions":{}}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4299:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":926,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4221:3:5","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":927,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4225:6:5","memberName":"encode","nodeType":"MemberAccess","src":"4221:10:5","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":939,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4221:92:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":925,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4211:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4211:103:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":924,"id":941,"nodeType":"Return","src":"4204:110:5"}]},"id":943,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4139:21:5","nodeType":"FunctionDefinition","parameters":{"id":921,"nodeType":"ParameterList","parameters":[],"src":"4160:2:5"},"returnParameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":943,"src":"4185:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":922,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4185:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4184:9:5"},"scope":1157,"src":"4130:191:5","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":958,"nodeType":"Block","src":"5032:90:5","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":953,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":920,"src":"5082:18:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5082:20:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":955,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":946,"src":"5104:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":951,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"5049:16:5","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3234_$","typeString":"type(library MessageHashUtils)"}},"id":952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5066:15:5","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3233,"src":"5049:32:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5049:66:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":950,"id":957,"nodeType":"Return","src":"5042:73:5"}]},"documentation":{"id":944,"nodeType":"StructuredDocumentation","src":"4327:614:5","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":959,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4955:16:5","nodeType":"FunctionDefinition","parameters":{"id":947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":946,"mutability":"mutable","name":"structHash","nameLocation":"4980:10:5","nodeType":"VariableDeclaration","scope":959,"src":"4972:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":945,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4972:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4971:20:5"},"returnParameters":{"id":950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":959,"src":"5023:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5023:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5022:9:5"},"scope":1157,"src":"4946:176:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1202],"body":{"id":1019,"nodeType":"Block","src":"5501:575:5","statements":[{"assignments":[980],"declarations":[{"constant":false,"id":980,"mutability":"mutable","name":"$","nameLocation":"5533:1:5","nodeType":"VariableDeclaration","scope":1019,"src":"5511:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":979,"nodeType":"UserDefinedTypeName","pathNode":{"id":978,"name":"EIP712Storage","nameLocations":["5511:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":843,"src":"5511:13:5"},"referencedDeclaration":843,"src":"5511:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":983,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":981,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"5537:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$843_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5537:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"5511:45:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":985,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"5777:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":986,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5779:11:5","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":835,"src":"5777:13:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5794:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5777:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":989,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"5799:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5801:14:5","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":838,"src":"5799:16:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5819:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5799:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5777:43:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4549503731323a20556e696e697469616c697a6564","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5822:23:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""},"value":"EIP712: Uninitialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2e5045ff73280aa8e8acd8c82710f23812497f87f7f576e2220a2ddd0d45eade","typeString":"literal_string \"EIP712: Uninitialized\""}],"id":984,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18,-18],"referencedDeclaration":-18,"src":"5769:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5769:77:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":996,"nodeType":"ExpressionStatement","src":"5769:77:5"},{"expression":{"components":[{"hexValue":"0f","id":997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5878:7:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":998,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"5908:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5908:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1000,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"5935:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5935:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":1002,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5965:5:5","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5971:7:5","memberName":"chainid","nodeType":"MemberAccess","src":"5965:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1006,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6000:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712Upgradeable_$1157","typeString":"contract EIP712Upgradeable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712Upgradeable_$1157","typeString":"contract EIP712Upgradeable"}],"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5992:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"5992:7:5","typeDescriptions":{}}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5992:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6027:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6019:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1008,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6019:7:5","typeDescriptions":{}}},"id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6019:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6057:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"6043:13:5","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1012,"name":"uint256","nodeType":"ElementaryTypeName","src":"6047:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1013,"nodeType":"ArrayTypeName","src":"6047:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6043:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":1017,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5864:205:5","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":977,"id":1018,"nodeType":"Return","src":"5857:212:5"}]},"documentation":{"id":960,"nodeType":"StructuredDocumentation","src":"5128:40:5","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":1020,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5182:12:5","nodeType":"FunctionDefinition","parameters":{"id":961,"nodeType":"ParameterList","parameters":[],"src":"5194:2:5"},"returnParameters":{"id":977,"nodeType":"ParameterList","parameters":[{"constant":false,"id":963,"mutability":"mutable","name":"fields","nameLocation":"5278:6:5","nodeType":"VariableDeclaration","scope":1020,"src":"5271:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":962,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5271:6:5","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":965,"mutability":"mutable","name":"name","nameLocation":"5312:4:5","nodeType":"VariableDeclaration","scope":1020,"src":"5298:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":964,"name":"string","nodeType":"ElementaryTypeName","src":"5298:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"version","nameLocation":"5344:7:5","nodeType":"VariableDeclaration","scope":1020,"src":"5330:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":966,"name":"string","nodeType":"ElementaryTypeName","src":"5330:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"chainId","nameLocation":"5373:7:5","nodeType":"VariableDeclaration","scope":1020,"src":"5365:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":968,"name":"uint256","nodeType":"ElementaryTypeName","src":"5365:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"verifyingContract","nameLocation":"5402:17:5","nodeType":"VariableDeclaration","scope":1020,"src":"5394:25:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"5394:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"salt","nameLocation":"5441:4:5","nodeType":"VariableDeclaration","scope":1020,"src":"5433:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5433:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"extensions","nameLocation":"5476:10:5","nodeType":"VariableDeclaration","scope":1020,"src":"5459:27:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":974,"name":"uint256","nodeType":"ElementaryTypeName","src":"5459:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":975,"nodeType":"ArrayTypeName","src":"5459:9:5","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5257:239:5"},"scope":1157,"src":"5173:903:5","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1035,"nodeType":"Block","src":"6369:86:5","statements":[{"assignments":[1028],"declarations":[{"constant":false,"id":1028,"mutability":"mutable","name":"$","nameLocation":"6401:1:5","nodeType":"VariableDeclaration","scope":1035,"src":"6379:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1027,"nodeType":"UserDefinedTypeName","pathNode":{"id":1026,"name":"EIP712Storage","nameLocations":["6379:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":843,"src":"6379:13:5"},"referencedDeclaration":843,"src":"6379:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":1031,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1029,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"6405:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$843_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6405:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6379:45:5"},{"expression":{"expression":{"id":1032,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1028,"src":"6441:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1033,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6443:5:5","memberName":"_name","nodeType":"MemberAccess","referencedDeclaration":840,"src":"6441:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1025,"id":1034,"nodeType":"Return","src":"6434:14:5"}]},"documentation":{"id":1021,"nodeType":"StructuredDocumentation","src":"6082:213:5","text":" @dev The name parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":1036,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6309:11:5","nodeType":"FunctionDefinition","parameters":{"id":1022,"nodeType":"ParameterList","parameters":[],"src":"6320:2:5"},"returnParameters":{"id":1025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1024,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1036,"src":"6354:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1023,"name":"string","nodeType":"ElementaryTypeName","src":"6354:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6353:15:5"},"scope":1157,"src":"6300:155:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1051,"nodeType":"Block","src":"6754:89:5","statements":[{"assignments":[1044],"declarations":[{"constant":false,"id":1044,"mutability":"mutable","name":"$","nameLocation":"6786:1:5","nodeType":"VariableDeclaration","scope":1051,"src":"6764:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1043,"nodeType":"UserDefinedTypeName","pathNode":{"id":1042,"name":"EIP712Storage","nameLocations":["6764:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":843,"src":"6764:13:5"},"referencedDeclaration":843,"src":"6764:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":1047,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1045,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"6790:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$843_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6790:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"6764:45:5"},{"expression":{"expression":{"id":1048,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"6826:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6828:8:5","memberName":"_version","nodeType":"MemberAccess","referencedDeclaration":842,"src":"6826:10:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":1041,"id":1050,"nodeType":"Return","src":"6819:17:5"}]},"documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"6461:216:5","text":" @dev The version parameter for the EIP712 domain.\n NOTE: This function reads from storage by default, but can be redefined to return a constant value if gas costs\n are a concern."},"id":1052,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6691:14:5","nodeType":"FunctionDefinition","parameters":{"id":1038,"nodeType":"ParameterList","parameters":[],"src":"6705:2:5"},"returnParameters":{"id":1041,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1040,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1052,"src":"6739:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1039,"name":"string","nodeType":"ElementaryTypeName","src":"6739:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6738:15:5"},"scope":1157,"src":"6682:161:5","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1103,"nodeType":"Block","src":"7117:628:5","statements":[{"assignments":[1060],"declarations":[{"constant":false,"id":1060,"mutability":"mutable","name":"$","nameLocation":"7149:1:5","nodeType":"VariableDeclaration","scope":1103,"src":"7127:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1059,"nodeType":"UserDefinedTypeName","pathNode":{"id":1058,"name":"EIP712Storage","nameLocations":["7127:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":843,"src":"7127:13:5"},"referencedDeclaration":843,"src":"7127:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":1063,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1061,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"7153:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$843_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7153:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"7127:45:5"},{"assignments":[1065],"declarations":[{"constant":false,"id":1065,"mutability":"mutable","name":"name","nameLocation":"7196:4:5","nodeType":"VariableDeclaration","scope":1103,"src":"7182:18:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1064,"name":"string","nodeType":"ElementaryTypeName","src":"7182:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1068,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1066,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"7203:11:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7203:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"7182:34:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1071,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"7236:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7230:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1069,"name":"bytes","nodeType":"ElementaryTypeName","src":"7230:5:5","typeDescriptions":{}}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7230:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7242:6:5","memberName":"length","nodeType":"MemberAccess","src":"7230:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7251:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7230:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1101,"nodeType":"Block","src":"7314:425:5","statements":[{"assignments":[1085],"declarations":[{"constant":false,"id":1085,"mutability":"mutable","name":"hashedName","nameLocation":"7559:10:5","nodeType":"VariableDeclaration","scope":1101,"src":"7551:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1084,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7551:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1088,"initialValue":{"expression":{"id":1086,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1060,"src":"7572:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1087,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7574:11:5","memberName":"_hashedName","nodeType":"MemberAccess","referencedDeclaration":835,"src":"7572:13:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7551:34:5"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1089,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"7603:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7617:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7603:15:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1099,"nodeType":"Block","src":"7676:53:5","statements":[{"expression":{"arguments":[{"hexValue":"","id":1096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7711:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1095,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7701:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7701:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1057,"id":1098,"nodeType":"Return","src":"7694:20:5"}]},"id":1100,"nodeType":"IfStatement","src":"7599:130:5","trueBody":{"id":1094,"nodeType":"Block","src":"7620:50:5","statements":[{"expression":{"id":1092,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"7645:10:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1057,"id":1093,"nodeType":"Return","src":"7638:17:5"}]}}]},"id":1102,"nodeType":"IfStatement","src":"7226:513:5","trueBody":{"id":1083,"nodeType":"Block","src":"7254:54:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1079,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"7291:4:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7285:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1077,"name":"bytes","nodeType":"ElementaryTypeName","src":"7285:5:5","typeDescriptions":{}}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7285:11:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1076,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7275:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7275:22:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1057,"id":1082,"nodeType":"Return","src":"7268:29:5"}]}}]},"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"6849:204:5","text":" @dev The hash of the name parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Name` instead."},"id":1104,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712NameHash","nameLocation":"7067:15:5","nodeType":"FunctionDefinition","parameters":{"id":1054,"nodeType":"ParameterList","parameters":[],"src":"7082:2:5"},"returnParameters":{"id":1057,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1056,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1104,"src":"7108:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1055,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7108:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7107:9:5"},"scope":1157,"src":"7058:687:5","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1155,"nodeType":"Block","src":"8028:661:5","statements":[{"assignments":[1112],"declarations":[{"constant":false,"id":1112,"mutability":"mutable","name":"$","nameLocation":"8060:1:5","nodeType":"VariableDeclaration","scope":1155,"src":"8038:23:5","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"},"typeName":{"id":1111,"nodeType":"UserDefinedTypeName","pathNode":{"id":1110,"name":"EIP712Storage","nameLocations":["8038:13:5"],"nodeType":"IdentifierPath","referencedDeclaration":843,"src":"8038:13:5"},"referencedDeclaration":843,"src":"8038:13:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage"}},"visibility":"internal"}],"id":1115,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1113,"name":"_getEIP712Storage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"8064:17:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$__$returns$_t_struct$_EIP712Storage_$843_storage_ptr_$","typeString":"function () pure returns (struct EIP712Upgradeable.EIP712Storage storage pointer)"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8064:19:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"nodeType":"VariableDeclarationStatement","src":"8038:45:5"},{"assignments":[1117],"declarations":[{"constant":false,"id":1117,"mutability":"mutable","name":"version","nameLocation":"8107:7:5","nodeType":"VariableDeclaration","scope":1155,"src":"8093:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1116,"name":"string","nodeType":"ElementaryTypeName","src":"8093:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1120,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":1118,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1052,"src":"8117:14:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":1119,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8117:16:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"8093:40:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1123,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"8153:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8147:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1121,"name":"bytes","nodeType":"ElementaryTypeName","src":"8147:5:5","typeDescriptions":{}}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8147:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8162:6:5","memberName":"length","nodeType":"MemberAccess","src":"8147:21:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8171:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8147:25:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1153,"nodeType":"Block","src":"8237:446:5","statements":[{"assignments":[1137],"declarations":[{"constant":false,"id":1137,"mutability":"mutable","name":"hashedVersion","nameLocation":"8491:13:5","nodeType":"VariableDeclaration","scope":1153,"src":"8483:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1136,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8483:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1140,"initialValue":{"expression":{"id":1138,"name":"$","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1112,"src":"8507:1:5","typeDescriptions":{"typeIdentifier":"t_struct$_EIP712Storage_$843_storage_ptr","typeString":"struct EIP712Upgradeable.EIP712Storage storage pointer"}},"id":1139,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8509:14:5","memberName":"_hashedVersion","nodeType":"MemberAccess","referencedDeclaration":838,"src":"8507:16:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8483:40:5"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1141,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"8541:13:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8558:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8541:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1151,"nodeType":"Block","src":"8620:53:5","statements":[{"expression":{"arguments":[{"hexValue":"","id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8655:2:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"id":1147,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8645:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8645:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1109,"id":1150,"nodeType":"Return","src":"8638:20:5"}]},"id":1152,"nodeType":"IfStatement","src":"8537:136:5","trueBody":{"id":1146,"nodeType":"Block","src":"8561:53:5","statements":[{"expression":{"id":1144,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1137,"src":"8586:13:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1109,"id":1145,"nodeType":"Return","src":"8579:20:5"}]}}]},"id":1154,"nodeType":"IfStatement","src":"8143:540:5","trueBody":{"id":1135,"nodeType":"Block","src":"8174:57:5","statements":[{"expression":{"arguments":[{"arguments":[{"id":1131,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1117,"src":"8211:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8205:5:5","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1129,"name":"bytes","nodeType":"ElementaryTypeName","src":"8205:5:5","typeDescriptions":{}}},"id":1132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8205:14:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1128,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8195:9:5","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8195:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1109,"id":1134,"nodeType":"Return","src":"8188:32:5"}]}}]},"documentation":{"id":1105,"nodeType":"StructuredDocumentation","src":"7751:210:5","text":" @dev The hash of the version parameter for the EIP712 domain.\n NOTE: In previous versions this function was virtual. In this version you should override `_EIP712Version` instead."},"id":1156,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712VersionHash","nameLocation":"7975:18:5","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[],"src":"7993:2:5"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1156,"src":"8019:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8019:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8018:9:5"},"scope":1157,"src":"7966:723:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1158,"src":"1959:6732:5","usedErrors":[348,351],"usedEvents":[356,1183]}],"src":"113:8579:5"}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"id":6,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","exportedSymbols":{"IERC1967":[1178]},"id":1179,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1159,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1967","contractDependencies":[],"contractKind":"interface","documentation":{"id":1160,"nodeType":"StructuredDocumentation","src":"133:101:6","text":" @dev ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC."},"fullyImplemented":true,"id":1178,"linearizedBaseContracts":[1178],"name":"IERC1967","nameLocation":"245:8:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1161,"nodeType":"StructuredDocumentation","src":"260:68:6","text":" @dev Emitted when the implementation is upgraded."},"eventSelector":"bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b","id":1165,"name":"Upgraded","nameLocation":"339:8:6","nodeType":"EventDefinition","parameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"indexed":true,"mutability":"mutable","name":"implementation","nameLocation":"364:14:6","nodeType":"VariableDeclaration","scope":1165,"src":"348:30:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1162,"name":"address","nodeType":"ElementaryTypeName","src":"348:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"347:32:6"},"src":"333:47:6"},{"anonymous":false,"documentation":{"id":1166,"nodeType":"StructuredDocumentation","src":"386:67:6","text":" @dev Emitted when the admin account has changed."},"eventSelector":"7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f","id":1172,"name":"AdminChanged","nameLocation":"464:12:6","nodeType":"EventDefinition","parameters":{"id":1171,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1168,"indexed":false,"mutability":"mutable","name":"previousAdmin","nameLocation":"485:13:6","nodeType":"VariableDeclaration","scope":1172,"src":"477:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1167,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1170,"indexed":false,"mutability":"mutable","name":"newAdmin","nameLocation":"508:8:6","nodeType":"VariableDeclaration","scope":1172,"src":"500:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"500:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:41:6"},"src":"458:60:6"},{"anonymous":false,"documentation":{"id":1173,"nodeType":"StructuredDocumentation","src":"524:59:6","text":" @dev Emitted when the beacon is changed."},"eventSelector":"1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e","id":1177,"name":"BeaconUpgraded","nameLocation":"594:14:6","nodeType":"EventDefinition","parameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"indexed":true,"mutability":"mutable","name":"beacon","nameLocation":"625:6:6","nodeType":"VariableDeclaration","scope":1177,"src":"609:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"609:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"608:24:6"},"src":"588:45:6"}],"scope":1179,"src":"235:400:6","usedErrors":[],"usedEvents":[1165,1172,1177]}],"src":"107:529:6"}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"id":7,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","exportedSymbols":{"IERC5267":[1203]},"id":1204,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1180,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"107:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC5267","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1203,"linearizedBaseContracts":[1203],"name":"IERC5267","nameLocation":"143:8:7","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1181,"nodeType":"StructuredDocumentation","src":"158:84:7","text":" @dev MAY be emitted to signal that the domain could have changed."},"eventSelector":"0a6387c9ea3628b88a633bb4f3b151770f70085117a15f9bf3787cda53f13d31","id":1183,"name":"EIP712DomainChanged","nameLocation":"253:19:7","nodeType":"EventDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[],"src":"272:2:7"},"src":"247:28:7"},{"documentation":{"id":1184,"nodeType":"StructuredDocumentation","src":"281:140:7","text":" @dev returns the fields and values that describe the domain separator used by this contract for EIP-712\n signature."},"functionSelector":"84b0196e","id":1202,"implemented":false,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"435:12:7","nodeType":"FunctionDefinition","parameters":{"id":1185,"nodeType":"ParameterList","parameters":[],"src":"447:2:7"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1187,"mutability":"mutable","name":"fields","nameLocation":"517:6:7","nodeType":"VariableDeclaration","scope":1202,"src":"510:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":1186,"name":"bytes1","nodeType":"ElementaryTypeName","src":"510:6:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":1189,"mutability":"mutable","name":"name","nameLocation":"551:4:7","nodeType":"VariableDeclaration","scope":1202,"src":"537:18:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1188,"name":"string","nodeType":"ElementaryTypeName","src":"537:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1191,"mutability":"mutable","name":"version","nameLocation":"583:7:7","nodeType":"VariableDeclaration","scope":1202,"src":"569:21:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1190,"name":"string","nodeType":"ElementaryTypeName","src":"569:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"chainId","nameLocation":"612:7:7","nodeType":"VariableDeclaration","scope":1202,"src":"604:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1192,"name":"uint256","nodeType":"ElementaryTypeName","src":"604:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1195,"mutability":"mutable","name":"verifyingContract","nameLocation":"641:17:7","nodeType":"VariableDeclaration","scope":1202,"src":"633:25:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1194,"name":"address","nodeType":"ElementaryTypeName","src":"633:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1197,"mutability":"mutable","name":"salt","nameLocation":"680:4:7","nodeType":"VariableDeclaration","scope":1202,"src":"672:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"672:7:7","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"extensions","nameLocation":"715:10:7","nodeType":"VariableDeclaration","scope":1202,"src":"698:27:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"698:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1199,"nodeType":"ArrayTypeName","src":"698:9:7","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"496:239:7"},"scope":1203,"src":"426:310:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1204,"src":"133:605:7","usedErrors":[],"usedEvents":[1183]}],"src":"107:632:7"}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"id":8,"ast":{"absolutePath":"@openzeppelin/contracts/interfaces/draft-IERC1822.sol","exportedSymbols":{"IERC1822Proxiable":[1213]},"id":1214,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1205,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:8"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC1822Proxiable","contractDependencies":[],"contractKind":"interface","documentation":{"id":1206,"nodeType":"StructuredDocumentation","src":"139:204:8","text":" @dev ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."},"fullyImplemented":false,"id":1213,"linearizedBaseContracts":[1213],"name":"IERC1822Proxiable","nameLocation":"354:17:8","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1207,"nodeType":"StructuredDocumentation","src":"378:438:8","text":" @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."},"functionSelector":"52d1902d","id":1212,"implemented":false,"kind":"function","modifiers":[],"name":"proxiableUUID","nameLocation":"830:13:8","nodeType":"FunctionDefinition","parameters":{"id":1208,"nodeType":"ParameterList","parameters":[],"src":"843:2:8"},"returnParameters":{"id":1211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1210,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1212,"src":"869:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"869:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"868:9:8"},"scope":1213,"src":"821:57:8","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1214,"src":"344:536:8","usedErrors":[],"usedEvents":[]}],"src":"113:768:8"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"id":9,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","exportedSymbols":{"ERC1967Proxy":[1251],"ERC1967Utils":[1545],"Proxy":[1581]},"id":1252,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1215,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"114:24:9"},{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","file":"../Proxy.sol","id":1217,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1252,"sourceUnit":1582,"src":"140:35:9","symbolAliases":[{"foreign":{"id":1216,"name":"Proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"148:5:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","file":"./ERC1967Utils.sol","id":1219,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1252,"sourceUnit":1546,"src":"176:48:9","symbolAliases":[{"foreign":{"id":1218,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"184:12:9","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1221,"name":"Proxy","nameLocations":["625:5:9"],"nodeType":"IdentifierPath","referencedDeclaration":1581,"src":"625:5:9"},"id":1222,"nodeType":"InheritanceSpecifier","src":"625:5:9"}],"canonicalName":"ERC1967Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":1220,"nodeType":"StructuredDocumentation","src":"226:373:9","text":" @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\n implementation address that can be changed. This address is stored in storage in the location specified by\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the\n implementation behind the proxy."},"fullyImplemented":true,"id":1251,"linearizedBaseContracts":[1251,1581],"name":"ERC1967Proxy","nameLocation":"609:12:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1237,"nodeType":"Block","src":"1145:69:9","statements":[{"expression":{"arguments":[{"id":1233,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1225,"src":"1185:14:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1234,"name":"_data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1227,"src":"1201:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1230,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"1155:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1545_$","typeString":"type(library ERC1967Utils)"}},"id":1232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1168:16:9","memberName":"upgradeToAndCall","nodeType":"MemberAccess","referencedDeclaration":1360,"src":"1155:29:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,bytes memory)"}},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1155:52:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1236,"nodeType":"ExpressionStatement","src":"1155:52:9"}]},"documentation":{"id":1223,"nodeType":"StructuredDocumentation","src":"637:439:9","text":" @dev Initializes the upgradeable proxy with an initial implementation specified by `implementation`.\n If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an\n encoded function call, and allows initializing the storage of the proxy like a Solidity constructor.\n Requirements:\n - If `data` is empty, `msg.value` must be zero."},"id":1238,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1225,"mutability":"mutable","name":"implementation","nameLocation":"1101:14:9","nodeType":"VariableDeclaration","scope":1238,"src":"1093:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"1093:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"_data","nameLocation":"1130:5:9","nodeType":"VariableDeclaration","scope":1238,"src":"1117:18:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1226,"name":"bytes","nodeType":"ElementaryTypeName","src":"1117:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1092:44:9"},"returnParameters":{"id":1229,"nodeType":"ParameterList","parameters":[],"src":"1145:0:9"},"scope":1251,"src":"1081:133:9","stateMutability":"payable","virtual":false,"visibility":"public"},{"baseFunctions":[1562],"body":{"id":1249,"nodeType":"Block","src":"1659:56:9","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1245,"name":"ERC1967Utils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"1676:12:9","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC1967Utils_$1545_$","typeString":"type(library ERC1967Utils)"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1689:17:9","memberName":"getImplementation","nodeType":"MemberAccess","referencedDeclaration":1297,"src":"1676:30:9","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1676:32:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1244,"id":1248,"nodeType":"Return","src":"1669:39:9"}]},"documentation":{"id":1239,"nodeType":"StructuredDocumentation","src":"1220:358:9","text":" @dev Returns the current implementation address.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc`"},"id":1250,"implemented":true,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"1592:15:9","nodeType":"FunctionDefinition","overrides":{"id":1241,"nodeType":"OverrideSpecifier","overrides":[],"src":"1632:8:9"},"parameters":{"id":1240,"nodeType":"ParameterList","parameters":[],"src":"1607:2:9"},"returnParameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1250,"src":"1650:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1242,"name":"address","nodeType":"ElementaryTypeName","src":"1650:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1649:9:9"},"scope":1251,"src":"1583:132:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1252,"src":"600:1117:9","usedErrors":[1271,1284,1601,1863],"usedEvents":[1165]}],"src":"114:1604:9"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"id":10,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol","exportedSymbols":{"Address":[1850],"ERC1967Utils":[1545],"IBeacon":[1591],"IERC1967":[1178],"StorageSlot":[2265]},"id":1546,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1253,"literals":["solidity","^","0.8",".21"],"nodeType":"PragmaDirective","src":"114:24:10"},{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","file":"../beacon/IBeacon.sol","id":1255,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1546,"sourceUnit":1592,"src":"140:46:10","symbolAliases":[{"foreign":{"id":1254,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"148:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC1967.sol","file":"../../interfaces/IERC1967.sol","id":1257,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1546,"sourceUnit":1179,"src":"187:55:10","symbolAliases":[{"foreign":{"id":1256,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"195:8:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1259,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1546,"sourceUnit":1851,"src":"243:48:10","symbolAliases":[{"foreign":{"id":1258,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"251:7:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"../../utils/StorageSlot.sol","id":1261,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1546,"sourceUnit":2266,"src":"292:56:10","symbolAliases":[{"foreign":{"id":1260,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"300:11:10","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ERC1967Utils","contractDependencies":[],"contractKind":"library","documentation":{"id":1262,"nodeType":"StructuredDocumentation","src":"350:145:10","text":" @dev This library provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots."},"fullyImplemented":true,"id":1545,"linearizedBaseContracts":[1545],"name":"ERC1967Utils","nameLocation":"504:12:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"523:170:10","text":" @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."},"id":1266,"mutability":"constant","name":"IMPLEMENTATION_SLOT","nameLocation":"789:19:10","nodeType":"VariableDeclaration","scope":1545,"src":"763:114:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1264,"name":"bytes32","nodeType":"ElementaryTypeName","src":"763:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"811:66:10","typeDescriptions":{"typeIdentifier":"t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1","typeString":"int_const 2444...(69 digits omitted)...5612"},"value":"0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"},"visibility":"internal"},{"documentation":{"id":1267,"nodeType":"StructuredDocumentation","src":"884:69:10","text":" @dev The `implementation` of the proxy is invalid."},"errorSelector":"4c9c8ce3","id":1271,"name":"ERC1967InvalidImplementation","nameLocation":"964:28:10","nodeType":"ErrorDefinition","parameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"implementation","nameLocation":"1001:14:10","nodeType":"VariableDeclaration","scope":1271,"src":"993:22:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1268,"name":"address","nodeType":"ElementaryTypeName","src":"993:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"992:24:10"},"src":"958:59:10"},{"documentation":{"id":1272,"nodeType":"StructuredDocumentation","src":"1023:60:10","text":" @dev The `admin` of the proxy is invalid."},"errorSelector":"62e77ba2","id":1276,"name":"ERC1967InvalidAdmin","nameLocation":"1094:19:10","nodeType":"ErrorDefinition","parameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"admin","nameLocation":"1122:5:10","nodeType":"VariableDeclaration","scope":1276,"src":"1114:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1273,"name":"address","nodeType":"ElementaryTypeName","src":"1114:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1113:15:10"},"src":"1088:41:10"},{"documentation":{"id":1277,"nodeType":"StructuredDocumentation","src":"1135:61:10","text":" @dev The `beacon` of the proxy is invalid."},"errorSelector":"64ced0ec","id":1281,"name":"ERC1967InvalidBeacon","nameLocation":"1207:20:10","nodeType":"ErrorDefinition","parameters":{"id":1280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1279,"mutability":"mutable","name":"beacon","nameLocation":"1236:6:10","nodeType":"VariableDeclaration","scope":1281,"src":"1228:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1278,"name":"address","nodeType":"ElementaryTypeName","src":"1228:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1227:16:10"},"src":"1201:43:10"},{"documentation":{"id":1282,"nodeType":"StructuredDocumentation","src":"1250:82:10","text":" @dev An upgrade function sees `msg.value > 0` that may be lost."},"errorSelector":"b398979f","id":1284,"name":"ERC1967NonPayable","nameLocation":"1343:17:10","nodeType":"ErrorDefinition","parameters":{"id":1283,"nodeType":"ParameterList","parameters":[],"src":"1360:2:10"},"src":"1337:26:10"},{"body":{"id":1296,"nodeType":"Block","src":"1502:77:10","statements":[{"expression":{"expression":{"arguments":[{"id":1292,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"1546:19:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1290,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"1519:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2265_$","typeString":"type(library StorageSlot)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1531:14:10","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2176,"src":"1519:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2147_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1293,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1519:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2147_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"1567:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2146,"src":"1519:53:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1289,"id":1295,"nodeType":"Return","src":"1512:60:10"}]},"documentation":{"id":1285,"nodeType":"StructuredDocumentation","src":"1369:67:10","text":" @dev Returns the current implementation address."},"id":1297,"implemented":true,"kind":"function","modifiers":[],"name":"getImplementation","nameLocation":"1450:17:10","nodeType":"FunctionDefinition","parameters":{"id":1286,"nodeType":"ParameterList","parameters":[],"src":"1467:2:10"},"returnParameters":{"id":1289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1288,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1297,"src":"1493:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1287,"name":"address","nodeType":"ElementaryTypeName","src":"1493:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1492:9:10"},"scope":1545,"src":"1441:138:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1323,"nodeType":"Block","src":"1734:218:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1303,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"1748:17:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1766:4:10","memberName":"code","nodeType":"MemberAccess","src":"1748:22:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1771:6:10","memberName":"length","nodeType":"MemberAccess","src":"1748:29:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1781:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1748:34:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1313,"nodeType":"IfStatement","src":"1744:119:10","trueBody":{"id":1312,"nodeType":"Block","src":"1784:79:10","statements":[{"errorCall":{"arguments":[{"id":1309,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"1834:17:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1308,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"1805:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1805:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1311,"nodeType":"RevertStatement","src":"1798:54:10"}]}},{"expression":{"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1317,"name":"IMPLEMENTATION_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"1899:19:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1314,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"1872:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2265_$","typeString":"type(library StorageSlot)"}},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1884:14:10","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2176,"src":"1872:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2147_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1872:47:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2147_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"1920:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2146,"src":"1872:53:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1320,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"1928:17:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1872:73:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1322,"nodeType":"ExpressionStatement","src":"1872:73:10"}]},"documentation":{"id":1298,"nodeType":"StructuredDocumentation","src":"1585:81:10","text":" @dev Stores a new address in the ERC-1967 implementation slot."},"id":1324,"implemented":true,"kind":"function","modifiers":[],"name":"_setImplementation","nameLocation":"1680:18:10","nodeType":"FunctionDefinition","parameters":{"id":1301,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1300,"mutability":"mutable","name":"newImplementation","nameLocation":"1707:17:10","nodeType":"VariableDeclaration","scope":1324,"src":"1699:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1299,"name":"address","nodeType":"ElementaryTypeName","src":"1699:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1698:27:10"},"returnParameters":{"id":1302,"nodeType":"ParameterList","parameters":[],"src":"1734:0:10"},"scope":1545,"src":"1671:281:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1359,"nodeType":"Block","src":"2345:263:10","statements":[{"expression":{"arguments":[{"id":1333,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"2374:17:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1332,"name":"_setImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"2355:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2355:37:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1335,"nodeType":"ExpressionStatement","src":"2355:37:10"},{"eventCall":{"arguments":[{"id":1339,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"2425:17:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1336,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"2407:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1178_$","typeString":"type(contract IERC1967)"}},"id":1338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2416:8:10","memberName":"Upgraded","nodeType":"MemberAccess","referencedDeclaration":1165,"src":"2407:17:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2407:36:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1341,"nodeType":"EmitStatement","src":"2402:41:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1342,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"2458:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2463:6:10","memberName":"length","nodeType":"MemberAccess","src":"2458:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2472:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2458:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1357,"nodeType":"Block","src":"2559:43:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1354,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"2573:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2573:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1356,"nodeType":"ExpressionStatement","src":"2573:18:10"}]},"id":1358,"nodeType":"IfStatement","src":"2454:148:10","trueBody":{"id":1353,"nodeType":"Block","src":"2475:78:10","statements":[{"expression":{"arguments":[{"id":1349,"name":"newImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1327,"src":"2518:17:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1350,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"2537:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1346,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"2489:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1850_$","typeString":"type(library Address)"}},"id":1348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2497:20:10","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1767,"src":"2489:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2489:53:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1352,"nodeType":"ExpressionStatement","src":"2489:53:10"}]}}]},"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"1958:301:10","text":" @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."},"id":1360,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeToAndCall","nameLocation":"2273:16:10","nodeType":"FunctionDefinition","parameters":{"id":1330,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"mutability":"mutable","name":"newImplementation","nameLocation":"2298:17:10","nodeType":"VariableDeclaration","scope":1360,"src":"2290:25:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"2290:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1329,"mutability":"mutable","name":"data","nameLocation":"2330:4:10","nodeType":"VariableDeclaration","scope":1360,"src":"2317:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1328,"name":"bytes","nodeType":"ElementaryTypeName","src":"2317:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2289:46:10"},"returnParameters":{"id":1331,"nodeType":"ParameterList","parameters":[],"src":"2345:0:10"},"scope":1545,"src":"2264:344:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1361,"nodeType":"StructuredDocumentation","src":"2614:145:10","text":" @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"id":1364,"mutability":"constant","name":"ADMIN_SLOT","nameLocation":"2855:10:10","nodeType":"VariableDeclaration","scope":1545,"src":"2829:105:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2829:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033","id":1363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2868:66:10","typeDescriptions":{"typeIdentifier":"t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1","typeString":"int_const 8195...(69 digits omitted)...7091"},"value":"0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"},"visibility":"internal"},{"body":{"id":1376,"nodeType":"Block","src":"3339:68:10","statements":[{"expression":{"expression":{"arguments":[{"id":1372,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"3383:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1370,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"3356:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2265_$","typeString":"type(library StorageSlot)"}},"id":1371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3368:14:10","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2176,"src":"3356:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2147_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3356:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2147_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3395:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2146,"src":"3356:44:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1369,"id":1375,"nodeType":"Return","src":"3349:51:10"}]},"documentation":{"id":1365,"nodeType":"StructuredDocumentation","src":"2941:341:10","text":" @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by ERC-1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"},"id":1377,"implemented":true,"kind":"function","modifiers":[],"name":"getAdmin","nameLocation":"3296:8:10","nodeType":"FunctionDefinition","parameters":{"id":1366,"nodeType":"ParameterList","parameters":[],"src":"3304:2:10"},"returnParameters":{"id":1369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1368,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1377,"src":"3330:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1367,"name":"address","nodeType":"ElementaryTypeName","src":"3330:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3329:9:10"},"scope":1545,"src":"3287:120:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1407,"nodeType":"Block","src":"3535:172:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1383,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"3549:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":1386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3569:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1385,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3561:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1384,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:10","typeDescriptions":{}}},"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3561:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3549:22:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1397,"nodeType":"IfStatement","src":"3545:91:10","trueBody":{"id":1396,"nodeType":"Block","src":"3573:63:10","statements":[{"errorCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3622:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1391,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3614:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1390,"name":"address","nodeType":"ElementaryTypeName","src":"3614:7:10","typeDescriptions":{}}},"id":1393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3614:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1389,"name":"ERC1967InvalidAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3594:19:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3594:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1395,"nodeType":"RevertStatement","src":"3587:38:10"}]}},{"expression":{"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1401,"name":"ADMIN_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1364,"src":"3672:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1398,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"3645:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2265_$","typeString":"type(library StorageSlot)"}},"id":1400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3657:14:10","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2176,"src":"3645:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2147_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3645:38:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2147_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1403,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3684:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2146,"src":"3645:44:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1404,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1380,"src":"3692:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3645:55:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1406,"nodeType":"ExpressionStatement","src":"3645:55:10"}]},"documentation":{"id":1378,"nodeType":"StructuredDocumentation","src":"3413:72:10","text":" @dev Stores a new address in the ERC-1967 admin slot."},"id":1408,"implemented":true,"kind":"function","modifiers":[],"name":"_setAdmin","nameLocation":"3499:9:10","nodeType":"FunctionDefinition","parameters":{"id":1381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1380,"mutability":"mutable","name":"newAdmin","nameLocation":"3517:8:10","nodeType":"VariableDeclaration","scope":1408,"src":"3509:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"3509:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3508:18:10"},"returnParameters":{"id":1382,"nodeType":"ParameterList","parameters":[],"src":"3535:0:10"},"scope":1545,"src":"3490:217:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1426,"nodeType":"Block","src":"3875:94:10","statements":[{"eventCall":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1417,"name":"getAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1377,"src":"3912:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3912:10:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1419,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"3924:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1414,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"3890:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1178_$","typeString":"type(contract IERC1967)"}},"id":1416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3899:12:10","memberName":"AdminChanged","nodeType":"MemberAccess","referencedDeclaration":1172,"src":"3890:21:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":1420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:43:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1421,"nodeType":"EmitStatement","src":"3885:48:10"},{"expression":{"arguments":[{"id":1423,"name":"newAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"3953:8:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1422,"name":"_setAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1408,"src":"3943:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3943:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1425,"nodeType":"ExpressionStatement","src":"3943:19:10"}]},"documentation":{"id":1409,"nodeType":"StructuredDocumentation","src":"3713:109:10","text":" @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."},"id":1427,"implemented":true,"kind":"function","modifiers":[],"name":"changeAdmin","nameLocation":"3836:11:10","nodeType":"FunctionDefinition","parameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"newAdmin","nameLocation":"3856:8:10","nodeType":"VariableDeclaration","scope":1427,"src":"3848:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1410,"name":"address","nodeType":"ElementaryTypeName","src":"3848:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3847:18:10"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[],"src":"3875:0:10"},"scope":1545,"src":"3827:142:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":true,"documentation":{"id":1428,"nodeType":"StructuredDocumentation","src":"3975:201:10","text":" @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"id":1431,"mutability":"constant","name":"BEACON_SLOT","nameLocation":"4272:11:10","nodeType":"VariableDeclaration","scope":1545,"src":"4246:106:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1429,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4246:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530","id":1430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4286:66:10","typeDescriptions":{"typeIdentifier":"t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1","typeString":"int_const 7415...(69 digits omitted)...4704"},"value":"0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"},"visibility":"internal"},{"body":{"id":1443,"nodeType":"Block","src":"4468:69:10","statements":[{"expression":{"expression":{"arguments":[{"id":1439,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"4512:11:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1437,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"4485:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2265_$","typeString":"type(library StorageSlot)"}},"id":1438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4497:14:10","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2176,"src":"4485:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2147_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4485:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2147_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1441,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4525:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2146,"src":"4485:45:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1436,"id":1442,"nodeType":"Return","src":"4478:52:10"}]},"documentation":{"id":1432,"nodeType":"StructuredDocumentation","src":"4359:51:10","text":" @dev Returns the current beacon."},"id":1444,"implemented":true,"kind":"function","modifiers":[],"name":"getBeacon","nameLocation":"4424:9:10","nodeType":"FunctionDefinition","parameters":{"id":1433,"nodeType":"ParameterList","parameters":[],"src":"4433:2:10"},"returnParameters":{"id":1436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1444,"src":"4459:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1434,"name":"address","nodeType":"ElementaryTypeName","src":"4459:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4458:9:10"},"scope":1545,"src":"4415:122:10","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1489,"nodeType":"Block","src":"4667:390:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1450,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4681:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4691:4:10","memberName":"code","nodeType":"MemberAccess","src":"4681:14:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4696:6:10","memberName":"length","nodeType":"MemberAccess","src":"4681:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4706:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4681:26:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1460,"nodeType":"IfStatement","src":"4677:95:10","trueBody":{"id":1459,"nodeType":"Block","src":"4709:63:10","statements":[{"errorCall":{"arguments":[{"id":1456,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4751:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1455,"name":"ERC1967InvalidBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1281,"src":"4730:20:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4730:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1458,"nodeType":"RevertStatement","src":"4723:38:10"}]}},{"expression":{"id":1468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":1464,"name":"BEACON_SLOT","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"4809:11:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1461,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"4782:11:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2265_$","typeString":"type(library StorageSlot)"}},"id":1463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4794:14:10","memberName":"getAddressSlot","nodeType":"MemberAccess","referencedDeclaration":2176,"src":"4782:26:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2147_storage_ptr_$","typeString":"function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"}},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4782:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2147_storage_ptr","typeString":"struct StorageSlot.AddressSlot storage pointer"}},"id":1466,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"4822:5:10","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2146,"src":"4782:45:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1467,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4830:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4782:57:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1469,"nodeType":"ExpressionStatement","src":"4782:57:10"},{"assignments":[1471],"declarations":[{"constant":false,"id":1471,"mutability":"mutable","name":"beaconImplementation","nameLocation":"4858:20:10","nodeType":"VariableDeclaration","scope":1489,"src":"4850:28:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1470,"name":"address","nodeType":"ElementaryTypeName","src":"4850:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1477,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1473,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1447,"src":"4889:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1472,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"4881:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1591_$","typeString":"type(contract IBeacon)"}},"id":1474,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1591","typeString":"contract IBeacon"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4900:14:10","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1590,"src":"4881:33:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4881:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4850:66:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1478,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"4930:20:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4951:4:10","memberName":"code","nodeType":"MemberAccess","src":"4930:25:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4956:6:10","memberName":"length","nodeType":"MemberAccess","src":"4930:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1481,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4966:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4930:37:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1488,"nodeType":"IfStatement","src":"4926:125:10","trueBody":{"id":1487,"nodeType":"Block","src":"4969:82:10","statements":[{"errorCall":{"arguments":[{"id":1484,"name":"beaconImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"5019:20:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1483,"name":"ERC1967InvalidImplementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"4990:28:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4990:50:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1486,"nodeType":"RevertStatement","src":"4983:57:10"}]}}]},"documentation":{"id":1445,"nodeType":"StructuredDocumentation","src":"4543:72:10","text":" @dev Stores a new beacon in the ERC-1967 beacon slot."},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"_setBeacon","nameLocation":"4629:10:10","nodeType":"FunctionDefinition","parameters":{"id":1448,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1447,"mutability":"mutable","name":"newBeacon","nameLocation":"4648:9:10","nodeType":"VariableDeclaration","scope":1490,"src":"4640:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1446,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4639:19:10"},"returnParameters":{"id":1449,"nodeType":"ParameterList","parameters":[],"src":"4667:0:10"},"scope":1545,"src":"4620:437:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1529,"nodeType":"Block","src":"5661:263:10","statements":[{"expression":{"arguments":[{"id":1499,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"5682:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1498,"name":"_setBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1490,"src":"5671:10:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5671:21:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1501,"nodeType":"ExpressionStatement","src":"5671:21:10"},{"eventCall":{"arguments":[{"id":1505,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"5731:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1502,"name":"IERC1967","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"5707:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC1967_$1178_$","typeString":"type(contract IERC1967)"}},"id":1504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5716:14:10","memberName":"BeaconUpgraded","nodeType":"MemberAccess","referencedDeclaration":1177,"src":"5707:23:10","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5707:34:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1507,"nodeType":"EmitStatement","src":"5702:39:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1508,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"5756:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5761:6:10","memberName":"length","nodeType":"MemberAccess","src":"5756:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5770:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5756:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1527,"nodeType":"Block","src":"5875:43:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1524,"name":"_checkNonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1544,"src":"5889:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1525,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5889:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1526,"nodeType":"ExpressionStatement","src":"5889:18:10"}]},"id":1528,"nodeType":"IfStatement","src":"5752:166:10","trueBody":{"id":1523,"nodeType":"Block","src":"5773:96:10","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":1516,"name":"newBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"5824:9:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1515,"name":"IBeacon","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"5816:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IBeacon_$1591_$","typeString":"type(contract IBeacon)"}},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:18:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IBeacon_$1591","typeString":"contract IBeacon"}},"id":1518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5835:14:10","memberName":"implementation","nodeType":"MemberAccess","referencedDeclaration":1590,"src":"5816:33:10","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":1519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5816:35:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1520,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"5853:4:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1512,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1850,"src":"5787:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$1850_$","typeString":"type(library Address)"}},"id":1514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5795:20:10","memberName":"functionDelegateCall","nodeType":"MemberAccess","referencedDeclaration":1767,"src":"5787:28:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":1521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5787:71:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1522,"nodeType":"ExpressionStatement","src":"5787:71:10"}]}}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"5063:514:10","text":" @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."},"id":1530,"implemented":true,"kind":"function","modifiers":[],"name":"upgradeBeaconToAndCall","nameLocation":"5591:22:10","nodeType":"FunctionDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"newBeacon","nameLocation":"5622:9:10","nodeType":"VariableDeclaration","scope":1530,"src":"5614:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"5614:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"data","nameLocation":"5646:4:10","nodeType":"VariableDeclaration","scope":1530,"src":"5633:17:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1494,"name":"bytes","nodeType":"ElementaryTypeName","src":"5633:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5613:38:10"},"returnParameters":{"id":1497,"nodeType":"ParameterList","parameters":[],"src":"5661:0:10"},"scope":1545,"src":"5582:342:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1543,"nodeType":"Block","src":"6149:86:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1534,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6163:3:10","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6167:5:10","memberName":"value","nodeType":"MemberAccess","src":"6163:9:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6175:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6163:13:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1542,"nodeType":"IfStatement","src":"6159:70:10","trueBody":{"id":1541,"nodeType":"Block","src":"6178:51:10","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":1538,"name":"ERC1967NonPayable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1284,"src":"6199:17:10","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6199:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1540,"nodeType":"RevertStatement","src":"6192:26:10"}]}}]},"documentation":{"id":1531,"nodeType":"StructuredDocumentation","src":"5930:178:10","text":" @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."},"id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"_checkNonPayable","nameLocation":"6122:16:10","nodeType":"FunctionDefinition","parameters":{"id":1532,"nodeType":"ParameterList","parameters":[],"src":"6138:2:10"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[],"src":"6149:0:10"},"scope":1545,"src":"6113:122:10","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":1546,"src":"496:5741:10","usedErrors":[1271,1276,1281,1284],"usedEvents":[]}],"src":"114:6124:10"}},"@openzeppelin/contracts/proxy/Proxy.sol":{"id":11,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Proxy.sol","exportedSymbols":{"Proxy":[1581]},"id":1582,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1547,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:11"},{"abstract":true,"baseContracts":[],"canonicalName":"Proxy","contractDependencies":[],"contractKind":"contract","documentation":{"id":1548,"nodeType":"StructuredDocumentation","src":"125:598:11","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"id":1581,"linearizedBaseContracts":[1581],"name":"Proxy","nameLocation":"742:5:11","nodeType":"ContractDefinition","nodes":[{"body":{"id":1555,"nodeType":"Block","src":"1009:835:11","statements":[{"AST":{"nativeSrc":"1028:810:11","nodeType":"YulBlock","src":"1028:810:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1281:1:11","nodeType":"YulLiteral","src":"1281:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"1284:1:11","nodeType":"YulLiteral","src":"1284:1:11","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1287:12:11","nodeType":"YulIdentifier","src":"1287:12:11"},"nativeSrc":"1287:14:11","nodeType":"YulFunctionCall","src":"1287:14:11"}],"functionName":{"name":"calldatacopy","nativeSrc":"1268:12:11","nodeType":"YulIdentifier","src":"1268:12:11"},"nativeSrc":"1268:34:11","nodeType":"YulFunctionCall","src":"1268:34:11"},"nativeSrc":"1268:34:11","nodeType":"YulExpressionStatement","src":"1268:34:11"},{"nativeSrc":"1429:74:11","nodeType":"YulVariableDeclaration","src":"1429:74:11","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"1456:3:11","nodeType":"YulIdentifier","src":"1456:3:11"},"nativeSrc":"1456:5:11","nodeType":"YulFunctionCall","src":"1456:5:11"},{"name":"implementation","nativeSrc":"1463:14:11","nodeType":"YulIdentifier","src":"1463:14:11"},{"kind":"number","nativeSrc":"1479:1:11","nodeType":"YulLiteral","src":"1479:1:11","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nativeSrc":"1482:12:11","nodeType":"YulIdentifier","src":"1482:12:11"},"nativeSrc":"1482:14:11","nodeType":"YulFunctionCall","src":"1482:14:11"},{"kind":"number","nativeSrc":"1498:1:11","nodeType":"YulLiteral","src":"1498:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"1501:1:11","nodeType":"YulLiteral","src":"1501:1:11","type":"","value":"0"}],"functionName":{"name":"delegatecall","nativeSrc":"1443:12:11","nodeType":"YulIdentifier","src":"1443:12:11"},"nativeSrc":"1443:60:11","nodeType":"YulFunctionCall","src":"1443:60:11"},"variables":[{"name":"result","nativeSrc":"1433:6:11","nodeType":"YulTypedName","src":"1433:6:11","type":""}]},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1571:1:11","nodeType":"YulLiteral","src":"1571:1:11","type":"","value":"0"},{"kind":"number","nativeSrc":"1574:1:11","nodeType":"YulLiteral","src":"1574:1:11","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1577:14:11","nodeType":"YulIdentifier","src":"1577:14:11"},"nativeSrc":"1577:16:11","nodeType":"YulFunctionCall","src":"1577:16:11"}],"functionName":{"name":"returndatacopy","nativeSrc":"1556:14:11","nodeType":"YulIdentifier","src":"1556:14:11"},"nativeSrc":"1556:38:11","nodeType":"YulFunctionCall","src":"1556:38:11"},"nativeSrc":"1556:38:11","nodeType":"YulExpressionStatement","src":"1556:38:11"},{"cases":[{"body":{"nativeSrc":"1689:59:11","nodeType":"YulBlock","src":"1689:59:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1714:1:11","nodeType":"YulLiteral","src":"1714:1:11","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1717:14:11","nodeType":"YulIdentifier","src":"1717:14:11"},"nativeSrc":"1717:16:11","nodeType":"YulFunctionCall","src":"1717:16:11"}],"functionName":{"name":"revert","nativeSrc":"1707:6:11","nodeType":"YulIdentifier","src":"1707:6:11"},"nativeSrc":"1707:27:11","nodeType":"YulFunctionCall","src":"1707:27:11"},"nativeSrc":"1707:27:11","nodeType":"YulExpressionStatement","src":"1707:27:11"}]},"nativeSrc":"1682:66:11","nodeType":"YulCase","src":"1682:66:11","value":{"kind":"number","nativeSrc":"1687:1:11","nodeType":"YulLiteral","src":"1687:1:11","type":"","value":"0"}},{"body":{"nativeSrc":"1769:59:11","nodeType":"YulBlock","src":"1769:59:11","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1794:1:11","nodeType":"YulLiteral","src":"1794:1:11","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nativeSrc":"1797:14:11","nodeType":"YulIdentifier","src":"1797:14:11"},"nativeSrc":"1797:16:11","nodeType":"YulFunctionCall","src":"1797:16:11"}],"functionName":{"name":"return","nativeSrc":"1787:6:11","nodeType":"YulIdentifier","src":"1787:6:11"},"nativeSrc":"1787:27:11","nodeType":"YulFunctionCall","src":"1787:27:11"},"nativeSrc":"1787:27:11","nodeType":"YulExpressionStatement","src":"1787:27:11"}]},"nativeSrc":"1761:67:11","nodeType":"YulCase","src":"1761:67:11","value":"default"}],"expression":{"name":"result","nativeSrc":"1615:6:11","nodeType":"YulIdentifier","src":"1615:6:11"},"nativeSrc":"1608:220:11","nodeType":"YulSwitch","src":"1608:220:11"}]},"evmVersion":"paris","externalReferences":[{"declaration":1551,"isOffset":false,"isSlot":false,"src":"1463:14:11","valueSize":1}],"id":1554,"nodeType":"InlineAssembly","src":"1019:819:11"}]},"documentation":{"id":1549,"nodeType":"StructuredDocumentation","src":"754:190:11","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":1556,"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","nameLocation":"958:9:11","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1551,"mutability":"mutable","name":"implementation","nameLocation":"976:14:11","nodeType":"VariableDeclaration","scope":1556,"src":"968:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"968:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"967:24:11"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"1009:0:11"},"scope":1581,"src":"949:895:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"documentation":{"id":1557,"nodeType":"StructuredDocumentation","src":"1850:173:11","text":" @dev This is a virtual function that should be overridden so it returns the address to which the fallback\n function and {_fallback} should delegate."},"id":1562,"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","nameLocation":"2037:15:11","nodeType":"FunctionDefinition","parameters":{"id":1558,"nodeType":"ParameterList","parameters":[],"src":"2052:2:11"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1562,"src":"2086:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1559,"name":"address","nodeType":"ElementaryTypeName","src":"2086:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2085:9:11"},"scope":1581,"src":"2028:67:11","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1571,"nodeType":"Block","src":"2361:45:11","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1567,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1562,"src":"2381:15:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2381:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1566,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1556,"src":"2371:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2371:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1570,"nodeType":"ExpressionStatement","src":"2371:28:11"}]},"documentation":{"id":1563,"nodeType":"StructuredDocumentation","src":"2101:217:11","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internal call site, it will return directly to the external caller."},"id":1572,"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","nameLocation":"2332:9:11","nodeType":"FunctionDefinition","parameters":{"id":1564,"nodeType":"ParameterList","parameters":[],"src":"2341:2:11"},"returnParameters":{"id":1565,"nodeType":"ParameterList","parameters":[],"src":"2361:0:11"},"scope":1581,"src":"2323:83:11","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1579,"nodeType":"Block","src":"2639:28:11","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1576,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1572,"src":"2649:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2649:11:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1578,"nodeType":"ExpressionStatement","src":"2649:11:11"}]},"documentation":{"id":1573,"nodeType":"StructuredDocumentation","src":"2412:186:11","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"id":1580,"implemented":true,"kind":"fallback","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1574,"nodeType":"ParameterList","parameters":[],"src":"2611:2:11"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[],"src":"2639:0:11"},"scope":1581,"src":"2603:64:11","stateMutability":"payable","virtual":true,"visibility":"external"}],"scope":1582,"src":"724:1945:11","usedErrors":[],"usedEvents":[]}],"src":"99:2571:11"}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"id":12,"ast":{"absolutePath":"@openzeppelin/contracts/proxy/beacon/IBeacon.sol","exportedSymbols":{"IBeacon":[1591]},"id":1592,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1583,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"108:24:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IBeacon","contractDependencies":[],"contractKind":"interface","documentation":{"id":1584,"nodeType":"StructuredDocumentation","src":"134:79:12","text":" @dev This is the interface that {BeaconProxy} expects of its beacon."},"fullyImplemented":false,"id":1591,"linearizedBaseContracts":[1591],"name":"IBeacon","nameLocation":"224:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1585,"nodeType":"StructuredDocumentation","src":"238:168:12","text":" @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."},"functionSelector":"5c60da1b","id":1590,"implemented":false,"kind":"function","modifiers":[],"name":"implementation","nameLocation":"420:14:12","nodeType":"FunctionDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[],"src":"434:2:12"},"returnParameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1590,"src":"460:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1587,"name":"address","nodeType":"ElementaryTypeName","src":"460:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"459:9:12"},"scope":1591,"src":"411:58:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1592,"src":"214:257:12","usedErrors":[],"usedEvents":[]}],"src":"108:364:12"}},"@openzeppelin/contracts/utils/Address.sol":{"id":13,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1850],"Errors":[1872]},"id":1851,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1593,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:13"},{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","file":"./Errors.sol","id":1595,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1851,"sourceUnit":1873,"src":"127:36:13","symbolAliases":[{"foreign":{"id":1594,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"135:6:13","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1596,"nodeType":"StructuredDocumentation","src":"165:67:13","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1850,"linearizedBaseContracts":[1850],"name":"Address","nameLocation":"241:7:13","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1597,"nodeType":"StructuredDocumentation","src":"255:75:13","text":" @dev There's no code at `target` (it is not a contract)."},"errorSelector":"9996b315","id":1601,"name":"AddressEmptyCode","nameLocation":"341:16:13","nodeType":"ErrorDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1599,"mutability":"mutable","name":"target","nameLocation":"366:6:13","nodeType":"VariableDeclaration","scope":1601,"src":"358:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1598,"name":"address","nodeType":"ElementaryTypeName","src":"358:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"357:16:13"},"src":"335:39:13"},{"body":{"id":1647,"nodeType":"Block","src":"1361:278:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1611,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1383:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1850","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1850","typeString":"library Address"}],"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1375:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1609,"name":"address","nodeType":"ElementaryTypeName","src":"1375:7:13","typeDescriptions":{}}},"id":1612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1375:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1389:7:13","memberName":"balance","nodeType":"MemberAccess","src":"1375:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1614,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"1399:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1375:30:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1628,"nodeType":"IfStatement","src":"1371:125:13","trueBody":{"id":1627,"nodeType":"Block","src":"1407:89:13","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":1621,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1463:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1850","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1850","typeString":"library Address"}],"id":1620,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1455:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1619,"name":"address","nodeType":"ElementaryTypeName","src":"1455:7:13","typeDescriptions":{}}},"id":1622,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1455:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:7:13","memberName":"balance","nodeType":"MemberAccess","src":"1455:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1624,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"1478:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1616,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"1428:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1872_$","typeString":"type(library Errors)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1435:19:13","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1860,"src":"1428:26:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1428:57:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1626,"nodeType":"RevertStatement","src":"1421:64:13"}]}},{"assignments":[1630,null],"declarations":[{"constant":false,"id":1630,"mutability":"mutable","name":"success","nameLocation":"1512:7:13","nodeType":"VariableDeclaration","scope":1647,"src":"1507:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1629,"name":"bool","nodeType":"ElementaryTypeName","src":"1507:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1637,"initialValue":{"arguments":[{"hexValue":"","id":1635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1555:2:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1631,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1604,"src":"1525:9:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1535:4:13","memberName":"call","nodeType":"MemberAccess","src":"1525:14:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1633,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1606,"src":"1547:6:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"1525:29:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1525:33:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"1506:52:13"},{"condition":{"id":1639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1572:8:13","subExpression":{"id":1638,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1630,"src":"1573:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1646,"nodeType":"IfStatement","src":"1568:65:13","trueBody":{"id":1645,"nodeType":"Block","src":"1582:51:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1640,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"1603:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1872_$","typeString":"type(library Errors)"}},"id":1642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1610:10:13","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":1863,"src":"1603:17:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1603:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1644,"nodeType":"RevertStatement","src":"1596:26:13"}]}}]},"documentation":{"id":1602,"nodeType":"StructuredDocumentation","src":"380:905:13","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1648,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"1299:9:13","nodeType":"FunctionDefinition","parameters":{"id":1607,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1604,"mutability":"mutable","name":"recipient","nameLocation":"1325:9:13","nodeType":"VariableDeclaration","scope":1648,"src":"1309:25:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1603,"name":"address","nodeType":"ElementaryTypeName","src":"1309:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1606,"mutability":"mutable","name":"amount","nameLocation":"1344:6:13","nodeType":"VariableDeclaration","scope":1648,"src":"1336:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1605,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1308:43:13"},"returnParameters":{"id":1608,"nodeType":"ParameterList","parameters":[],"src":"1361:0:13"},"scope":1850,"src":"1290:349:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1664,"nodeType":"Block","src":"2573:62:13","statements":[{"expression":{"arguments":[{"id":1659,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1651,"src":"2612:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1660,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"2620:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2626:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1658,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1715,"src":"2590:21:13","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256) returns (bytes memory)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2590:38:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1657,"id":1663,"nodeType":"Return","src":"2583:45:13"}]},"documentation":{"id":1649,"nodeType":"StructuredDocumentation","src":"1645:834:13","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."},"id":1665,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"2493:12:13","nodeType":"FunctionDefinition","parameters":{"id":1654,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1651,"mutability":"mutable","name":"target","nameLocation":"2514:6:13","nodeType":"VariableDeclaration","scope":1665,"src":"2506:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1650,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1653,"mutability":"mutable","name":"data","nameLocation":"2535:4:13","nodeType":"VariableDeclaration","scope":1665,"src":"2522:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1652,"name":"bytes","nodeType":"ElementaryTypeName","src":"2522:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2505:35:13"},"returnParameters":{"id":1657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1656,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1665,"src":"2559:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1655,"name":"bytes","nodeType":"ElementaryTypeName","src":"2559:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2558:14:13"},"scope":1850,"src":"2484:151:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1714,"nodeType":"Block","src":"3072:294:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1679,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3094:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1850","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1850","typeString":"library Address"}],"id":1678,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3086:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1677,"name":"address","nodeType":"ElementaryTypeName","src":"3086:7:13","typeDescriptions":{}}},"id":1680,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3086:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1681,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3100:7:13","memberName":"balance","nodeType":"MemberAccess","src":"3086:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1682,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"3110:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3086:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1696,"nodeType":"IfStatement","src":"3082:123:13","trueBody":{"id":1695,"nodeType":"Block","src":"3117:88:13","statements":[{"errorCall":{"arguments":[{"expression":{"arguments":[{"id":1689,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3173:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1850","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1850","typeString":"library Address"}],"id":1688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3165:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1687,"name":"address","nodeType":"ElementaryTypeName","src":"3165:7:13","typeDescriptions":{}}},"id":1690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3165:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3179:7:13","memberName":"balance","nodeType":"MemberAccess","src":"3165:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1692,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"3188:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1684,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"3138:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1872_$","typeString":"type(library Errors)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3145:19:13","memberName":"InsufficientBalance","nodeType":"MemberAccess","referencedDeclaration":1860,"src":"3138:26:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":1693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3138:56:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1694,"nodeType":"RevertStatement","src":"3131:63:13"}]}},{"assignments":[1698,1700],"declarations":[{"constant":false,"id":1698,"mutability":"mutable","name":"success","nameLocation":"3220:7:13","nodeType":"VariableDeclaration","scope":1714,"src":"3215:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1697,"name":"bool","nodeType":"ElementaryTypeName","src":"3215:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"returndata","nameLocation":"3242:10:13","nodeType":"VariableDeclaration","scope":1714,"src":"3229:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1699,"name":"bytes","nodeType":"ElementaryTypeName","src":"3229:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1707,"initialValue":{"arguments":[{"id":1705,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1670,"src":"3282:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1701,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"3256:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3263:4:13","memberName":"call","nodeType":"MemberAccess","src":"3256:11:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"3275:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3256:25:13","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1706,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3256:31:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3214:73:13"},{"expression":{"arguments":[{"id":1709,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"3331:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1710,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1698,"src":"3339:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1711,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1700,"src":"3348:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1708,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"3304:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3304:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1676,"id":1713,"nodeType":"Return","src":"3297:62:13"}]},"documentation":{"id":1666,"nodeType":"StructuredDocumentation","src":"2641:313:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."},"id":1715,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"2968:21:13","nodeType":"FunctionDefinition","parameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1668,"mutability":"mutable","name":"target","nameLocation":"2998:6:13","nodeType":"VariableDeclaration","scope":1715,"src":"2990:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1667,"name":"address","nodeType":"ElementaryTypeName","src":"2990:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1670,"mutability":"mutable","name":"data","nameLocation":"3019:4:13","nodeType":"VariableDeclaration","scope":1715,"src":"3006:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1669,"name":"bytes","nodeType":"ElementaryTypeName","src":"3006:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1672,"mutability":"mutable","name":"value","nameLocation":"3033:5:13","nodeType":"VariableDeclaration","scope":1715,"src":"3025:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"3025:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2989:50:13"},"returnParameters":{"id":1676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1675,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1715,"src":"3058:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1674,"name":"bytes","nodeType":"ElementaryTypeName","src":"3058:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3057:14:13"},"scope":1850,"src":"2959:407:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1740,"nodeType":"Block","src":"3605:154:13","statements":[{"assignments":[1726,1728],"declarations":[{"constant":false,"id":1726,"mutability":"mutable","name":"success","nameLocation":"3621:7:13","nodeType":"VariableDeclaration","scope":1740,"src":"3616:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1725,"name":"bool","nodeType":"ElementaryTypeName","src":"3616:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1728,"mutability":"mutable","name":"returndata","nameLocation":"3643:10:13","nodeType":"VariableDeclaration","scope":1740,"src":"3630:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1727,"name":"bytes","nodeType":"ElementaryTypeName","src":"3630:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1733,"initialValue":{"arguments":[{"id":1731,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1720,"src":"3675:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1729,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"3657:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3664:10:13","memberName":"staticcall","nodeType":"MemberAccess","src":"3657:17:13","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3657:23:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3615:65:13"},{"expression":{"arguments":[{"id":1735,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1718,"src":"3724:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1736,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"3732:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1737,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"3741:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1734,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"3697:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3697:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1724,"id":1739,"nodeType":"Return","src":"3690:62:13"}]},"documentation":{"id":1716,"nodeType":"StructuredDocumentation","src":"3372:128:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."},"id":1741,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"3514:18:13","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1718,"mutability":"mutable","name":"target","nameLocation":"3541:6:13","nodeType":"VariableDeclaration","scope":1741,"src":"3533:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1717,"name":"address","nodeType":"ElementaryTypeName","src":"3533:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1720,"mutability":"mutable","name":"data","nameLocation":"3562:4:13","nodeType":"VariableDeclaration","scope":1741,"src":"3549:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1719,"name":"bytes","nodeType":"ElementaryTypeName","src":"3549:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3532:35:13"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1741,"src":"3591:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1722,"name":"bytes","nodeType":"ElementaryTypeName","src":"3591:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3590:14:13"},"scope":1850,"src":"3505:254:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1766,"nodeType":"Block","src":"3997:156:13","statements":[{"assignments":[1752,1754],"declarations":[{"constant":false,"id":1752,"mutability":"mutable","name":"success","nameLocation":"4013:7:13","nodeType":"VariableDeclaration","scope":1766,"src":"4008:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1751,"name":"bool","nodeType":"ElementaryTypeName","src":"4008:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1754,"mutability":"mutable","name":"returndata","nameLocation":"4035:10:13","nodeType":"VariableDeclaration","scope":1766,"src":"4022:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1753,"name":"bytes","nodeType":"ElementaryTypeName","src":"4022:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1759,"initialValue":{"arguments":[{"id":1757,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1746,"src":"4069:4:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1755,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"4049:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4056:12:13","memberName":"delegatecall","nodeType":"MemberAccess","src":"4049:19:13","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:25:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4007:67:13"},{"expression":{"arguments":[{"id":1761,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"4118:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1762,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1752,"src":"4126:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1763,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1754,"src":"4135:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1760,"name":"verifyCallResultFromTarget","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1807,"src":"4091:26:13","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bool,bytes memory) view returns (bytes memory)"}},"id":1764,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4091:55:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1750,"id":1765,"nodeType":"Return","src":"4084:62:13"}]},"documentation":{"id":1742,"nodeType":"StructuredDocumentation","src":"3765:130:13","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."},"id":1767,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"3909:20:13","nodeType":"FunctionDefinition","parameters":{"id":1747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1744,"mutability":"mutable","name":"target","nameLocation":"3938:6:13","nodeType":"VariableDeclaration","scope":1767,"src":"3930:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1743,"name":"address","nodeType":"ElementaryTypeName","src":"3930:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1746,"mutability":"mutable","name":"data","nameLocation":"3959:4:13","nodeType":"VariableDeclaration","scope":1767,"src":"3946:17:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1745,"name":"bytes","nodeType":"ElementaryTypeName","src":"3946:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3929:35:13"},"returnParameters":{"id":1750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1767,"src":"3983:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1748,"name":"bytes","nodeType":"ElementaryTypeName","src":"3983:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3982:14:13"},"scope":1850,"src":"3900:253:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1806,"nodeType":"Block","src":"4579:424:13","statements":[{"condition":{"id":1780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4593:8:13","subExpression":{"id":1779,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1772,"src":"4594:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1804,"nodeType":"Block","src":"4653:344:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1786,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"4841:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4852:6:13","memberName":"length","nodeType":"MemberAccess","src":"4841:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4862:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4841:22:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1794,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1790,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"4867:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4874:4:13","memberName":"code","nodeType":"MemberAccess","src":"4867:11:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4879:6:13","memberName":"length","nodeType":"MemberAccess","src":"4867:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1793,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4889:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4867:23:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4841:49:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1801,"nodeType":"IfStatement","src":"4837:119:13","trueBody":{"id":1800,"nodeType":"Block","src":"4892:64:13","statements":[{"errorCall":{"arguments":[{"id":1797,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"4934:6:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1796,"name":"AddressEmptyCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1601,"src":"4917:16:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_address_$returns$_t_error_$","typeString":"function (address) pure returns (error)"}},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4917:24:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1799,"nodeType":"RevertStatement","src":"4910:31:13"}]}},{"expression":{"id":1802,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"4976:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1778,"id":1803,"nodeType":"Return","src":"4969:17:13"}]},"id":1805,"nodeType":"IfStatement","src":"4589:408:13","trueBody":{"id":1785,"nodeType":"Block","src":"4603:44:13","statements":[{"expression":{"arguments":[{"id":1782,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1774,"src":"4625:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1781,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"4617:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4617:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1784,"nodeType":"ExpressionStatement","src":"4617:19:13"}]}}]},"documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"4159:257:13","text":" @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."},"id":1807,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResultFromTarget","nameLocation":"4430:26:13","nodeType":"FunctionDefinition","parameters":{"id":1775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"target","nameLocation":"4474:6:13","nodeType":"VariableDeclaration","scope":1807,"src":"4466:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1769,"name":"address","nodeType":"ElementaryTypeName","src":"4466:7:13","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1772,"mutability":"mutable","name":"success","nameLocation":"4495:7:13","nodeType":"VariableDeclaration","scope":1807,"src":"4490:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1771,"name":"bool","nodeType":"ElementaryTypeName","src":"4490:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1774,"mutability":"mutable","name":"returndata","nameLocation":"4525:10:13","nodeType":"VariableDeclaration","scope":1807,"src":"4512:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1773,"name":"bytes","nodeType":"ElementaryTypeName","src":"4512:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4456:85:13"},"returnParameters":{"id":1778,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1777,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1807,"src":"4565:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1776,"name":"bytes","nodeType":"ElementaryTypeName","src":"4565:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4564:14:13"},"scope":1850,"src":"4421:582:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1828,"nodeType":"Block","src":"5307:122:13","statements":[{"condition":{"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5321:8:13","subExpression":{"id":1817,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1810,"src":"5322:7:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1826,"nodeType":"Block","src":"5381:42:13","statements":[{"expression":{"id":1824,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"5402:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1816,"id":1825,"nodeType":"Return","src":"5395:17:13"}]},"id":1827,"nodeType":"IfStatement","src":"5317:106:13","trueBody":{"id":1823,"nodeType":"Block","src":"5331:44:13","statements":[{"expression":{"arguments":[{"id":1820,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1812,"src":"5353:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1819,"name":"_revert","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1849,"src":"5345:7:13","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) pure"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5345:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1822,"nodeType":"ExpressionStatement","src":"5345:19:13"}]}}]},"documentation":{"id":1808,"nodeType":"StructuredDocumentation","src":"5009:191:13","text":" @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."},"id":1829,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"5214:16:13","nodeType":"FunctionDefinition","parameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1810,"mutability":"mutable","name":"success","nameLocation":"5236:7:13","nodeType":"VariableDeclaration","scope":1829,"src":"5231:12:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1809,"name":"bool","nodeType":"ElementaryTypeName","src":"5231:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1812,"mutability":"mutable","name":"returndata","nameLocation":"5258:10:13","nodeType":"VariableDeclaration","scope":1829,"src":"5245:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1811,"name":"bytes","nodeType":"ElementaryTypeName","src":"5245:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5230:39:13"},"returnParameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"5293:12:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1814,"name":"bytes","nodeType":"ElementaryTypeName","src":"5293:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5292:14:13"},"scope":1850,"src":"5205:224:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1848,"nodeType":"Block","src":"5598:432:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1835,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"5674:10:13","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5685:6:13","memberName":"length","nodeType":"MemberAccess","src":"5674:17:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5694:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5674:21:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1846,"nodeType":"Block","src":"5973:51:13","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1841,"name":"Errors","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"5994:6:13","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Errors_$1872_$","typeString":"type(library Errors)"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6001:10:13","memberName":"FailedCall","nodeType":"MemberAccess","referencedDeclaration":1863,"src":"5994:17:13","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":1844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5994:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1845,"nodeType":"RevertStatement","src":"5987:26:13"}]},"id":1847,"nodeType":"IfStatement","src":"5670:354:13","trueBody":{"id":1840,"nodeType":"Block","src":"5697:270:13","statements":[{"AST":{"nativeSrc":"5824:133:13","nodeType":"YulBlock","src":"5824:133:13","statements":[{"nativeSrc":"5842:40:13","nodeType":"YulVariableDeclaration","src":"5842:40:13","value":{"arguments":[{"name":"returndata","nativeSrc":"5871:10:13","nodeType":"YulIdentifier","src":"5871:10:13"}],"functionName":{"name":"mload","nativeSrc":"5865:5:13","nodeType":"YulIdentifier","src":"5865:5:13"},"nativeSrc":"5865:17:13","nodeType":"YulFunctionCall","src":"5865:17:13"},"variables":[{"name":"returndata_size","nativeSrc":"5846:15:13","nodeType":"YulTypedName","src":"5846:15:13","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"5910:2:13","nodeType":"YulLiteral","src":"5910:2:13","type":"","value":"32"},{"name":"returndata","nativeSrc":"5914:10:13","nodeType":"YulIdentifier","src":"5914:10:13"}],"functionName":{"name":"add","nativeSrc":"5906:3:13","nodeType":"YulIdentifier","src":"5906:3:13"},"nativeSrc":"5906:19:13","nodeType":"YulFunctionCall","src":"5906:19:13"},{"name":"returndata_size","nativeSrc":"5927:15:13","nodeType":"YulIdentifier","src":"5927:15:13"}],"functionName":{"name":"revert","nativeSrc":"5899:6:13","nodeType":"YulIdentifier","src":"5899:6:13"},"nativeSrc":"5899:44:13","nodeType":"YulFunctionCall","src":"5899:44:13"},"nativeSrc":"5899:44:13","nodeType":"YulExpressionStatement","src":"5899:44:13"}]},"evmVersion":"paris","externalReferences":[{"declaration":1832,"isOffset":false,"isSlot":false,"src":"5871:10:13","valueSize":1},{"declaration":1832,"isOffset":false,"isSlot":false,"src":"5914:10:13","valueSize":1}],"flags":["memory-safe"],"id":1839,"nodeType":"InlineAssembly","src":"5799:158:13"}]}}]},"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"5435:103:13","text":" @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."},"id":1849,"implemented":true,"kind":"function","modifiers":[],"name":"_revert","nameLocation":"5552:7:13","nodeType":"FunctionDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"returndata","nameLocation":"5573:10:13","nodeType":"VariableDeclaration","scope":1849,"src":"5560:23:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1831,"name":"bytes","nodeType":"ElementaryTypeName","src":"5560:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5559:25:13"},"returnParameters":{"id":1834,"nodeType":"ParameterList","parameters":[],"src":"5598:0:13"},"scope":1850,"src":"5543:487:13","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1851,"src":"233:5799:13","usedErrors":[1601],"usedEvents":[]}],"src":"101:5932:13"}},"@openzeppelin/contracts/utils/Errors.sol":{"id":14,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Errors.sol","exportedSymbols":{"Errors":[1872]},"id":1873,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1852,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"100:24:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Errors","contractDependencies":[],"contractKind":"library","documentation":{"id":1853,"nodeType":"StructuredDocumentation","src":"126:284:14","text":" @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"},"fullyImplemented":true,"id":1872,"linearizedBaseContracts":[1872],"name":"Errors","nameLocation":"419:6:14","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1854,"nodeType":"StructuredDocumentation","src":"432:94:14","text":" @dev The ETH balance of the account is not enough to perform the operation."},"errorSelector":"cf479181","id":1860,"name":"InsufficientBalance","nameLocation":"537:19:14","nodeType":"ErrorDefinition","parameters":{"id":1859,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1856,"mutability":"mutable","name":"balance","nameLocation":"565:7:14","nodeType":"VariableDeclaration","scope":1860,"src":"557:15:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1855,"name":"uint256","nodeType":"ElementaryTypeName","src":"557:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1858,"mutability":"mutable","name":"needed","nameLocation":"582:6:14","nodeType":"VariableDeclaration","scope":1860,"src":"574:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"574:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"556:33:14"},"src":"531:59:14"},{"documentation":{"id":1861,"nodeType":"StructuredDocumentation","src":"596:89:14","text":" @dev A call to an address target failed. The target may have reverted."},"errorSelector":"d6bda275","id":1863,"name":"FailedCall","nameLocation":"696:10:14","nodeType":"ErrorDefinition","parameters":{"id":1862,"nodeType":"ParameterList","parameters":[],"src":"706:2:14"},"src":"690:19:14"},{"documentation":{"id":1864,"nodeType":"StructuredDocumentation","src":"715:46:14","text":" @dev The deployment failed."},"errorSelector":"b06ebf3d","id":1866,"name":"FailedDeployment","nameLocation":"772:16:14","nodeType":"ErrorDefinition","parameters":{"id":1865,"nodeType":"ParameterList","parameters":[],"src":"788:2:14"},"src":"766:25:14"},{"documentation":{"id":1867,"nodeType":"StructuredDocumentation","src":"797:58:14","text":" @dev A necessary precompile is missing."},"errorSelector":"42b01bce","id":1871,"name":"MissingPrecompile","nameLocation":"866:17:14","nodeType":"ErrorDefinition","parameters":{"id":1870,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1869,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1871,"src":"884:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1868,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"883:9:14"},"src":"860:33:14"}],"scope":1873,"src":"411:484:14","usedErrors":[1860,1863,1866,1871],"usedEvents":[]}],"src":"100:796:14"}},"@openzeppelin/contracts/utils/Panic.sol":{"id":15,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","exportedSymbols":{"Panic":[1924]},"id":1925,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1874,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"99:24:15"},{"abstract":false,"baseContracts":[],"canonicalName":"Panic","contractDependencies":[],"contractKind":"library","documentation":{"id":1875,"nodeType":"StructuredDocumentation","src":"125:489:15","text":" @dev Helper library for emitting standardized panic codes.\n ```solidity\n contract Example {\n      using Panic for uint256;\n      // Use any of the declared internal constants\n      function foo() { Panic.GENERIC.panic(); }\n      // Alternatively\n      function foo() { Panic.panic(Panic.GENERIC); }\n }\n ```\n Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil].\n _Available since v5.1._"},"fullyImplemented":true,"id":1924,"linearizedBaseContracts":[1924],"name":"Panic","nameLocation":"665:5:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1876,"nodeType":"StructuredDocumentation","src":"677:36:15","text":"@dev generic / unspecified error"},"id":1879,"mutability":"constant","name":"GENERIC","nameLocation":"744:7:15","nodeType":"VariableDeclaration","scope":1924,"src":"718:40:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1877,"name":"uint256","nodeType":"ElementaryTypeName","src":"718:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783030","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"754:4:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"internal"},{"constant":true,"documentation":{"id":1880,"nodeType":"StructuredDocumentation","src":"764:37:15","text":"@dev used by the assert() builtin"},"id":1883,"mutability":"constant","name":"ASSERT","nameLocation":"832:6:15","nodeType":"VariableDeclaration","scope":1924,"src":"806:39:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1881,"name":"uint256","nodeType":"ElementaryTypeName","src":"806:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783031","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"841:4:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x01"},"visibility":"internal"},{"constant":true,"documentation":{"id":1884,"nodeType":"StructuredDocumentation","src":"851:41:15","text":"@dev arithmetic underflow or overflow"},"id":1887,"mutability":"constant","name":"UNDER_OVERFLOW","nameLocation":"923:14:15","nodeType":"VariableDeclaration","scope":1924,"src":"897:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1885,"name":"uint256","nodeType":"ElementaryTypeName","src":"897:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783131","id":1886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"940:4:15","typeDescriptions":{"typeIdentifier":"t_rational_17_by_1","typeString":"int_const 17"},"value":"0x11"},"visibility":"internal"},{"constant":true,"documentation":{"id":1888,"nodeType":"StructuredDocumentation","src":"950:35:15","text":"@dev division or modulo by zero"},"id":1891,"mutability":"constant","name":"DIVISION_BY_ZERO","nameLocation":"1016:16:15","nodeType":"VariableDeclaration","scope":1924,"src":"990:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1889,"name":"uint256","nodeType":"ElementaryTypeName","src":"990:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783132","id":1890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1035:4:15","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"0x12"},"visibility":"internal"},{"constant":true,"documentation":{"id":1892,"nodeType":"StructuredDocumentation","src":"1045:30:15","text":"@dev enum conversion error"},"id":1895,"mutability":"constant","name":"ENUM_CONVERSION_ERROR","nameLocation":"1106:21:15","nodeType":"VariableDeclaration","scope":1924,"src":"1080:54:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"1080:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783231","id":1894,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1130:4:15","typeDescriptions":{"typeIdentifier":"t_rational_33_by_1","typeString":"int_const 33"},"value":"0x21"},"visibility":"internal"},{"constant":true,"documentation":{"id":1896,"nodeType":"StructuredDocumentation","src":"1140:36:15","text":"@dev invalid encoding in storage"},"id":1899,"mutability":"constant","name":"STORAGE_ENCODING_ERROR","nameLocation":"1207:22:15","nodeType":"VariableDeclaration","scope":1924,"src":"1181:55:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1897,"name":"uint256","nodeType":"ElementaryTypeName","src":"1181:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783232","id":1898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1232:4:15","typeDescriptions":{"typeIdentifier":"t_rational_34_by_1","typeString":"int_const 34"},"value":"0x22"},"visibility":"internal"},{"constant":true,"documentation":{"id":1900,"nodeType":"StructuredDocumentation","src":"1242:24:15","text":"@dev empty array pop"},"id":1903,"mutability":"constant","name":"EMPTY_ARRAY_POP","nameLocation":"1297:15:15","nodeType":"VariableDeclaration","scope":1924,"src":"1271:48:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1901,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783331","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1315:4:15","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"0x31"},"visibility":"internal"},{"constant":true,"documentation":{"id":1904,"nodeType":"StructuredDocumentation","src":"1325:35:15","text":"@dev array out of bounds access"},"id":1907,"mutability":"constant","name":"ARRAY_OUT_OF_BOUNDS","nameLocation":"1391:19:15","nodeType":"VariableDeclaration","scope":1924,"src":"1365:52:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1905,"name":"uint256","nodeType":"ElementaryTypeName","src":"1365:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783332","id":1906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1413:4:15","typeDescriptions":{"typeIdentifier":"t_rational_50_by_1","typeString":"int_const 50"},"value":"0x32"},"visibility":"internal"},{"constant":true,"documentation":{"id":1908,"nodeType":"StructuredDocumentation","src":"1423:65:15","text":"@dev resource error (too large allocation or too large array)"},"id":1911,"mutability":"constant","name":"RESOURCE_ERROR","nameLocation":"1519:14:15","nodeType":"VariableDeclaration","scope":1924,"src":"1493:47:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1909,"name":"uint256","nodeType":"ElementaryTypeName","src":"1493:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783431","id":1910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1536:4:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"0x41"},"visibility":"internal"},{"constant":true,"documentation":{"id":1912,"nodeType":"StructuredDocumentation","src":"1546:42:15","text":"@dev calling invalid internal function"},"id":1915,"mutability":"constant","name":"INVALID_INTERNAL_FUNCTION","nameLocation":"1619:25:15","nodeType":"VariableDeclaration","scope":1924,"src":"1593:58:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1913,"name":"uint256","nodeType":"ElementaryTypeName","src":"1593:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"30783531","id":1914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1647:4:15","typeDescriptions":{"typeIdentifier":"t_rational_81_by_1","typeString":"int_const 81"},"value":"0x51"},"visibility":"internal"},{"body":{"id":1922,"nodeType":"Block","src":"1819:151:15","statements":[{"AST":{"nativeSrc":"1854:110:15","nodeType":"YulBlock","src":"1854:110:15","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1875:4:15","nodeType":"YulLiteral","src":"1875:4:15","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1881:10:15","nodeType":"YulLiteral","src":"1881:10:15","type":"","value":"0x4e487b71"}],"functionName":{"name":"mstore","nativeSrc":"1868:6:15","nodeType":"YulIdentifier","src":"1868:6:15"},"nativeSrc":"1868:24:15","nodeType":"YulFunctionCall","src":"1868:24:15"},"nativeSrc":"1868:24:15","nodeType":"YulExpressionStatement","src":"1868:24:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1912:4:15","nodeType":"YulLiteral","src":"1912:4:15","type":"","value":"0x20"},{"name":"code","nativeSrc":"1918:4:15","nodeType":"YulIdentifier","src":"1918:4:15"}],"functionName":{"name":"mstore","nativeSrc":"1905:6:15","nodeType":"YulIdentifier","src":"1905:6:15"},"nativeSrc":"1905:18:15","nodeType":"YulFunctionCall","src":"1905:18:15"},"nativeSrc":"1905:18:15","nodeType":"YulExpressionStatement","src":"1905:18:15"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1943:4:15","nodeType":"YulLiteral","src":"1943:4:15","type":"","value":"0x1c"},{"kind":"number","nativeSrc":"1949:4:15","nodeType":"YulLiteral","src":"1949:4:15","type":"","value":"0x24"}],"functionName":{"name":"revert","nativeSrc":"1936:6:15","nodeType":"YulIdentifier","src":"1936:6:15"},"nativeSrc":"1936:18:15","nodeType":"YulFunctionCall","src":"1936:18:15"},"nativeSrc":"1936:18:15","nodeType":"YulExpressionStatement","src":"1936:18:15"}]},"evmVersion":"paris","externalReferences":[{"declaration":1918,"isOffset":false,"isSlot":false,"src":"1918:4:15","valueSize":1}],"flags":["memory-safe"],"id":1921,"nodeType":"InlineAssembly","src":"1829:135:15"}]},"documentation":{"id":1916,"nodeType":"StructuredDocumentation","src":"1658:113:15","text":"@dev Reverts with a panic code. Recommended to use with\n the internal constants with predefined codes."},"id":1923,"implemented":true,"kind":"function","modifiers":[],"name":"panic","nameLocation":"1785:5:15","nodeType":"FunctionDefinition","parameters":{"id":1919,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1918,"mutability":"mutable","name":"code","nameLocation":"1799:4:15","nodeType":"VariableDeclaration","scope":1923,"src":"1791:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1917,"name":"uint256","nodeType":"ElementaryTypeName","src":"1791:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1790:14:15"},"returnParameters":{"id":1920,"nodeType":"ParameterList","parameters":[],"src":"1819:0:15"},"scope":1924,"src":"1776:194:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1925,"src":"657:1315:15","usedErrors":[],"usedEvents":[]}],"src":"99:1874:15"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"id":16,"ast":{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","exportedSymbols":{"ShortString":[1930],"ShortStrings":[2141],"StorageSlot":[2265]},"id":2142,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1926,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"106:24:16"},{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","file":"./StorageSlot.sol","id":1928,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2142,"sourceUnit":2266,"src":"132:46:16","symbolAliases":[{"foreign":{"id":1927,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"140:11:16","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"canonicalName":"ShortString","id":1930,"name":"ShortString","nameLocation":"353:11:16","nodeType":"UserDefinedValueTypeDefinition","src":"348:28:16","underlyingType":{"id":1929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"368:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},{"abstract":false,"baseContracts":[],"canonicalName":"ShortStrings","contractDependencies":[],"contractKind":"library","documentation":{"id":1931,"nodeType":"StructuredDocumentation","src":"378:876:16","text":" @dev This library provides functions to convert short memory strings\n into a `ShortString` type that can be used as an immutable variable.\n Strings of arbitrary length can be optimized using this library if\n they are short enough (up to 31 bytes) by packing them with their\n length (1 byte) in a single EVM word (32 bytes). Additionally, a\n fallback mechanism can be used for every other case.\n Usage example:\n ```solidity\n contract Named {\n     using ShortStrings for *;\n     ShortString private immutable _name;\n     string private _nameFallback;\n     constructor(string memory contractName) {\n         _name = contractName.toShortStringWithFallback(_nameFallback);\n     }\n     function name() external view returns (string memory) {\n         return _name.toStringWithFallback(_nameFallback);\n     }\n }\n ```"},"fullyImplemented":true,"id":2141,"linearizedBaseContracts":[2141],"name":"ShortStrings","nameLocation":"1263:12:16","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1934,"mutability":"constant","name":"FALLBACK_SENTINEL","nameLocation":"1370:17:16","nodeType":"VariableDeclaration","scope":2141,"src":"1345:111:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1345:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307830303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030303030304646","id":1933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1390:66:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0x00000000000000000000000000000000000000000000000000000000000000FF"},"visibility":"private"},{"errorSelector":"305a27a9","id":1938,"name":"StringTooLong","nameLocation":"1469:13:16","nodeType":"ErrorDefinition","parameters":{"id":1937,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1936,"mutability":"mutable","name":"str","nameLocation":"1490:3:16","nodeType":"VariableDeclaration","scope":1938,"src":"1483:10:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1935,"name":"string","nodeType":"ElementaryTypeName","src":"1483:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1482:12:16"},"src":"1463:32:16"},{"errorSelector":"b3512b0c","id":1940,"name":"InvalidShortString","nameLocation":"1506:18:16","nodeType":"ErrorDefinition","parameters":{"id":1939,"nodeType":"ParameterList","parameters":[],"src":"1524:2:16"},"src":"1500:27:16"},{"body":{"id":1983,"nodeType":"Block","src":"1786:208:16","statements":[{"assignments":[1950],"declarations":[{"constant":false,"id":1950,"mutability":"mutable","name":"bstr","nameLocation":"1809:4:16","nodeType":"VariableDeclaration","scope":1983,"src":"1796:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1949,"name":"bytes","nodeType":"ElementaryTypeName","src":"1796:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1955,"initialValue":{"arguments":[{"id":1953,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"1822:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1952,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1816:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":1951,"name":"bytes","nodeType":"ElementaryTypeName","src":"1816:5:16","typeDescriptions":{}}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1816:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1796:30:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1956,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"1840:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1845:6:16","memberName":"length","nodeType":"MemberAccess","src":"1840:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1854:2:16","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"1840:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1965,"nodeType":"IfStatement","src":"1836:72:16","trueBody":{"id":1964,"nodeType":"Block","src":"1858:50:16","statements":[{"errorCall":{"arguments":[{"id":1961,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1943,"src":"1893:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1960,"name":"StringTooLong","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1938,"src":"1879:13:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$","typeString":"function (string memory) pure returns (error)"}},"id":1962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1879:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":1963,"nodeType":"RevertStatement","src":"1872:25:16"}]}},{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":1974,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"1965:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1957:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1972,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1957:7:16","typeDescriptions":{}}},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1957:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1949:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1970,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:16","typeDescriptions":{}}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1949:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"|","rightExpression":{"expression":{"id":1977,"name":"bstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1950,"src":"1974:4:16","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1979:6:16","memberName":"length","nodeType":"MemberAccess","src":"1974:11:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1949:36:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1941:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":1968,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1941:7:16","typeDescriptions":{}}},"id":1980,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1941:45:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1966,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"1924:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1930_$","typeString":"type(ShortString)"}},"id":1967,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1936:4:16","memberName":"wrap","nodeType":"MemberAccess","src":"1924:16:16","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1930_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1924:63:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"functionReturnParameters":1948,"id":1982,"nodeType":"Return","src":"1917:70:16"}]},"documentation":{"id":1941,"nodeType":"StructuredDocumentation","src":"1533:170:16","text":" @dev Encode a string of at most 31 chars into a `ShortString`.\n This will trigger a `StringTooLong` error is the input string is too long."},"id":1984,"implemented":true,"kind":"function","modifiers":[],"name":"toShortString","nameLocation":"1717:13:16","nodeType":"FunctionDefinition","parameters":{"id":1944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1943,"mutability":"mutable","name":"str","nameLocation":"1745:3:16","nodeType":"VariableDeclaration","scope":1984,"src":"1731:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1942,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1730:19:16"},"returnParameters":{"id":1948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1947,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1984,"src":"1773:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"},"typeName":{"id":1946,"nodeType":"UserDefinedTypeName","pathNode":{"id":1945,"name":"ShortString","nameLocations":["1773:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1930,"src":"1773:11:16"},"referencedDeclaration":1930,"src":"1773:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"visibility":"internal"}],"src":"1772:13:16"},"scope":2141,"src":"1708:286:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2009,"nodeType":"Block","src":"2152:304:16","statements":[{"assignments":[1994],"declarations":[{"constant":false,"id":1994,"mutability":"mutable","name":"len","nameLocation":"2170:3:16","nodeType":"VariableDeclaration","scope":2009,"src":"2162:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1993,"name":"uint256","nodeType":"ElementaryTypeName","src":"2162:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1998,"initialValue":{"arguments":[{"id":1996,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1988,"src":"2187:4:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}],"id":1995,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"2176:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1930_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2176:16:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2162:30:16"},{"assignments":[2000],"declarations":[{"constant":false,"id":2000,"mutability":"mutable","name":"str","nameLocation":"2294:3:16","nodeType":"VariableDeclaration","scope":2009,"src":"2280:17:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1999,"name":"string","nodeType":"ElementaryTypeName","src":"2280:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2005,"initialValue":{"arguments":[{"hexValue":"3332","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2311:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"id":2002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2300:10:16","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2001,"name":"string","nodeType":"ElementaryTypeName","src":"2304:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2300:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"2280:34:16"},{"AST":{"nativeSrc":"2349:81:16","nodeType":"YulBlock","src":"2349:81:16","statements":[{"expression":{"arguments":[{"name":"str","nativeSrc":"2370:3:16","nodeType":"YulIdentifier","src":"2370:3:16"},{"name":"len","nativeSrc":"2375:3:16","nodeType":"YulIdentifier","src":"2375:3:16"}],"functionName":{"name":"mstore","nativeSrc":"2363:6:16","nodeType":"YulIdentifier","src":"2363:6:16"},"nativeSrc":"2363:16:16","nodeType":"YulFunctionCall","src":"2363:16:16"},"nativeSrc":"2363:16:16","nodeType":"YulExpressionStatement","src":"2363:16:16"},{"expression":{"arguments":[{"arguments":[{"name":"str","nativeSrc":"2403:3:16","nodeType":"YulIdentifier","src":"2403:3:16"},{"kind":"number","nativeSrc":"2408:4:16","nodeType":"YulLiteral","src":"2408:4:16","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2399:3:16","nodeType":"YulIdentifier","src":"2399:3:16"},"nativeSrc":"2399:14:16","nodeType":"YulFunctionCall","src":"2399:14:16"},{"name":"sstr","nativeSrc":"2415:4:16","nodeType":"YulIdentifier","src":"2415:4:16"}],"functionName":{"name":"mstore","nativeSrc":"2392:6:16","nodeType":"YulIdentifier","src":"2392:6:16"},"nativeSrc":"2392:28:16","nodeType":"YulFunctionCall","src":"2392:28:16"},"nativeSrc":"2392:28:16","nodeType":"YulExpressionStatement","src":"2392:28:16"}]},"evmVersion":"paris","externalReferences":[{"declaration":1994,"isOffset":false,"isSlot":false,"src":"2375:3:16","valueSize":1},{"declaration":1988,"isOffset":false,"isSlot":false,"src":"2415:4:16","valueSize":1},{"declaration":2000,"isOffset":false,"isSlot":false,"src":"2370:3:16","valueSize":1},{"declaration":2000,"isOffset":false,"isSlot":false,"src":"2403:3:16","valueSize":1}],"flags":["memory-safe"],"id":2006,"nodeType":"InlineAssembly","src":"2324:106:16"},{"expression":{"id":2007,"name":"str","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"2446:3:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1992,"id":2008,"nodeType":"Return","src":"2439:10:16"}]},"documentation":{"id":1985,"nodeType":"StructuredDocumentation","src":"2000:73:16","text":" @dev Decode a `ShortString` back to a \"normal\" string."},"id":2010,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"2087:8:16","nodeType":"FunctionDefinition","parameters":{"id":1989,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1988,"mutability":"mutable","name":"sstr","nameLocation":"2108:4:16","nodeType":"VariableDeclaration","scope":2010,"src":"2096:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"},"typeName":{"id":1987,"nodeType":"UserDefinedTypeName","pathNode":{"id":1986,"name":"ShortString","nameLocations":["2096:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1930,"src":"2096:11:16"},"referencedDeclaration":1930,"src":"2096:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"visibility":"internal"}],"src":"2095:18:16"},"returnParameters":{"id":1992,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1991,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2010,"src":"2137:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1990,"name":"string","nodeType":"ElementaryTypeName","src":"2137:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2136:15:16"},"scope":2141,"src":"2078:378:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2041,"nodeType":"Block","src":"2598:175:16","statements":[{"assignments":[2020],"declarations":[{"constant":false,"id":2020,"mutability":"mutable","name":"result","nameLocation":"2616:6:16","nodeType":"VariableDeclaration","scope":2041,"src":"2608:14:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2019,"name":"uint256","nodeType":"ElementaryTypeName","src":"2608:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2030,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2025,"name":"sstr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2014,"src":"2652:4:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}],"expression":{"id":2023,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"2633:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1930_$","typeString":"type(ShortString)"}},"id":2024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2645:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"2633:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1930_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2633:24:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2625:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2021,"name":"uint256","nodeType":"ElementaryTypeName","src":"2625:7:16","typeDescriptions":{}}},"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2625:33:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30784646","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:4:16","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"0xFF"},"src":"2625:40:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2608:57:16"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2033,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2031,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"2679:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3331","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2688:2:16","typeDescriptions":{"typeIdentifier":"t_rational_31_by_1","typeString":"int_const 31"},"value":"31"},"src":"2679:11:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2038,"nodeType":"IfStatement","src":"2675:69:16","trueBody":{"id":2037,"nodeType":"Block","src":"2692:52:16","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2034,"name":"InvalidShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1940,"src":"2713:18:16","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2036,"nodeType":"RevertStatement","src":"2706:27:16"}]}},{"expression":{"id":2039,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2020,"src":"2760:6:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2018,"id":2040,"nodeType":"Return","src":"2753:13:16"}]},"documentation":{"id":2011,"nodeType":"StructuredDocumentation","src":"2462:61:16","text":" @dev Return the length of a `ShortString`."},"id":2042,"implemented":true,"kind":"function","modifiers":[],"name":"byteLength","nameLocation":"2537:10:16","nodeType":"FunctionDefinition","parameters":{"id":2015,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2014,"mutability":"mutable","name":"sstr","nameLocation":"2560:4:16","nodeType":"VariableDeclaration","scope":2042,"src":"2548:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"},"typeName":{"id":2013,"nodeType":"UserDefinedTypeName","pathNode":{"id":2012,"name":"ShortString","nameLocations":["2548:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1930,"src":"2548:11:16"},"referencedDeclaration":1930,"src":"2548:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"visibility":"internal"}],"src":"2547:18:16"},"returnParameters":{"id":2018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2042,"src":"2589:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2016,"name":"uint256","nodeType":"ElementaryTypeName","src":"2589:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2588:9:16"},"scope":2141,"src":"2528:245:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2081,"nodeType":"Block","src":"2996:231:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"3016:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3010:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2053,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:16","typeDescriptions":{}}},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3010:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3023:6:16","memberName":"length","nodeType":"MemberAccess","src":"3010:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"3332","id":2058,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3032:2:16","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3010:24:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2079,"nodeType":"Block","src":"3094:127:16","statements":[{"expression":{"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"arguments":[{"id":2068,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2047,"src":"3134:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"expression":{"id":2065,"name":"StorageSlot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2265,"src":"3108:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_StorageSlot_$2265_$","typeString":"type(library StorageSlot)"}},"id":2067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3120:13:16","memberName":"getStringSlot","nodeType":"MemberAccess","referencedDeclaration":2242,"src":"3108:25:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_storage_ptr_$returns$_t_struct$_StringSlot_$2162_storage_ptr_$","typeString":"function (string storage pointer) pure returns (struct StorageSlot.StringSlot storage pointer)"}},"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3108:32:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2162_storage_ptr","typeString":"struct StorageSlot.StringSlot storage pointer"}},"id":2070,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"3141:5:16","memberName":"value","nodeType":"MemberAccess","referencedDeclaration":2161,"src":"3108:38:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"3149:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"3108:46:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":2073,"nodeType":"ExpressionStatement","src":"3108:46:16"},{"expression":{"arguments":[{"id":2076,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"3192:17:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2074,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"3175:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1930_$","typeString":"type(ShortString)"}},"id":2075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3187:4:16","memberName":"wrap","nodeType":"MemberAccess","src":"3175:16:16","typeDescriptions":{"typeIdentifier":"t_function_wrap_pure$_t_bytes32_$returns$_t_userDefinedValueType$_ShortString_$1930_$","typeString":"function (bytes32) pure returns (ShortString)"}},"id":2077,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3175:35:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"functionReturnParameters":2052,"id":2078,"nodeType":"Return","src":"3168:42:16"}]},"id":2080,"nodeType":"IfStatement","src":"3006:215:16","trueBody":{"id":2064,"nodeType":"Block","src":"3036:52:16","statements":[{"expression":{"arguments":[{"id":2061,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2045,"src":"3071:5:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2060,"name":"toShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"3057:13:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_string_memory_ptr_$returns$_t_userDefinedValueType$_ShortString_$1930_$","typeString":"function (string memory) pure returns (ShortString)"}},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3057:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"functionReturnParameters":2052,"id":2063,"nodeType":"Return","src":"3050:27:16"}]}}]},"documentation":{"id":2043,"nodeType":"StructuredDocumentation","src":"2779:103:16","text":" @dev Encode a string into a `ShortString`, or write it to storage if it is too long."},"id":2082,"implemented":true,"kind":"function","modifiers":[],"name":"toShortStringWithFallback","nameLocation":"2896:25:16","nodeType":"FunctionDefinition","parameters":{"id":2048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2045,"mutability":"mutable","name":"value","nameLocation":"2936:5:16","nodeType":"VariableDeclaration","scope":2082,"src":"2922:19:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2044,"name":"string","nodeType":"ElementaryTypeName","src":"2922:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2047,"mutability":"mutable","name":"store","nameLocation":"2958:5:16","nodeType":"VariableDeclaration","scope":2082,"src":"2943:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2046,"name":"string","nodeType":"ElementaryTypeName","src":"2943:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2921:43:16"},"returnParameters":{"id":2052,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2051,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2082,"src":"2983:11:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"},"typeName":{"id":2050,"nodeType":"UserDefinedTypeName","pathNode":{"id":2049,"name":"ShortString","nameLocations":["2983:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1930,"src":"2983:11:16"},"referencedDeclaration":1930,"src":"2983:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"visibility":"internal"}],"src":"2982:13:16"},"scope":2141,"src":"2887:340:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2108,"nodeType":"Block","src":"3467:158:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2095,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"3500:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}],"expression":{"id":2093,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"3481:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1930_$","typeString":"type(ShortString)"}},"id":2094,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3493:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"3481:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1930_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3481:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2097,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"3510:17:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3481:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2106,"nodeType":"Block","src":"3582:37:16","statements":[{"expression":{"id":2104,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2088,"src":"3603:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}},"functionReturnParameters":2092,"id":2105,"nodeType":"Return","src":"3596:12:16"}]},"id":2107,"nodeType":"IfStatement","src":"3477:142:16","trueBody":{"id":2103,"nodeType":"Block","src":"3529:47:16","statements":[{"expression":{"arguments":[{"id":2100,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2086,"src":"3559:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}],"id":2099,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2010,"src":"3550:8:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1930_$returns$_t_string_memory_ptr_$","typeString":"function (ShortString) pure returns (string memory)"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3550:15:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2092,"id":2102,"nodeType":"Return","src":"3543:22:16"}]}}]},"documentation":{"id":2083,"nodeType":"StructuredDocumentation","src":"3233:120:16","text":" @dev Decode a string that was encoded to `ShortString` or written to storage using {setWithFallback}."},"id":2109,"implemented":true,"kind":"function","modifiers":[],"name":"toStringWithFallback","nameLocation":"3367:20:16","nodeType":"FunctionDefinition","parameters":{"id":2089,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2086,"mutability":"mutable","name":"value","nameLocation":"3400:5:16","nodeType":"VariableDeclaration","scope":2109,"src":"3388:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"},"typeName":{"id":2085,"nodeType":"UserDefinedTypeName","pathNode":{"id":2084,"name":"ShortString","nameLocations":["3388:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1930,"src":"3388:11:16"},"referencedDeclaration":1930,"src":"3388:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2088,"mutability":"mutable","name":"store","nameLocation":"3422:5:16","nodeType":"VariableDeclaration","scope":2109,"src":"3407:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2087,"name":"string","nodeType":"ElementaryTypeName","src":"3407:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3387:41:16"},"returnParameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2091,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2109,"src":"3452:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2090,"name":"string","nodeType":"ElementaryTypeName","src":"3452:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3451:15:16"},"scope":2141,"src":"3358:267:16","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2139,"nodeType":"Block","src":"4105:174:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2122,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"4138:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}],"expression":{"id":2120,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"4119:11:16","typeDescriptions":{"typeIdentifier":"t_type$_t_userDefinedValueType$_ShortString_$1930_$","typeString":"type(ShortString)"}},"id":2121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4131:6:16","memberName":"unwrap","nodeType":"MemberAccess","src":"4119:18:16","typeDescriptions":{"typeIdentifier":"t_function_unwrap_pure$_t_userDefinedValueType$_ShortString_$1930_$returns$_t_bytes32_$","typeString":"function (ShortString) pure returns (bytes32)"}},"id":2123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4119:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2124,"name":"FALLBACK_SENTINEL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1934,"src":"4148:17:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4119:46:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2137,"nodeType":"Block","src":"4222:51:16","statements":[{"expression":{"expression":{"arguments":[{"id":2133,"name":"store","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2115,"src":"4249:5:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage_ptr","typeString":"string storage pointer"}],"id":2132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4243:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2131,"name":"bytes","nodeType":"ElementaryTypeName","src":"4243:5:16","typeDescriptions":{}}},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4243:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":2135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4256:6:16","memberName":"length","nodeType":"MemberAccess","src":"4243:19:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2119,"id":2136,"nodeType":"Return","src":"4236:26:16"}]},"id":2138,"nodeType":"IfStatement","src":"4115:158:16","trueBody":{"id":2130,"nodeType":"Block","src":"4167:49:16","statements":[{"expression":{"arguments":[{"id":2127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2113,"src":"4199:5:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}],"id":2126,"name":"byteLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2042,"src":"4188:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1930_$returns$_t_uint256_$","typeString":"function (ShortString) pure returns (uint256)"}},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4188:17:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2119,"id":2129,"nodeType":"Return","src":"4181:24:16"}]}}]},"documentation":{"id":2110,"nodeType":"StructuredDocumentation","src":"3631:364:16","text":" @dev Return the length of a string that was encoded to `ShortString` or written to storage using\n {setWithFallback}.\n WARNING: This will return the \"byte length\" of the string. This may not reflect the actual length in terms of\n actual characters as the UTF-8 encoding of a single character can span over multiple bytes."},"id":2140,"implemented":true,"kind":"function","modifiers":[],"name":"byteLengthWithFallback","nameLocation":"4009:22:16","nodeType":"FunctionDefinition","parameters":{"id":2116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"value","nameLocation":"4044:5:16","nodeType":"VariableDeclaration","scope":2140,"src":"4032:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"},"typeName":{"id":2112,"nodeType":"UserDefinedTypeName","pathNode":{"id":2111,"name":"ShortString","nameLocations":["4032:11:16"],"nodeType":"IdentifierPath","referencedDeclaration":1930,"src":"4032:11:16"},"referencedDeclaration":1930,"src":"4032:11:16","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"visibility":"internal"},{"constant":false,"id":2115,"mutability":"mutable","name":"store","nameLocation":"4066:5:16","nodeType":"VariableDeclaration","scope":2140,"src":"4051:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2114,"name":"string","nodeType":"ElementaryTypeName","src":"4051:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4031:41:16"},"returnParameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2140,"src":"4096:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2117,"name":"uint256","nodeType":"ElementaryTypeName","src":"4096:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4095:9:16"},"scope":2141,"src":"4000:279:16","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2142,"src":"1255:3026:16","usedErrors":[1938,1940],"usedEvents":[]}],"src":"106:4176:16"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"id":17,"ast":{"absolutePath":"@openzeppelin/contracts/utils/StorageSlot.sol","exportedSymbols":{"StorageSlot":[2265]},"id":2266,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2143,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"193:24:17"},{"abstract":false,"baseContracts":[],"canonicalName":"StorageSlot","contractDependencies":[],"contractKind":"library","documentation":{"id":2144,"nodeType":"StructuredDocumentation","src":"219:1187:17","text":" @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC-1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```\n TIP: Consider using this library along with {SlotDerivation}."},"fullyImplemented":true,"id":2265,"linearizedBaseContracts":[2265],"name":"StorageSlot","nameLocation":"1415:11:17","nodeType":"ContractDefinition","nodes":[{"canonicalName":"StorageSlot.AddressSlot","id":2147,"members":[{"constant":false,"id":2146,"mutability":"mutable","name":"value","nameLocation":"1470:5:17","nodeType":"VariableDeclaration","scope":2147,"src":"1462:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2145,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"AddressSlot","nameLocation":"1440:11:17","nodeType":"StructDefinition","scope":2265,"src":"1433:49:17","visibility":"public"},{"canonicalName":"StorageSlot.BooleanSlot","id":2150,"members":[{"constant":false,"id":2149,"mutability":"mutable","name":"value","nameLocation":"1522:5:17","nodeType":"VariableDeclaration","scope":2150,"src":"1517:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2148,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"BooleanSlot","nameLocation":"1495:11:17","nodeType":"StructDefinition","scope":2265,"src":"1488:46:17","visibility":"public"},{"canonicalName":"StorageSlot.Bytes32Slot","id":2153,"members":[{"constant":false,"id":2152,"mutability":"mutable","name":"value","nameLocation":"1577:5:17","nodeType":"VariableDeclaration","scope":2153,"src":"1569:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2151,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1569:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"Bytes32Slot","nameLocation":"1547:11:17","nodeType":"StructDefinition","scope":2265,"src":"1540:49:17","visibility":"public"},{"canonicalName":"StorageSlot.Uint256Slot","id":2156,"members":[{"constant":false,"id":2155,"mutability":"mutable","name":"value","nameLocation":"1632:5:17","nodeType":"VariableDeclaration","scope":2156,"src":"1624:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2154,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Uint256Slot","nameLocation":"1602:11:17","nodeType":"StructDefinition","scope":2265,"src":"1595:49:17","visibility":"public"},{"canonicalName":"StorageSlot.Int256Slot","id":2159,"members":[{"constant":false,"id":2158,"mutability":"mutable","name":"value","nameLocation":"1685:5:17","nodeType":"VariableDeclaration","scope":2159,"src":"1678:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2157,"name":"int256","nodeType":"ElementaryTypeName","src":"1678:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"name":"Int256Slot","nameLocation":"1657:10:17","nodeType":"StructDefinition","scope":2265,"src":"1650:47:17","visibility":"public"},{"canonicalName":"StorageSlot.StringSlot","id":2162,"members":[{"constant":false,"id":2161,"mutability":"mutable","name":"value","nameLocation":"1738:5:17","nodeType":"VariableDeclaration","scope":2162,"src":"1731:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2160,"name":"string","nodeType":"ElementaryTypeName","src":"1731:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"StringSlot","nameLocation":"1710:10:17","nodeType":"StructDefinition","scope":2265,"src":"1703:47:17","visibility":"public"},{"canonicalName":"StorageSlot.BytesSlot","id":2165,"members":[{"constant":false,"id":2164,"mutability":"mutable","name":"value","nameLocation":"1789:5:17","nodeType":"VariableDeclaration","scope":2165,"src":"1783:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2163,"name":"bytes","nodeType":"ElementaryTypeName","src":"1783:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"name":"BytesSlot","nameLocation":"1763:9:17","nodeType":"StructDefinition","scope":2265,"src":"1756:45:17","visibility":"public"},{"body":{"id":2175,"nodeType":"Block","src":"1983:79:17","statements":[{"AST":{"nativeSrc":"2018:38:17","nodeType":"YulBlock","src":"2018:38:17","statements":[{"nativeSrc":"2032:14:17","nodeType":"YulAssignment","src":"2032:14:17","value":{"name":"slot","nativeSrc":"2042:4:17","nodeType":"YulIdentifier","src":"2042:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2032:6:17","nodeType":"YulIdentifier","src":"2032:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2172,"isOffset":false,"isSlot":true,"src":"2032:6:17","suffix":"slot","valueSize":1},{"declaration":2168,"isOffset":false,"isSlot":false,"src":"2042:4:17","valueSize":1}],"flags":["memory-safe"],"id":2174,"nodeType":"InlineAssembly","src":"1993:63:17"}]},"documentation":{"id":2166,"nodeType":"StructuredDocumentation","src":"1807:87:17","text":" @dev Returns an `AddressSlot` with member `value` located at `slot`."},"id":2176,"implemented":true,"kind":"function","modifiers":[],"name":"getAddressSlot","nameLocation":"1908:14:17","nodeType":"FunctionDefinition","parameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"slot","nameLocation":"1931:4:17","nodeType":"VariableDeclaration","scope":2176,"src":"1923:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1923:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1922:14:17"},"returnParameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"r","nameLocation":"1980:1:17","nodeType":"VariableDeclaration","scope":2176,"src":"1960:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2147_storage_ptr","typeString":"struct StorageSlot.AddressSlot"},"typeName":{"id":2171,"nodeType":"UserDefinedTypeName","pathNode":{"id":2170,"name":"AddressSlot","nameLocations":["1960:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2147,"src":"1960:11:17"},"referencedDeclaration":2147,"src":"1960:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSlot_$2147_storage_ptr","typeString":"struct StorageSlot.AddressSlot"}},"visibility":"internal"}],"src":"1959:23:17"},"scope":2265,"src":"1899:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2186,"nodeType":"Block","src":"2243:79:17","statements":[{"AST":{"nativeSrc":"2278:38:17","nodeType":"YulBlock","src":"2278:38:17","statements":[{"nativeSrc":"2292:14:17","nodeType":"YulAssignment","src":"2292:14:17","value":{"name":"slot","nativeSrc":"2302:4:17","nodeType":"YulIdentifier","src":"2302:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2292:6:17","nodeType":"YulIdentifier","src":"2292:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2183,"isOffset":false,"isSlot":true,"src":"2292:6:17","suffix":"slot","valueSize":1},{"declaration":2179,"isOffset":false,"isSlot":false,"src":"2302:4:17","valueSize":1}],"flags":["memory-safe"],"id":2185,"nodeType":"InlineAssembly","src":"2253:63:17"}]},"documentation":{"id":2177,"nodeType":"StructuredDocumentation","src":"2068:86:17","text":" @dev Returns a `BooleanSlot` with member `value` located at `slot`."},"id":2187,"implemented":true,"kind":"function","modifiers":[],"name":"getBooleanSlot","nameLocation":"2168:14:17","nodeType":"FunctionDefinition","parameters":{"id":2180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2179,"mutability":"mutable","name":"slot","nameLocation":"2191:4:17","nodeType":"VariableDeclaration","scope":2187,"src":"2183:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2183:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2182:14:17"},"returnParameters":{"id":2184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2183,"mutability":"mutable","name":"r","nameLocation":"2240:1:17","nodeType":"VariableDeclaration","scope":2187,"src":"2220:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2150_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"},"typeName":{"id":2182,"nodeType":"UserDefinedTypeName","pathNode":{"id":2181,"name":"BooleanSlot","nameLocations":["2220:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2150,"src":"2220:11:17"},"referencedDeclaration":2150,"src":"2220:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_BooleanSlot_$2150_storage_ptr","typeString":"struct StorageSlot.BooleanSlot"}},"visibility":"internal"}],"src":"2219:23:17"},"scope":2265,"src":"2159:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2197,"nodeType":"Block","src":"2503:79:17","statements":[{"AST":{"nativeSrc":"2538:38:17","nodeType":"YulBlock","src":"2538:38:17","statements":[{"nativeSrc":"2552:14:17","nodeType":"YulAssignment","src":"2552:14:17","value":{"name":"slot","nativeSrc":"2562:4:17","nodeType":"YulIdentifier","src":"2562:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2552:6:17","nodeType":"YulIdentifier","src":"2552:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2194,"isOffset":false,"isSlot":true,"src":"2552:6:17","suffix":"slot","valueSize":1},{"declaration":2190,"isOffset":false,"isSlot":false,"src":"2562:4:17","valueSize":1}],"flags":["memory-safe"],"id":2196,"nodeType":"InlineAssembly","src":"2513:63:17"}]},"documentation":{"id":2188,"nodeType":"StructuredDocumentation","src":"2328:86:17","text":" @dev Returns a `Bytes32Slot` with member `value` located at `slot`."},"id":2198,"implemented":true,"kind":"function","modifiers":[],"name":"getBytes32Slot","nameLocation":"2428:14:17","nodeType":"FunctionDefinition","parameters":{"id":2191,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2190,"mutability":"mutable","name":"slot","nameLocation":"2451:4:17","nodeType":"VariableDeclaration","scope":2198,"src":"2443:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2189,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2442:14:17"},"returnParameters":{"id":2195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"r","nameLocation":"2500:1:17","nodeType":"VariableDeclaration","scope":2198,"src":"2480:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2153_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"},"typeName":{"id":2193,"nodeType":"UserDefinedTypeName","pathNode":{"id":2192,"name":"Bytes32Slot","nameLocations":["2480:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2153,"src":"2480:11:17"},"referencedDeclaration":2153,"src":"2480:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Slot_$2153_storage_ptr","typeString":"struct StorageSlot.Bytes32Slot"}},"visibility":"internal"}],"src":"2479:23:17"},"scope":2265,"src":"2419:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2208,"nodeType":"Block","src":"2763:79:17","statements":[{"AST":{"nativeSrc":"2798:38:17","nodeType":"YulBlock","src":"2798:38:17","statements":[{"nativeSrc":"2812:14:17","nodeType":"YulAssignment","src":"2812:14:17","value":{"name":"slot","nativeSrc":"2822:4:17","nodeType":"YulIdentifier","src":"2822:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"2812:6:17","nodeType":"YulIdentifier","src":"2812:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2205,"isOffset":false,"isSlot":true,"src":"2812:6:17","suffix":"slot","valueSize":1},{"declaration":2201,"isOffset":false,"isSlot":false,"src":"2822:4:17","valueSize":1}],"flags":["memory-safe"],"id":2207,"nodeType":"InlineAssembly","src":"2773:63:17"}]},"documentation":{"id":2199,"nodeType":"StructuredDocumentation","src":"2588:86:17","text":" @dev Returns a `Uint256Slot` with member `value` located at `slot`."},"id":2209,"implemented":true,"kind":"function","modifiers":[],"name":"getUint256Slot","nameLocation":"2688:14:17","nodeType":"FunctionDefinition","parameters":{"id":2202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"slot","nameLocation":"2711:4:17","nodeType":"VariableDeclaration","scope":2209,"src":"2703:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2200,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2703:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2702:14:17"},"returnParameters":{"id":2206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2205,"mutability":"mutable","name":"r","nameLocation":"2760:1:17","nodeType":"VariableDeclaration","scope":2209,"src":"2740:21:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2156_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"},"typeName":{"id":2204,"nodeType":"UserDefinedTypeName","pathNode":{"id":2203,"name":"Uint256Slot","nameLocations":["2740:11:17"],"nodeType":"IdentifierPath","referencedDeclaration":2156,"src":"2740:11:17"},"referencedDeclaration":2156,"src":"2740:11:17","typeDescriptions":{"typeIdentifier":"t_struct$_Uint256Slot_$2156_storage_ptr","typeString":"struct StorageSlot.Uint256Slot"}},"visibility":"internal"}],"src":"2739:23:17"},"scope":2265,"src":"2679:163:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2219,"nodeType":"Block","src":"3020:79:17","statements":[{"AST":{"nativeSrc":"3055:38:17","nodeType":"YulBlock","src":"3055:38:17","statements":[{"nativeSrc":"3069:14:17","nodeType":"YulAssignment","src":"3069:14:17","value":{"name":"slot","nativeSrc":"3079:4:17","nodeType":"YulIdentifier","src":"3079:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3069:6:17","nodeType":"YulIdentifier","src":"3069:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2216,"isOffset":false,"isSlot":true,"src":"3069:6:17","suffix":"slot","valueSize":1},{"declaration":2212,"isOffset":false,"isSlot":false,"src":"3079:4:17","valueSize":1}],"flags":["memory-safe"],"id":2218,"nodeType":"InlineAssembly","src":"3030:63:17"}]},"documentation":{"id":2210,"nodeType":"StructuredDocumentation","src":"2848:85:17","text":" @dev Returns a `Int256Slot` with member `value` located at `slot`."},"id":2220,"implemented":true,"kind":"function","modifiers":[],"name":"getInt256Slot","nameLocation":"2947:13:17","nodeType":"FunctionDefinition","parameters":{"id":2213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2212,"mutability":"mutable","name":"slot","nameLocation":"2969:4:17","nodeType":"VariableDeclaration","scope":2220,"src":"2961:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2961:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2960:14:17"},"returnParameters":{"id":2217,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2216,"mutability":"mutable","name":"r","nameLocation":"3017:1:17","nodeType":"VariableDeclaration","scope":2220,"src":"2998:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2159_storage_ptr","typeString":"struct StorageSlot.Int256Slot"},"typeName":{"id":2215,"nodeType":"UserDefinedTypeName","pathNode":{"id":2214,"name":"Int256Slot","nameLocations":["2998:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":2159,"src":"2998:10:17"},"referencedDeclaration":2159,"src":"2998:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_Int256Slot_$2159_storage_ptr","typeString":"struct StorageSlot.Int256Slot"}},"visibility":"internal"}],"src":"2997:22:17"},"scope":2265,"src":"2938:161:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2230,"nodeType":"Block","src":"3277:79:17","statements":[{"AST":{"nativeSrc":"3312:38:17","nodeType":"YulBlock","src":"3312:38:17","statements":[{"nativeSrc":"3326:14:17","nodeType":"YulAssignment","src":"3326:14:17","value":{"name":"slot","nativeSrc":"3336:4:17","nodeType":"YulIdentifier","src":"3336:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3326:6:17","nodeType":"YulIdentifier","src":"3326:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2227,"isOffset":false,"isSlot":true,"src":"3326:6:17","suffix":"slot","valueSize":1},{"declaration":2223,"isOffset":false,"isSlot":false,"src":"3336:4:17","valueSize":1}],"flags":["memory-safe"],"id":2229,"nodeType":"InlineAssembly","src":"3287:63:17"}]},"documentation":{"id":2221,"nodeType":"StructuredDocumentation","src":"3105:85:17","text":" @dev Returns a `StringSlot` with member `value` located at `slot`."},"id":2231,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3204:13:17","nodeType":"FunctionDefinition","parameters":{"id":2224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2223,"mutability":"mutable","name":"slot","nameLocation":"3226:4:17","nodeType":"VariableDeclaration","scope":2231,"src":"3218:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2222,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3218:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3217:14:17"},"returnParameters":{"id":2228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2227,"mutability":"mutable","name":"r","nameLocation":"3274:1:17","nodeType":"VariableDeclaration","scope":2231,"src":"3255:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2162_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2226,"nodeType":"UserDefinedTypeName","pathNode":{"id":2225,"name":"StringSlot","nameLocations":["3255:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":2162,"src":"3255:10:17"},"referencedDeclaration":2162,"src":"3255:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2162_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3254:22:17"},"scope":2265,"src":"3195:161:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2241,"nodeType":"Block","src":"3558:85:17","statements":[{"AST":{"nativeSrc":"3593:44:17","nodeType":"YulBlock","src":"3593:44:17","statements":[{"nativeSrc":"3607:20:17","nodeType":"YulAssignment","src":"3607:20:17","value":{"name":"store.slot","nativeSrc":"3617:10:17","nodeType":"YulIdentifier","src":"3617:10:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3607:6:17","nodeType":"YulIdentifier","src":"3607:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2238,"isOffset":false,"isSlot":true,"src":"3607:6:17","suffix":"slot","valueSize":1},{"declaration":2234,"isOffset":false,"isSlot":true,"src":"3617:10:17","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2240,"nodeType":"InlineAssembly","src":"3568:69:17"}]},"documentation":{"id":2232,"nodeType":"StructuredDocumentation","src":"3362:101:17","text":" @dev Returns an `StringSlot` representation of the string storage pointer `store`."},"id":2242,"implemented":true,"kind":"function","modifiers":[],"name":"getStringSlot","nameLocation":"3477:13:17","nodeType":"FunctionDefinition","parameters":{"id":2235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2234,"mutability":"mutable","name":"store","nameLocation":"3506:5:17","nodeType":"VariableDeclaration","scope":2242,"src":"3491:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":2233,"name":"string","nodeType":"ElementaryTypeName","src":"3491:6:17","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3490:22:17"},"returnParameters":{"id":2239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2238,"mutability":"mutable","name":"r","nameLocation":"3555:1:17","nodeType":"VariableDeclaration","scope":2242,"src":"3536:20:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2162_storage_ptr","typeString":"struct StorageSlot.StringSlot"},"typeName":{"id":2237,"nodeType":"UserDefinedTypeName","pathNode":{"id":2236,"name":"StringSlot","nameLocations":["3536:10:17"],"nodeType":"IdentifierPath","referencedDeclaration":2162,"src":"3536:10:17"},"referencedDeclaration":2162,"src":"3536:10:17","typeDescriptions":{"typeIdentifier":"t_struct$_StringSlot_$2162_storage_ptr","typeString":"struct StorageSlot.StringSlot"}},"visibility":"internal"}],"src":"3535:22:17"},"scope":2265,"src":"3468:175:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2252,"nodeType":"Block","src":"3818:79:17","statements":[{"AST":{"nativeSrc":"3853:38:17","nodeType":"YulBlock","src":"3853:38:17","statements":[{"nativeSrc":"3867:14:17","nodeType":"YulAssignment","src":"3867:14:17","value":{"name":"slot","nativeSrc":"3877:4:17","nodeType":"YulIdentifier","src":"3877:4:17"},"variableNames":[{"name":"r.slot","nativeSrc":"3867:6:17","nodeType":"YulIdentifier","src":"3867:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2249,"isOffset":false,"isSlot":true,"src":"3867:6:17","suffix":"slot","valueSize":1},{"declaration":2245,"isOffset":false,"isSlot":false,"src":"3877:4:17","valueSize":1}],"flags":["memory-safe"],"id":2251,"nodeType":"InlineAssembly","src":"3828:63:17"}]},"documentation":{"id":2243,"nodeType":"StructuredDocumentation","src":"3649:84:17","text":" @dev Returns a `BytesSlot` with member `value` located at `slot`."},"id":2253,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"3747:12:17","nodeType":"FunctionDefinition","parameters":{"id":2246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2245,"mutability":"mutable","name":"slot","nameLocation":"3768:4:17","nodeType":"VariableDeclaration","scope":2253,"src":"3760:12:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3760:7:17","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3759:14:17"},"returnParameters":{"id":2250,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2249,"mutability":"mutable","name":"r","nameLocation":"3815:1:17","nodeType":"VariableDeclaration","scope":2253,"src":"3797:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2165_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2248,"nodeType":"UserDefinedTypeName","pathNode":{"id":2247,"name":"BytesSlot","nameLocations":["3797:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2165,"src":"3797:9:17"},"referencedDeclaration":2165,"src":"3797:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2165_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"3796:21:17"},"scope":2265,"src":"3738:159:17","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2263,"nodeType":"Block","src":"4094:85:17","statements":[{"AST":{"nativeSrc":"4129:44:17","nodeType":"YulBlock","src":"4129:44:17","statements":[{"nativeSrc":"4143:20:17","nodeType":"YulAssignment","src":"4143:20:17","value":{"name":"store.slot","nativeSrc":"4153:10:17","nodeType":"YulIdentifier","src":"4153:10:17"},"variableNames":[{"name":"r.slot","nativeSrc":"4143:6:17","nodeType":"YulIdentifier","src":"4143:6:17"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2260,"isOffset":false,"isSlot":true,"src":"4143:6:17","suffix":"slot","valueSize":1},{"declaration":2256,"isOffset":false,"isSlot":true,"src":"4153:10:17","suffix":"slot","valueSize":1}],"flags":["memory-safe"],"id":2262,"nodeType":"InlineAssembly","src":"4104:69:17"}]},"documentation":{"id":2254,"nodeType":"StructuredDocumentation","src":"3903:99:17","text":" @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."},"id":2264,"implemented":true,"kind":"function","modifiers":[],"name":"getBytesSlot","nameLocation":"4016:12:17","nodeType":"FunctionDefinition","parameters":{"id":2257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2256,"mutability":"mutable","name":"store","nameLocation":"4043:5:17","nodeType":"VariableDeclaration","scope":2264,"src":"4029:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2255,"name":"bytes","nodeType":"ElementaryTypeName","src":"4029:5:17","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4028:21:17"},"returnParameters":{"id":2261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2260,"mutability":"mutable","name":"r","nameLocation":"4091:1:17","nodeType":"VariableDeclaration","scope":2264,"src":"4073:19:17","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2165_storage_ptr","typeString":"struct StorageSlot.BytesSlot"},"typeName":{"id":2259,"nodeType":"UserDefinedTypeName","pathNode":{"id":2258,"name":"BytesSlot","nameLocations":["4073:9:17"],"nodeType":"IdentifierPath","referencedDeclaration":2165,"src":"4073:9:17"},"referencedDeclaration":2165,"src":"4073:9:17","typeDescriptions":{"typeIdentifier":"t_struct$_BytesSlot_$2165_storage_ptr","typeString":"struct StorageSlot.BytesSlot"}},"visibility":"internal"}],"src":"4072:21:17"},"scope":2265,"src":"4007:172:17","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2266,"src":"1407:2774:17","usedErrors":[],"usedEvents":[]}],"src":"193:3989:17"}},"@openzeppelin/contracts/utils/Strings.sol":{"id":18,"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[4840],"SignedMath":[6749],"Strings":[2585]},"id":2586,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2267,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"101:24:18"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":2269,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2586,"sourceUnit":4841,"src":"127:37:18","symbolAliases":[{"foreign":{"id":2268,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"135:4:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","file":"./math/SignedMath.sol","id":2271,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2586,"sourceUnit":6750,"src":"165:49:18","symbolAliases":[{"foreign":{"id":2270,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"173:10:18","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2272,"nodeType":"StructuredDocumentation","src":"216:34:18","text":" @dev String operations."},"fullyImplemented":true,"id":2585,"linearizedBaseContracts":[2585],"name":"Strings","nameLocation":"259:7:18","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2275,"mutability":"constant","name":"HEX_DIGITS","nameLocation":"298:10:18","nodeType":"VariableDeclaration","scope":2585,"src":"273:56:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2273,"name":"bytes16","nodeType":"ElementaryTypeName","src":"273:7:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"311:18:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":2278,"mutability":"constant","name":"ADDRESS_LENGTH","nameLocation":"358:14:18","nodeType":"VariableDeclaration","scope":2585,"src":"335:42:18","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2276,"name":"uint8","nodeType":"ElementaryTypeName","src":"335:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":2277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"375:2:18","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"documentation":{"id":2279,"nodeType":"StructuredDocumentation","src":"384:81:18","text":" @dev The `value` string doesn't fit in the specified `length`."},"errorSelector":"e22e27eb","id":2285,"name":"StringsInsufficientHexLength","nameLocation":"476:28:18","nodeType":"ErrorDefinition","parameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2281,"mutability":"mutable","name":"value","nameLocation":"513:5:18","nodeType":"VariableDeclaration","scope":2285,"src":"505:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"505:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2283,"mutability":"mutable","name":"length","nameLocation":"528:6:18","nodeType":"VariableDeclaration","scope":2285,"src":"520:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2282,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"504:31:18"},"src":"470:66:18"},{"body":{"id":2332,"nodeType":"Block","src":"708:561:18","statements":[{"id":2331,"nodeType":"UncheckedBlock","src":"718:545:18","statements":[{"assignments":[2294],"declarations":[{"constant":false,"id":2294,"mutability":"mutable","name":"length","nameLocation":"750:6:18","nodeType":"VariableDeclaration","scope":2331,"src":"742:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2293,"name":"uint256","nodeType":"ElementaryTypeName","src":"742:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2301,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"770:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2295,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"759:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4840_$","typeString":"type(library Math)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"764:5:18","memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":4612,"src":"759:10:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"759:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"779:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"759:21:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"742:38:18"},{"assignments":[2303],"declarations":[{"constant":false,"id":2303,"mutability":"mutable","name":"buffer","nameLocation":"808:6:18","nodeType":"VariableDeclaration","scope":2331,"src":"794:20:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2302,"name":"string","nodeType":"ElementaryTypeName","src":"794:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":2308,"initialValue":{"arguments":[{"id":2306,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2294,"src":"828:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2305,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:10:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":2304,"name":"string","nodeType":"ElementaryTypeName","src":"821:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"817:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"794:41:18"},{"assignments":[2310],"declarations":[{"constant":false,"id":2310,"mutability":"mutable","name":"ptr","nameLocation":"857:3:18","nodeType":"VariableDeclaration","scope":2331,"src":"849:11:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2309,"name":"uint256","nodeType":"ElementaryTypeName","src":"849:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2311,"nodeType":"VariableDeclarationStatement","src":"849:11:18"},{"AST":{"nativeSrc":"899:67:18","nodeType":"YulBlock","src":"899:67:18","statements":[{"nativeSrc":"917:35:18","nodeType":"YulAssignment","src":"917:35:18","value":{"arguments":[{"name":"buffer","nativeSrc":"928:6:18","nodeType":"YulIdentifier","src":"928:6:18"},{"arguments":[{"kind":"number","nativeSrc":"940:2:18","nodeType":"YulLiteral","src":"940:2:18","type":"","value":"32"},{"name":"length","nativeSrc":"944:6:18","nodeType":"YulIdentifier","src":"944:6:18"}],"functionName":{"name":"add","nativeSrc":"936:3:18","nodeType":"YulIdentifier","src":"936:3:18"},"nativeSrc":"936:15:18","nodeType":"YulFunctionCall","src":"936:15:18"}],"functionName":{"name":"add","nativeSrc":"924:3:18","nodeType":"YulIdentifier","src":"924:3:18"},"nativeSrc":"924:28:18","nodeType":"YulFunctionCall","src":"924:28:18"},"variableNames":[{"name":"ptr","nativeSrc":"917:3:18","nodeType":"YulIdentifier","src":"917:3:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2303,"isOffset":false,"isSlot":false,"src":"928:6:18","valueSize":1},{"declaration":2294,"isOffset":false,"isSlot":false,"src":"944:6:18","valueSize":1},{"declaration":2310,"isOffset":false,"isSlot":false,"src":"917:3:18","valueSize":1}],"flags":["memory-safe"],"id":2312,"nodeType":"InlineAssembly","src":"874:92:18"},{"body":{"id":2327,"nodeType":"Block","src":"992:234:18","statements":[{"expression":{"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"1010:5:18","subExpression":{"id":2314,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2310,"src":"1010:3:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2316,"nodeType":"ExpressionStatement","src":"1010:5:18"},{"AST":{"nativeSrc":"1058:86:18","nodeType":"YulBlock","src":"1058:86:18","statements":[{"expression":{"arguments":[{"name":"ptr","nativeSrc":"1088:3:18","nodeType":"YulIdentifier","src":"1088:3:18"},{"arguments":[{"arguments":[{"name":"value","nativeSrc":"1102:5:18","nodeType":"YulIdentifier","src":"1102:5:18"},{"kind":"number","nativeSrc":"1109:2:18","nodeType":"YulLiteral","src":"1109:2:18","type":"","value":"10"}],"functionName":{"name":"mod","nativeSrc":"1098:3:18","nodeType":"YulIdentifier","src":"1098:3:18"},"nativeSrc":"1098:14:18","nodeType":"YulFunctionCall","src":"1098:14:18"},{"name":"HEX_DIGITS","nativeSrc":"1114:10:18","nodeType":"YulIdentifier","src":"1114:10:18"}],"functionName":{"name":"byte","nativeSrc":"1093:4:18","nodeType":"YulIdentifier","src":"1093:4:18"},"nativeSrc":"1093:32:18","nodeType":"YulFunctionCall","src":"1093:32:18"}],"functionName":{"name":"mstore8","nativeSrc":"1080:7:18","nodeType":"YulIdentifier","src":"1080:7:18"},"nativeSrc":"1080:46:18","nodeType":"YulFunctionCall","src":"1080:46:18"},"nativeSrc":"1080:46:18","nodeType":"YulExpressionStatement","src":"1080:46:18"}]},"evmVersion":"paris","externalReferences":[{"declaration":2275,"isOffset":false,"isSlot":false,"src":"1114:10:18","valueSize":1},{"declaration":2310,"isOffset":false,"isSlot":false,"src":"1088:3:18","valueSize":1},{"declaration":2288,"isOffset":false,"isSlot":false,"src":"1102:5:18","valueSize":1}],"flags":["memory-safe"],"id":2317,"nodeType":"InlineAssembly","src":"1033:111:18"},{"expression":{"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2318,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"1161:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1170:2:18","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1161:11:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2321,"nodeType":"ExpressionStatement","src":"1161:11:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2322,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2288,"src":"1194:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1203:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1194:10:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2326,"nodeType":"IfStatement","src":"1190:21:18","trueBody":{"id":2325,"nodeType":"Break","src":"1206:5:18"}}]},"condition":{"hexValue":"74727565","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"986:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":2328,"nodeType":"WhileStatement","src":"979:247:18"},{"expression":{"id":2329,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2303,"src":"1246:6:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2292,"id":2330,"nodeType":"Return","src":"1239:13:18"}]}]},"documentation":{"id":2286,"nodeType":"StructuredDocumentation","src":"542:90:18","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2333,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"646:8:18","nodeType":"FunctionDefinition","parameters":{"id":2289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2288,"mutability":"mutable","name":"value","nameLocation":"663:5:18","nodeType":"VariableDeclaration","scope":2333,"src":"655:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2287,"name":"uint256","nodeType":"ElementaryTypeName","src":"655:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"654:15:18"},"returnParameters":{"id":2292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2291,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2333,"src":"693:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2290,"name":"string","nodeType":"ElementaryTypeName","src":"693:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"692:15:18"},"scope":2585,"src":"637:632:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2358,"nodeType":"Block","src":"1445:92:18","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"1476:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":2345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1484:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1476:9:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":2348,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1494:2:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1476:20:18","trueExpression":{"hexValue":"2d","id":2347,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1488:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561","typeString":"literal_string \"-\""},"value":"-"},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[{"arguments":[{"id":2353,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2336,"src":"1522:5:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"expression":{"id":2351,"name":"SignedMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6749,"src":"1507:10:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SignedMath_$6749_$","typeString":"type(library SignedMath)"}},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1518:3:18","memberName":"abs","nodeType":"MemberAccess","referencedDeclaration":6748,"src":"1507:14:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int256_$returns$_t_uint256_$","typeString":"function (int256) pure returns (uint256)"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1507:21:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2350,"name":"toString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2333,"src":"1498:8:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1498:31:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":2342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2341,"name":"string","nodeType":"ElementaryTypeName","src":"1462:6:18","typeDescriptions":{}}},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1469:6:18","memberName":"concat","nodeType":"MemberAccess","src":"1462:13:18","typeDescriptions":{"typeIdentifier":"t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$","typeString":"function () pure returns (string memory)"}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1462:68:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2340,"id":2357,"nodeType":"Return","src":"1455:75:18"}]},"documentation":{"id":2334,"nodeType":"StructuredDocumentation","src":"1275:89:18","text":" @dev Converts a `int256` to its ASCII `string` decimal representation."},"id":2359,"implemented":true,"kind":"function","modifiers":[],"name":"toStringSigned","nameLocation":"1378:14:18","nodeType":"FunctionDefinition","parameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"value","nameLocation":"1400:5:18","nodeType":"VariableDeclaration","scope":2359,"src":"1393:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2335,"name":"int256","nodeType":"ElementaryTypeName","src":"1393:6:18","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1392:14:18"},"returnParameters":{"id":2340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2359,"src":"1430:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2338,"name":"string","nodeType":"ElementaryTypeName","src":"1430:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1429:15:18"},"scope":2585,"src":"1369:168:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2378,"nodeType":"Block","src":"1716:100:18","statements":[{"id":2377,"nodeType":"UncheckedBlock","src":"1726:84:18","statements":[{"expression":{"arguments":[{"id":2368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"1769:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2374,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2371,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2362,"src":"1788:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2369,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"1776:4:18","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4840_$","typeString":"type(library Math)"}},"id":2370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:18","memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":4783,"src":"1776:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1776:18:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1776:22:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2367,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2379,2462,2482],"referencedDeclaration":2462,"src":"1757:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2366,"id":2376,"nodeType":"Return","src":"1750:49:18"}]}]},"documentation":{"id":2360,"nodeType":"StructuredDocumentation","src":"1543:94:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2379,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1651:11:18","nodeType":"FunctionDefinition","parameters":{"id":2363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2362,"mutability":"mutable","name":"value","nameLocation":"1671:5:18","nodeType":"VariableDeclaration","scope":2379,"src":"1663:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1662:15:18"},"returnParameters":{"id":2366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2379,"src":"1701:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2364,"name":"string","nodeType":"ElementaryTypeName","src":"1701:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1700:15:18"},"scope":2585,"src":"1642:174:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2461,"nodeType":"Block","src":"2029:435:18","statements":[{"assignments":[2390],"declarations":[{"constant":false,"id":2390,"mutability":"mutable","name":"localValue","nameLocation":"2047:10:18","nodeType":"VariableDeclaration","scope":2461,"src":"2039:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2389,"name":"uint256","nodeType":"ElementaryTypeName","src":"2039:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2392,"initialValue":{"id":2391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"2060:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2039:26:18"},{"assignments":[2394],"declarations":[{"constant":false,"id":2394,"mutability":"mutable","name":"buffer","nameLocation":"2088:6:18","nodeType":"VariableDeclaration","scope":2461,"src":"2075:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2393,"name":"bytes","nodeType":"ElementaryTypeName","src":"2075:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2403,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2107:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2398,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"2111:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2107:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2400,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2120:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"2107:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"2097:9:18","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2395,"name":"bytes","nodeType":"ElementaryTypeName","src":"2101:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2097:25:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"2075:47:18"},{"expression":{"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2404,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"2132:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2406,"indexExpression":{"hexValue":"30","id":2405,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2139:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2132:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2144:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"2132:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2409,"nodeType":"ExpressionStatement","src":"2132:15:18"},{"expression":{"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2410,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"2157:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2412,"indexExpression":{"hexValue":"31","id":2411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2164:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2157:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2169:3:18","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"2157:15:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2415,"nodeType":"ExpressionStatement","src":"2157:15:18"},{"body":{"id":2444,"nodeType":"Block","src":"2227:95:18","statements":[{"expression":{"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2430,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"2241:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2432,"indexExpression":{"id":2431,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"2248:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2241:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2433,"name":"HEX_DIGITS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"2253:10:18","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2437,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2434,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"2264:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2277:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"2264:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2253:28:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"2241:40:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2439,"nodeType":"ExpressionStatement","src":"2241:40:18"},{"expression":{"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2440,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"2295:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"2295:16:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2443,"nodeType":"ExpressionStatement","src":"2295:16:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2424,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"2215:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2425,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2219:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2215:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2445,"initializationExpression":{"assignments":[2417],"declarations":[{"constant":false,"id":2417,"mutability":"mutable","name":"i","nameLocation":"2195:1:18","nodeType":"VariableDeclaration","scope":2445,"src":"2187:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2416,"name":"uint256","nodeType":"ElementaryTypeName","src":"2187:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2423,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2420,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2199:1:18","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2419,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"2203:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2199:14:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2187:26:18"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2428,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"2222:3:18","subExpression":{"id":2427,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2417,"src":"2224:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2429,"nodeType":"ExpressionStatement","src":"2222:3:18"},"nodeType":"ForStatement","src":"2182:140:18"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2446,"name":"localValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2390,"src":"2335:10:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2447,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:1:18","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2335:15:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2455,"nodeType":"IfStatement","src":"2331:96:18","trueBody":{"id":2454,"nodeType":"Block","src":"2352:75:18","statements":[{"errorCall":{"arguments":[{"id":2450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2382,"src":"2402:5:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2451,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2384,"src":"2409:6:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2449,"name":"StringsInsufficientHexLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2285,"src":"2373:28:18","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2373:43:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2453,"nodeType":"RevertStatement","src":"2366:50:18"}]}},{"expression":{"arguments":[{"id":2458,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2394,"src":"2450:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2443:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2456,"name":"string","nodeType":"ElementaryTypeName","src":"2443:6:18","typeDescriptions":{}}},"id":2459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2443:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2388,"id":2460,"nodeType":"Return","src":"2436:21:18"}]},"documentation":{"id":2380,"nodeType":"StructuredDocumentation","src":"1822:112:18","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2462,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1948:11:18","nodeType":"FunctionDefinition","parameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2382,"mutability":"mutable","name":"value","nameLocation":"1968:5:18","nodeType":"VariableDeclaration","scope":2462,"src":"1960:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2381,"name":"uint256","nodeType":"ElementaryTypeName","src":"1960:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2384,"mutability":"mutable","name":"length","nameLocation":"1983:6:18","nodeType":"VariableDeclaration","scope":2462,"src":"1975:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2383,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1959:31:18"},"returnParameters":{"id":2388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2462,"src":"2014:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2386,"name":"string","nodeType":"ElementaryTypeName","src":"2014:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2013:15:18"},"scope":2585,"src":"1939:525:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2481,"nodeType":"Block","src":"2696:75:18","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2475,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"2741:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2474,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2733:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2473,"name":"uint160","nodeType":"ElementaryTypeName","src":"2733:7:18","typeDescriptions":{}}},"id":2476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2733:13:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2472,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2725:7:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2471,"name":"uint256","nodeType":"ElementaryTypeName","src":"2725:7:18","typeDescriptions":{}}},"id":2477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2725:22:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2478,"name":"ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2278,"src":"2749:14:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2470,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2379,2462,2482],"referencedDeclaration":2462,"src":"2713:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2713:51:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2469,"id":2480,"nodeType":"Return","src":"2706:58:18"}]},"documentation":{"id":2463,"nodeType":"StructuredDocumentation","src":"2470:148:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."},"id":2482,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2632:11:18","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2465,"mutability":"mutable","name":"addr","nameLocation":"2652:4:18","nodeType":"VariableDeclaration","scope":2482,"src":"2644:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2464,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2643:14:18"},"returnParameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2482,"src":"2681:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2467,"name":"string","nodeType":"ElementaryTypeName","src":"2681:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2680:15:18"},"scope":2585,"src":"2623:148:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2546,"nodeType":"Block","src":"3028:642:18","statements":[{"assignments":[2491],"declarations":[{"constant":false,"id":2491,"mutability":"mutable","name":"buffer","nameLocation":"3051:6:18","nodeType":"VariableDeclaration","scope":2546,"src":"3038:19:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2490,"name":"bytes","nodeType":"ElementaryTypeName","src":"3038:5:18","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2498,"initialValue":{"arguments":[{"arguments":[{"id":2495,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"3078:4:18","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2494,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2379,2462,2482],"referencedDeclaration":2482,"src":"3066:11:18","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3066:17:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2493,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3060:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2492,"name":"bytes","nodeType":"ElementaryTypeName","src":"3060:5:18","typeDescriptions":{}}},"id":2497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3060:24:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3038:46:18"},{"assignments":[2500],"declarations":[{"constant":false,"id":2500,"mutability":"mutable","name":"hashValue","nameLocation":"3177:9:18","nodeType":"VariableDeclaration","scope":2546,"src":"3169:17:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2499,"name":"uint256","nodeType":"ElementaryTypeName","src":"3169:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2501,"nodeType":"VariableDeclarationStatement","src":"3169:17:18"},{"AST":{"nativeSrc":"3221:78:18","nodeType":"YulBlock","src":"3221:78:18","statements":[{"nativeSrc":"3235:54:18","nodeType":"YulAssignment","src":"3235:54:18","value":{"arguments":[{"kind":"number","nativeSrc":"3252:2:18","nodeType":"YulLiteral","src":"3252:2:18","type":"","value":"96"},{"arguments":[{"arguments":[{"name":"buffer","nativeSrc":"3270:6:18","nodeType":"YulIdentifier","src":"3270:6:18"},{"kind":"number","nativeSrc":"3278:4:18","nodeType":"YulLiteral","src":"3278:4:18","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3266:3:18","nodeType":"YulIdentifier","src":"3266:3:18"},"nativeSrc":"3266:17:18","nodeType":"YulFunctionCall","src":"3266:17:18"},{"kind":"number","nativeSrc":"3285:2:18","nodeType":"YulLiteral","src":"3285:2:18","type":"","value":"40"}],"functionName":{"name":"keccak256","nativeSrc":"3256:9:18","nodeType":"YulIdentifier","src":"3256:9:18"},"nativeSrc":"3256:32:18","nodeType":"YulFunctionCall","src":"3256:32:18"}],"functionName":{"name":"shr","nativeSrc":"3248:3:18","nodeType":"YulIdentifier","src":"3248:3:18"},"nativeSrc":"3248:41:18","nodeType":"YulFunctionCall","src":"3248:41:18"},"variableNames":[{"name":"hashValue","nativeSrc":"3235:9:18","nodeType":"YulIdentifier","src":"3235:9:18"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2491,"isOffset":false,"isSlot":false,"src":"3270:6:18","valueSize":1},{"declaration":2500,"isOffset":false,"isSlot":false,"src":"3235:9:18","valueSize":1}],"flags":["memory-safe"],"id":2502,"nodeType":"InlineAssembly","src":"3196:103:18"},{"body":{"id":2539,"nodeType":"Block","src":"3342:291:18","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2526,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2513,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"3448:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3460:3:18","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"3448:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"37","id":2516,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3466:1:18","typeDescriptions":{"typeIdentifier":"t_rational_7_by_1","typeString":"int_const 7"},"value":"7"},"src":"3448:19:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"baseExpression":{"id":2520,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"3477:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2522,"indexExpression":{"id":2521,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"3484:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3477:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes1","typeString":"bytes1"}],"id":2519,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3471:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2518,"name":"uint8","nodeType":"ElementaryTypeName","src":"3471:5:18","typeDescriptions":{}}},"id":2523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3471:16:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"3936","id":2524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3490:2:18","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"3471:21:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3448:44:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2534,"nodeType":"IfStatement","src":"3444:150:18","trueBody":{"id":2533,"nodeType":"Block","src":"3494:100:18","statements":[{"expression":{"id":2531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2527,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"3562:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2529,"indexExpression":{"id":2528,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"3569:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3562:9:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"^=","rightHandSide":{"hexValue":"30783230","id":2530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3575:4:18","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"3562:17:18","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2532,"nodeType":"ExpressionStatement","src":"3562:17:18"}]}},{"expression":{"id":2537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2535,"name":"hashValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"3607:9:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3621:1:18","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"3607:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2538,"nodeType":"ExpressionStatement","src":"3607:15:18"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2507,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"3330:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3334:1:18","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3330:5:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2540,"initializationExpression":{"assignments":[2504],"declarations":[{"constant":false,"id":2504,"mutability":"mutable","name":"i","nameLocation":"3322:1:18","nodeType":"VariableDeclaration","scope":2540,"src":"3314:9:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2503,"name":"uint256","nodeType":"ElementaryTypeName","src":"3314:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2506,"initialValue":{"hexValue":"3431","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3326:2:18","typeDescriptions":{"typeIdentifier":"t_rational_41_by_1","typeString":"int_const 41"},"value":"41"},"nodeType":"VariableDeclarationStatement","src":"3314:14:18"},"isSimpleCounterLoop":false,"loopExpression":{"expression":{"id":2511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"3337:3:18","subExpression":{"id":2510,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2504,"src":"3339:1:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2512,"nodeType":"ExpressionStatement","src":"3337:3:18"},"nodeType":"ForStatement","src":"3309:324:18"},{"expression":{"arguments":[{"id":2543,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2491,"src":"3656:6:18","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2542,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3649:6:18","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2541,"name":"string","nodeType":"ElementaryTypeName","src":"3649:6:18","typeDescriptions":{}}},"id":2544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3649:14:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2489,"id":2545,"nodeType":"Return","src":"3642:21:18"}]},"documentation":{"id":2483,"nodeType":"StructuredDocumentation","src":"2777:165:18","text":" @dev Converts an `address` with fixed length of 20 bytes to its checksummed ASCII `string` hexadecimal\n representation, according to EIP-55."},"id":2547,"implemented":true,"kind":"function","modifiers":[],"name":"toChecksumHexString","nameLocation":"2956:19:18","nodeType":"FunctionDefinition","parameters":{"id":2486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"addr","nameLocation":"2984:4:18","nodeType":"VariableDeclaration","scope":2547,"src":"2976:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2484,"name":"address","nodeType":"ElementaryTypeName","src":"2976:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2975:14:18"},"returnParameters":{"id":2489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2547,"src":"3013:13:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2487,"name":"string","nodeType":"ElementaryTypeName","src":"3013:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3012:15:18"},"scope":2585,"src":"2947:723:18","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2583,"nodeType":"Block","src":"3825:104:18","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2559,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"3848:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2558,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3842:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2557,"name":"bytes","nodeType":"ElementaryTypeName","src":"3842:5:18","typeDescriptions":{}}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3842:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3851:6:18","memberName":"length","nodeType":"MemberAccess","src":"3842:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2564,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"3867:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2563,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3861:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2562,"name":"bytes","nodeType":"ElementaryTypeName","src":"3861:5:18","typeDescriptions":{}}},"id":2565,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3861:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3870:6:18","memberName":"length","nodeType":"MemberAccess","src":"3861:15:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3842:34:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":2571,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2550,"src":"3896:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2570,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3890:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2569,"name":"bytes","nodeType":"ElementaryTypeName","src":"3890:5:18","typeDescriptions":{}}},"id":2572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3890:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2568,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3880:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3880:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"arguments":[{"id":2577,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"3919:1:18","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2576,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3913:5:18","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2575,"name":"bytes","nodeType":"ElementaryTypeName","src":"3913:5:18","typeDescriptions":{}}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3913:8:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2574,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3903:9:18","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3903:19:18","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3880:42:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3842:80:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2556,"id":2582,"nodeType":"Return","src":"3835:87:18"}]},"documentation":{"id":2548,"nodeType":"StructuredDocumentation","src":"3676:66:18","text":" @dev Returns true if the two strings are equal."},"id":2584,"implemented":true,"kind":"function","modifiers":[],"name":"equal","nameLocation":"3756:5:18","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2550,"mutability":"mutable","name":"a","nameLocation":"3776:1:18","nodeType":"VariableDeclaration","scope":2584,"src":"3762:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2549,"name":"string","nodeType":"ElementaryTypeName","src":"3762:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2552,"mutability":"mutable","name":"b","nameLocation":"3793:1:18","nodeType":"VariableDeclaration","scope":2584,"src":"3779:15:18","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2551,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:18","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3761:34:18"},"returnParameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2584,"src":"3819:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2554,"name":"bool","nodeType":"ElementaryTypeName","src":"3819:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3818:6:18"},"scope":2585,"src":"3747:182:18","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2586,"src":"251:3680:18","usedErrors":[2285],"usedEvents":[]}],"src":"101:3831:18"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"id":19,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2933]},"id":2934,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2587,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"112:24:19"},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2588,"nodeType":"StructuredDocumentation","src":"138:205:19","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2933,"linearizedBaseContracts":[2933],"name":"ECDSA","nameLocation":"352:5:19","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2593,"members":[{"id":2589,"name":"NoError","nameLocation":"392:7:19","nodeType":"EnumValue","src":"392:7:19"},{"id":2590,"name":"InvalidSignature","nameLocation":"409:16:19","nodeType":"EnumValue","src":"409:16:19"},{"id":2591,"name":"InvalidSignatureLength","nameLocation":"435:22:19","nodeType":"EnumValue","src":"435:22:19"},{"id":2592,"name":"InvalidSignatureS","nameLocation":"467:17:19","nodeType":"EnumValue","src":"467:17:19"}],"name":"RecoverError","nameLocation":"369:12:19","nodeType":"EnumDefinition","src":"364:126:19"},{"documentation":{"id":2594,"nodeType":"StructuredDocumentation","src":"496:63:19","text":" @dev The signature derives the `address(0)`."},"errorSelector":"f645eedf","id":2596,"name":"ECDSAInvalidSignature","nameLocation":"570:21:19","nodeType":"ErrorDefinition","parameters":{"id":2595,"nodeType":"ParameterList","parameters":[],"src":"591:2:19"},"src":"564:30:19"},{"documentation":{"id":2597,"nodeType":"StructuredDocumentation","src":"600:60:19","text":" @dev The signature has an invalid length."},"errorSelector":"fce698f7","id":2601,"name":"ECDSAInvalidSignatureLength","nameLocation":"671:27:19","nodeType":"ErrorDefinition","parameters":{"id":2600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2599,"mutability":"mutable","name":"length","nameLocation":"707:6:19","nodeType":"VariableDeclaration","scope":2601,"src":"699:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2598,"name":"uint256","nodeType":"ElementaryTypeName","src":"699:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"698:16:19"},"src":"665:50:19"},{"documentation":{"id":2602,"nodeType":"StructuredDocumentation","src":"721:85:19","text":" @dev The signature has an S value that is in the upper half order."},"errorSelector":"d78bce0c","id":2606,"name":"ECDSAInvalidSignatureS","nameLocation":"817:22:19","nodeType":"ErrorDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"s","nameLocation":"848:1:19","nodeType":"VariableDeclaration","scope":2606,"src":"840:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"840:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"839:11:19"},"src":"811:40:19"},{"body":{"id":2658,"nodeType":"Block","src":"2285:622:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2621,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"2299:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2622,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2309:6:19","memberName":"length","nodeType":"MemberAccess","src":"2299:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2319:2:19","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2299:22:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2656,"nodeType":"Block","src":"2793:108:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2823:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2815:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2643,"name":"address","nodeType":"ElementaryTypeName","src":"2815:7:19","typeDescriptions":{}}},"id":2646,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2815:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2647,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"2827:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2593_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2648,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2840:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2591,"src":"2827:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"expression":{"id":2651,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2611,"src":"2872:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2652,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2882:6:19","memberName":"length","nodeType":"MemberAccess","src":"2872:16:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2864:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2649,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2864:7:19","typeDescriptions":{}}},"id":2653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2864:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2814:76:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2593_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2620,"id":2655,"nodeType":"Return","src":"2807:83:19"}]},"id":2657,"nodeType":"IfStatement","src":"2295:606:19","trueBody":{"id":2642,"nodeType":"Block","src":"2323:464:19","statements":[{"assignments":[2626],"declarations":[{"constant":false,"id":2626,"mutability":"mutable","name":"r","nameLocation":"2345:1:19","nodeType":"VariableDeclaration","scope":2642,"src":"2337:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2625,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2337:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2627,"nodeType":"VariableDeclarationStatement","src":"2337:9:19"},{"assignments":[2629],"declarations":[{"constant":false,"id":2629,"mutability":"mutable","name":"s","nameLocation":"2368:1:19","nodeType":"VariableDeclaration","scope":2642,"src":"2360:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2628,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2360:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2630,"nodeType":"VariableDeclarationStatement","src":"2360:9:19"},{"assignments":[2632],"declarations":[{"constant":false,"id":2632,"mutability":"mutable","name":"v","nameLocation":"2389:1:19","nodeType":"VariableDeclaration","scope":2642,"src":"2383:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2631,"name":"uint8","nodeType":"ElementaryTypeName","src":"2383:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2633,"nodeType":"VariableDeclarationStatement","src":"2383:7:19"},{"AST":{"nativeSrc":"2560:171:19","nodeType":"YulBlock","src":"2560:171:19","statements":[{"nativeSrc":"2578:32:19","nodeType":"YulAssignment","src":"2578:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2593:9:19","nodeType":"YulIdentifier","src":"2593:9:19"},{"kind":"number","nativeSrc":"2604:4:19","nodeType":"YulLiteral","src":"2604:4:19","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"2589:3:19","nodeType":"YulIdentifier","src":"2589:3:19"},"nativeSrc":"2589:20:19","nodeType":"YulFunctionCall","src":"2589:20:19"}],"functionName":{"name":"mload","nativeSrc":"2583:5:19","nodeType":"YulIdentifier","src":"2583:5:19"},"nativeSrc":"2583:27:19","nodeType":"YulFunctionCall","src":"2583:27:19"},"variableNames":[{"name":"r","nativeSrc":"2578:1:19","nodeType":"YulIdentifier","src":"2578:1:19"}]},{"nativeSrc":"2627:32:19","nodeType":"YulAssignment","src":"2627:32:19","value":{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2642:9:19","nodeType":"YulIdentifier","src":"2642:9:19"},{"kind":"number","nativeSrc":"2653:4:19","nodeType":"YulLiteral","src":"2653:4:19","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"2638:3:19","nodeType":"YulIdentifier","src":"2638:3:19"},"nativeSrc":"2638:20:19","nodeType":"YulFunctionCall","src":"2638:20:19"}],"functionName":{"name":"mload","nativeSrc":"2632:5:19","nodeType":"YulIdentifier","src":"2632:5:19"},"nativeSrc":"2632:27:19","nodeType":"YulFunctionCall","src":"2632:27:19"},"variableNames":[{"name":"s","nativeSrc":"2627:1:19","nodeType":"YulIdentifier","src":"2627:1:19"}]},{"nativeSrc":"2676:41:19","nodeType":"YulAssignment","src":"2676:41:19","value":{"arguments":[{"kind":"number","nativeSrc":"2686:1:19","nodeType":"YulLiteral","src":"2686:1:19","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nativeSrc":"2699:9:19","nodeType":"YulIdentifier","src":"2699:9:19"},{"kind":"number","nativeSrc":"2710:4:19","nodeType":"YulLiteral","src":"2710:4:19","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"2695:3:19","nodeType":"YulIdentifier","src":"2695:3:19"},"nativeSrc":"2695:20:19","nodeType":"YulFunctionCall","src":"2695:20:19"}],"functionName":{"name":"mload","nativeSrc":"2689:5:19","nodeType":"YulIdentifier","src":"2689:5:19"},"nativeSrc":"2689:27:19","nodeType":"YulFunctionCall","src":"2689:27:19"}],"functionName":{"name":"byte","nativeSrc":"2681:4:19","nodeType":"YulIdentifier","src":"2681:4:19"},"nativeSrc":"2681:36:19","nodeType":"YulFunctionCall","src":"2681:36:19"},"variableNames":[{"name":"v","nativeSrc":"2676:1:19","nodeType":"YulIdentifier","src":"2676:1:19"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":2626,"isOffset":false,"isSlot":false,"src":"2578:1:19","valueSize":1},{"declaration":2629,"isOffset":false,"isSlot":false,"src":"2627:1:19","valueSize":1},{"declaration":2611,"isOffset":false,"isSlot":false,"src":"2593:9:19","valueSize":1},{"declaration":2611,"isOffset":false,"isSlot":false,"src":"2642:9:19","valueSize":1},{"declaration":2611,"isOffset":false,"isSlot":false,"src":"2699:9:19","valueSize":1},{"declaration":2632,"isOffset":false,"isSlot":false,"src":"2676:1:19","valueSize":1}],"flags":["memory-safe"],"id":2634,"nodeType":"InlineAssembly","src":"2535:196:19"},{"expression":{"arguments":[{"id":2636,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2609,"src":"2762:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2637,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"2768:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2638,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2626,"src":"2771:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2639,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2629,"src":"2774:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2635,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2659,2739,2847],"referencedDeclaration":2847,"src":"2751:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2593_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2640,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2751:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2593_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2620,"id":2641,"nodeType":"Return","src":"2744:32:19"}]}}]},"documentation":{"id":2607,"nodeType":"StructuredDocumentation","src":"857:1267:19","text":" @dev Returns the address that signed a hashed message (`hash`) with `signature` or an error. This will not\n return address(0) without also returning an error description. Errors are documented using an enum (error type)\n and a bytes32 providing additional information about the error.\n If no error is returned, then the address can be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]"},"id":2659,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2138:10:19","nodeType":"FunctionDefinition","parameters":{"id":2612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2609,"mutability":"mutable","name":"hash","nameLocation":"2166:4:19","nodeType":"VariableDeclaration","scope":2659,"src":"2158:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2158:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2611,"mutability":"mutable","name":"signature","nameLocation":"2193:9:19","nodeType":"VariableDeclaration","scope":2659,"src":"2180:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2610,"name":"bytes","nodeType":"ElementaryTypeName","src":"2180:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2148:60:19"},"returnParameters":{"id":2620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"recovered","nameLocation":"2240:9:19","nodeType":"VariableDeclaration","scope":2659,"src":"2232:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2613,"name":"address","nodeType":"ElementaryTypeName","src":"2232:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2617,"mutability":"mutable","name":"err","nameLocation":"2264:3:19","nodeType":"VariableDeclaration","scope":2659,"src":"2251:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2616,"nodeType":"UserDefinedTypeName","pathNode":{"id":2615,"name":"RecoverError","nameLocations":["2251:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2593,"src":"2251:12:19"},"referencedDeclaration":2593,"src":"2251:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2619,"mutability":"mutable","name":"errArg","nameLocation":"2277:6:19","nodeType":"VariableDeclaration","scope":2659,"src":"2269:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2269:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2231:53:19"},"scope":2933,"src":"2129:778:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2688,"nodeType":"Block","src":"3801:168:19","statements":[{"assignments":[2670,2673,2675],"declarations":[{"constant":false,"id":2670,"mutability":"mutable","name":"recovered","nameLocation":"3820:9:19","nodeType":"VariableDeclaration","scope":2688,"src":"3812:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2669,"name":"address","nodeType":"ElementaryTypeName","src":"3812:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"error","nameLocation":"3844:5:19","nodeType":"VariableDeclaration","scope":2688,"src":"3831:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2672,"nodeType":"UserDefinedTypeName","pathNode":{"id":2671,"name":"RecoverError","nameLocations":["3831:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2593,"src":"3831:12:19"},"referencedDeclaration":2593,"src":"3831:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2675,"mutability":"mutable","name":"errorArg","nameLocation":"3859:8:19","nodeType":"VariableDeclaration","scope":2688,"src":"3851:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2674,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3851:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2680,"initialValue":{"arguments":[{"id":2677,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2662,"src":"3882:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2678,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2664,"src":"3888:9:19","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2676,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2659,2739,2847],"referencedDeclaration":2659,"src":"3871:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2593_$_t_bytes32_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3871:27:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2593_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"3811:87:19"},{"expression":{"arguments":[{"id":2682,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"3920:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},{"id":2683,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"3927:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2681,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"3908:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2593_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3908:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2685,"nodeType":"ExpressionStatement","src":"3908:28:19"},{"expression":{"id":2686,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2670,"src":"3953:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2668,"id":2687,"nodeType":"Return","src":"3946:16:19"}]},"documentation":{"id":2660,"nodeType":"StructuredDocumentation","src":"2913:796:19","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM precompile allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {MessageHashUtils-toEthSignedMessageHash} on it."},"id":2689,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3723:7:19","nodeType":"FunctionDefinition","parameters":{"id":2665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2662,"mutability":"mutable","name":"hash","nameLocation":"3739:4:19","nodeType":"VariableDeclaration","scope":2689,"src":"3731:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3731:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2664,"mutability":"mutable","name":"signature","nameLocation":"3758:9:19","nodeType":"VariableDeclaration","scope":2689,"src":"3745:22:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2663,"name":"bytes","nodeType":"ElementaryTypeName","src":"3745:5:19","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3730:38:19"},"returnParameters":{"id":2668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2689,"src":"3792:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2666,"name":"address","nodeType":"ElementaryTypeName","src":"3792:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3791:9:19"},"scope":2933,"src":"3714:255:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2738,"nodeType":"Block","src":"4348:342:19","statements":[{"id":2737,"nodeType":"UncheckedBlock","src":"4358:326:19","statements":[{"assignments":[2707],"declarations":[{"constant":false,"id":2707,"mutability":"mutable","name":"s","nameLocation":"4390:1:19","nodeType":"VariableDeclaration","scope":2737,"src":"4382:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2706,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4382:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2714,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2708,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"4394:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4407:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2710,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4399:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2709,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4399:7:19","typeDescriptions":{}}},"id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4399:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4394:80:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4382:92:19"},{"assignments":[2716],"declarations":[{"constant":false,"id":2716,"mutability":"mutable","name":"v","nameLocation":"4591:1:19","nodeType":"VariableDeclaration","scope":2737,"src":"4585:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2715,"name":"uint8","nodeType":"ElementaryTypeName","src":"4585:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2729,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2721,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2696,"src":"4610:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4602:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2719,"name":"uint256","nodeType":"ElementaryTypeName","src":"4602:7:19","typeDescriptions":{}}},"id":2722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4602:11:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4617:3:19","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4602:18:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2725,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4601:20:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2726,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4624:2:19","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4601:25:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4595:5:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2717,"name":"uint8","nodeType":"ElementaryTypeName","src":"4595:5:19","typeDescriptions":{}}},"id":2728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4595:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4585:42:19"},{"expression":{"arguments":[{"id":2731,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2692,"src":"4659:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2732,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2716,"src":"4665:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2733,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2694,"src":"4668:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2734,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2707,"src":"4671:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2730,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2659,2739,2847],"referencedDeclaration":2847,"src":"4648:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2593_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4648:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2593_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2705,"id":2736,"nodeType":"Return","src":"4641:32:19"}]}]},"documentation":{"id":2690,"nodeType":"StructuredDocumentation","src":"3975:205:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[ERC-2098 short signatures]"},"id":2739,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4194:10:19","nodeType":"FunctionDefinition","parameters":{"id":2697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2692,"mutability":"mutable","name":"hash","nameLocation":"4222:4:19","nodeType":"VariableDeclaration","scope":2739,"src":"4214:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2691,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4214:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2694,"mutability":"mutable","name":"r","nameLocation":"4244:1:19","nodeType":"VariableDeclaration","scope":2739,"src":"4236:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4236:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2696,"mutability":"mutable","name":"vs","nameLocation":"4263:2:19","nodeType":"VariableDeclaration","scope":2739,"src":"4255:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4255:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4204:67:19"},"returnParameters":{"id":2705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2699,"mutability":"mutable","name":"recovered","nameLocation":"4303:9:19","nodeType":"VariableDeclaration","scope":2739,"src":"4295:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2698,"name":"address","nodeType":"ElementaryTypeName","src":"4295:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"err","nameLocation":"4327:3:19","nodeType":"VariableDeclaration","scope":2739,"src":"4314:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2701,"nodeType":"UserDefinedTypeName","pathNode":{"id":2700,"name":"RecoverError","nameLocations":["4314:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2593,"src":"4314:12:19"},"referencedDeclaration":2593,"src":"4314:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2704,"mutability":"mutable","name":"errArg","nameLocation":"4340:6:19","nodeType":"VariableDeclaration","scope":2739,"src":"4332:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2703,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4332:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4294:53:19"},"scope":2933,"src":"4185:505:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2771,"nodeType":"Block","src":"4903:164:19","statements":[{"assignments":[2752,2755,2757],"declarations":[{"constant":false,"id":2752,"mutability":"mutable","name":"recovered","nameLocation":"4922:9:19","nodeType":"VariableDeclaration","scope":2771,"src":"4914:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2751,"name":"address","nodeType":"ElementaryTypeName","src":"4914:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2755,"mutability":"mutable","name":"error","nameLocation":"4946:5:19","nodeType":"VariableDeclaration","scope":2771,"src":"4933:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2754,"nodeType":"UserDefinedTypeName","pathNode":{"id":2753,"name":"RecoverError","nameLocations":["4933:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2593,"src":"4933:12:19"},"referencedDeclaration":2593,"src":"4933:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"errorArg","nameLocation":"4961:8:19","nodeType":"VariableDeclaration","scope":2771,"src":"4953:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2756,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4953:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2763,"initialValue":{"arguments":[{"id":2759,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"4984:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2760,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2744,"src":"4990:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2761,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2746,"src":"4993:2:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2758,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2659,2739,2847],"referencedDeclaration":2739,"src":"4973:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2593_$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4973:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2593_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"4913:83:19"},{"expression":{"arguments":[{"id":2765,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2755,"src":"5018:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},{"id":2766,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2757,"src":"5025:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2764,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"5006:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2593_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5006:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2768,"nodeType":"ExpressionStatement","src":"5006:28:19"},{"expression":{"id":2769,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2752,"src":"5051:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2750,"id":2770,"nodeType":"Return","src":"5044:16:19"}]},"documentation":{"id":2740,"nodeType":"StructuredDocumentation","src":"4696:116:19","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately."},"id":2772,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4826:7:19","nodeType":"FunctionDefinition","parameters":{"id":2747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2742,"mutability":"mutable","name":"hash","nameLocation":"4842:4:19","nodeType":"VariableDeclaration","scope":2772,"src":"4834:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4834:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2744,"mutability":"mutable","name":"r","nameLocation":"4856:1:19","nodeType":"VariableDeclaration","scope":2772,"src":"4848:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4848:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2746,"mutability":"mutable","name":"vs","nameLocation":"4867:2:19","nodeType":"VariableDeclaration","scope":2772,"src":"4859:10:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2745,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4859:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4833:37:19"},"returnParameters":{"id":2750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2749,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2772,"src":"4894:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2748,"name":"address","nodeType":"ElementaryTypeName","src":"4894:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4893:9:19"},"scope":2933,"src":"4817:250:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2846,"nodeType":"Block","src":"5382:1372:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2793,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"6278:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2792,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6270:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2791,"name":"uint256","nodeType":"ElementaryTypeName","src":"6270:7:19","typeDescriptions":{}}},"id":2794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6270:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6283:66:19","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6270:79:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2807,"nodeType":"IfStatement","src":"6266:164:19","trueBody":{"id":2806,"nodeType":"Block","src":"6351:79:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6381:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6373:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2797,"name":"address","nodeType":"ElementaryTypeName","src":"6373:7:19","typeDescriptions":{}}},"id":2800,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6373:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2801,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"6385:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2593_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2802,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6398:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2592,"src":"6385:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},{"id":2803,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"6417:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2804,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6372:47:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2593_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2790,"id":2805,"nodeType":"Return","src":"6365:54:19"}]}},{"assignments":[2809],"declarations":[{"constant":false,"id":2809,"mutability":"mutable","name":"signer","nameLocation":"6532:6:19","nodeType":"VariableDeclaration","scope":2846,"src":"6524:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2808,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2816,"initialValue":{"arguments":[{"id":2811,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"6551:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2812,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2777,"src":"6557:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2813,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2779,"src":"6560:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2814,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2781,"src":"6563:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2810,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6541:9:19","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6541:24:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6524:41:19"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2817,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"6579:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2820,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6597:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2819,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6589:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2818,"name":"address","nodeType":"ElementaryTypeName","src":"6589:7:19","typeDescriptions":{}}},"id":2821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6589:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6579:20:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2836,"nodeType":"IfStatement","src":"6575:113:19","trueBody":{"id":2835,"nodeType":"Block","src":"6601:87:19","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6631:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2824,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6623:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2823,"name":"address","nodeType":"ElementaryTypeName","src":"6623:7:19","typeDescriptions":{}}},"id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6623:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2827,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"6635:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2593_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6648:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2590,"src":"6635:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6674:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6666:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2829,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6666:7:19","typeDescriptions":{}}},"id":2832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6666:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2833,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6622:55:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2593_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2790,"id":2834,"nodeType":"Return","src":"6615:62:19"}]}},{"expression":{"components":[{"id":2837,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2809,"src":"6706:6:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2838,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"6714:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2593_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2839,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6727:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2589,"src":"6714:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},{"arguments":[{"hexValue":"30","id":2842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6744:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6736:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2840,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6736:7:19","typeDescriptions":{}}},"id":2843,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6736:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2844,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6705:42:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2593_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"functionReturnParameters":2790,"id":2845,"nodeType":"Return","src":"6698:49:19"}]},"documentation":{"id":2773,"nodeType":"StructuredDocumentation","src":"5073:125:19","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2847,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5212:10:19","nodeType":"FunctionDefinition","parameters":{"id":2782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2775,"mutability":"mutable","name":"hash","nameLocation":"5240:4:19","nodeType":"VariableDeclaration","scope":2847,"src":"5232:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2774,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5232:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2777,"mutability":"mutable","name":"v","nameLocation":"5260:1:19","nodeType":"VariableDeclaration","scope":2847,"src":"5254:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2776,"name":"uint8","nodeType":"ElementaryTypeName","src":"5254:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2779,"mutability":"mutable","name":"r","nameLocation":"5279:1:19","nodeType":"VariableDeclaration","scope":2847,"src":"5271:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2778,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5271:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2781,"mutability":"mutable","name":"s","nameLocation":"5298:1:19","nodeType":"VariableDeclaration","scope":2847,"src":"5290:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2780,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5290:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5222:83:19"},"returnParameters":{"id":2790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2784,"mutability":"mutable","name":"recovered","nameLocation":"5337:9:19","nodeType":"VariableDeclaration","scope":2847,"src":"5329:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2783,"name":"address","nodeType":"ElementaryTypeName","src":"5329:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2787,"mutability":"mutable","name":"err","nameLocation":"5361:3:19","nodeType":"VariableDeclaration","scope":2847,"src":"5348:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2786,"nodeType":"UserDefinedTypeName","pathNode":{"id":2785,"name":"RecoverError","nameLocations":["5348:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2593,"src":"5348:12:19"},"referencedDeclaration":2593,"src":"5348:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2789,"mutability":"mutable","name":"errArg","nameLocation":"5374:6:19","nodeType":"VariableDeclaration","scope":2847,"src":"5366:14:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2788,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5366:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5328:53:19"},"scope":2933,"src":"5203:1551:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2882,"nodeType":"Block","src":"6981:166:19","statements":[{"assignments":[2862,2865,2867],"declarations":[{"constant":false,"id":2862,"mutability":"mutable","name":"recovered","nameLocation":"7000:9:19","nodeType":"VariableDeclaration","scope":2882,"src":"6992:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2861,"name":"address","nodeType":"ElementaryTypeName","src":"6992:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2865,"mutability":"mutable","name":"error","nameLocation":"7024:5:19","nodeType":"VariableDeclaration","scope":2882,"src":"7011:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2864,"nodeType":"UserDefinedTypeName","pathNode":{"id":2863,"name":"RecoverError","nameLocations":["7011:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2593,"src":"7011:12:19"},"referencedDeclaration":2593,"src":"7011:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2867,"mutability":"mutable","name":"errorArg","nameLocation":"7039:8:19","nodeType":"VariableDeclaration","scope":2882,"src":"7031:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2866,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7031:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2874,"initialValue":{"arguments":[{"id":2869,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2850,"src":"7062:4:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2870,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2852,"src":"7068:1:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2871,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"7071:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2872,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"7074:1:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2868,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2659,2739,2847],"referencedDeclaration":2847,"src":"7051:10:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2593_$_t_bytes32_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError,bytes32)"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7051:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2593_$_t_bytes32_$","typeString":"tuple(address,enum ECDSA.RecoverError,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"6991:85:19"},{"expression":{"arguments":[{"id":2876,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2865,"src":"7098:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},{"id":2877,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2867,"src":"7105:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2875,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"7086:11:19","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2593_$_t_bytes32_$returns$__$","typeString":"function (enum ECDSA.RecoverError,bytes32) pure"}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7086:28:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2879,"nodeType":"ExpressionStatement","src":"7086:28:19"},{"expression":{"id":2880,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2862,"src":"7131:9:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2860,"id":2881,"nodeType":"Return","src":"7124:16:19"}]},"documentation":{"id":2848,"nodeType":"StructuredDocumentation","src":"6760:122:19","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2883,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6896:7:19","nodeType":"FunctionDefinition","parameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"hash","nameLocation":"6912:4:19","nodeType":"VariableDeclaration","scope":2883,"src":"6904:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6904:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2852,"mutability":"mutable","name":"v","nameLocation":"6924:1:19","nodeType":"VariableDeclaration","scope":2883,"src":"6918:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2851,"name":"uint8","nodeType":"ElementaryTypeName","src":"6918:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2854,"mutability":"mutable","name":"r","nameLocation":"6935:1:19","nodeType":"VariableDeclaration","scope":2883,"src":"6927:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6927:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2856,"mutability":"mutable","name":"s","nameLocation":"6946:1:19","nodeType":"VariableDeclaration","scope":2883,"src":"6938:9:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2855,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6938:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6903:45:19"},"returnParameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2883,"src":"6972:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2858,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6971:9:19"},"scope":2933,"src":"6887:260:19","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2931,"nodeType":"Block","src":"7352:460:19","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"},"id":2895,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2892,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"7366:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2893,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"7375:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2593_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7388:7:19","memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2589,"src":"7375:20:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},"src":"7366:29:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2898,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"7462:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2899,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"7471:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2593_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2900,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7484:16:19","memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2590,"src":"7471:29:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},"src":"7462:38:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"},"id":2909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2906,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"7567:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2907,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"7576:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2593_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7589:22:19","memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2591,"src":"7576:35:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},"src":"7567:44:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"},"id":2921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2918,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"7701:5:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2919,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2593,"src":"7710:12:19","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2593_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7723:17:19","memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2592,"src":"7710:30:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},"src":"7701:39:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2927,"nodeType":"IfStatement","src":"7697:109:19","trueBody":{"id":2926,"nodeType":"Block","src":"7742:64:19","statements":[{"errorCall":{"arguments":[{"id":2923,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"7786:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2922,"name":"ECDSAInvalidSignatureS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2606,"src":"7763:22:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_bytes32_$returns$_t_error_$","typeString":"function (bytes32) pure returns (error)"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7763:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2925,"nodeType":"RevertStatement","src":"7756:39:19"}]}},"id":2928,"nodeType":"IfStatement","src":"7563:243:19","trueBody":{"id":2917,"nodeType":"Block","src":"7613:78:19","statements":[{"errorCall":{"arguments":[{"arguments":[{"id":2913,"name":"errorArg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2889,"src":"7670:8:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2912,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7662:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2911,"name":"uint256","nodeType":"ElementaryTypeName","src":"7662:7:19","typeDescriptions":{}}},"id":2914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7662:17:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2910,"name":"ECDSAInvalidSignatureLength","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2601,"src":"7634:27:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7634:46:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2916,"nodeType":"RevertStatement","src":"7627:53:19"}]}},"id":2929,"nodeType":"IfStatement","src":"7458:348:19","trueBody":{"id":2905,"nodeType":"Block","src":"7502:55:19","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":2902,"name":"ECDSAInvalidSignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2596,"src":"7523:21:19","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":2903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7523:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":2904,"nodeType":"RevertStatement","src":"7516:30:19"}]}},"id":2930,"nodeType":"IfStatement","src":"7362:444:19","trueBody":{"id":2897,"nodeType":"Block","src":"7397:55:19","statements":[{"functionReturnParameters":2891,"id":2896,"nodeType":"Return","src":"7411:7:19"}]}}]},"documentation":{"id":2884,"nodeType":"StructuredDocumentation","src":"7153:122:19","text":" @dev Optionally reverts with the corresponding custom error according to the `error` argument provided."},"id":2932,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"7289:11:19","nodeType":"FunctionDefinition","parameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2887,"mutability":"mutable","name":"error","nameLocation":"7314:5:19","nodeType":"VariableDeclaration","scope":2932,"src":"7301:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2886,"nodeType":"UserDefinedTypeName","pathNode":{"id":2885,"name":"RecoverError","nameLocations":["7301:12:19"],"nodeType":"IdentifierPath","referencedDeclaration":2593,"src":"7301:12:19"},"referencedDeclaration":2593,"src":"7301:12:19","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2593","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"},{"constant":false,"id":2889,"mutability":"mutable","name":"errorArg","nameLocation":"7329:8:19","nodeType":"VariableDeclaration","scope":2932,"src":"7321:16:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2888,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7321:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7300:38:19"},"returnParameters":{"id":2891,"nodeType":"ParameterList","parameters":[],"src":"7352:0:19"},"scope":2933,"src":"7280:532:19","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":2934,"src":"344:7470:19","usedErrors":[2596,2601,2606],"usedEvents":[]}],"src":"112:7703:19"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"id":20,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","exportedSymbols":{"EIP712":[3160],"IERC5267":[1203],"MessageHashUtils":[3234],"ShortString":[1930],"ShortStrings":[2141]},"id":3161,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2935,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"113:24:20"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","file":"./MessageHashUtils.sol","id":2937,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3161,"sourceUnit":3235,"src":"139:56:20","symbolAliases":[{"foreign":{"id":2936,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"147:16:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ShortStrings.sol","file":"../ShortStrings.sol","id":2940,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3161,"sourceUnit":2142,"src":"196:62:20","symbolAliases":[{"foreign":{"id":2938,"name":"ShortStrings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2141,"src":"204:12:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"},{"foreign":{"id":2939,"name":"ShortString","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1930,"src":"218:11:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/interfaces/IERC5267.sol","file":"../../interfaces/IERC5267.sol","id":2942,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3161,"sourceUnit":1204,"src":"259:55:20","symbolAliases":[{"foreign":{"id":2941,"name":"IERC5267","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"267:8:20","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2944,"name":"IERC5267","nameLocations":["1988:8:20"],"nodeType":"IdentifierPath","referencedDeclaration":1203,"src":"1988:8:20"},"id":2945,"nodeType":"InheritanceSpecifier","src":"1988:8:20"}],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2943,"nodeType":"StructuredDocumentation","src":"316:1643:20","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data.\n The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose\n encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract\n does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to\n produce the hash of their typed data using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain\n separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the\n separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\n @custom:oz-upgrades-unsafe-allow state-variable-immutable"},"fullyImplemented":true,"id":3160,"linearizedBaseContracts":[3160,1203],"name":"EIP712","nameLocation":"1978:6:20","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2947,"libraryName":{"id":2946,"name":"ShortStrings","nameLocations":["2009:12:20"],"nodeType":"IdentifierPath","referencedDeclaration":2141,"src":"2009:12:20"},"nodeType":"UsingForDirective","src":"2003:25:20"},{"constant":true,"id":2952,"mutability":"constant","name":"TYPE_HASH","nameLocation":"2059:9:20","nodeType":"VariableDeclaration","scope":3160,"src":"2034:140:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2948,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2034:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2089:84:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2949,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2079:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2079:95:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2954,"mutability":"immutable","name":"_cachedDomainSeparator","nameLocation":"2399:22:20","nodeType":"VariableDeclaration","scope":3160,"src":"2373:48:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2953,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2373:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2956,"mutability":"immutable","name":"_cachedChainId","nameLocation":"2453:14:20","nodeType":"VariableDeclaration","scope":3160,"src":"2427:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2955,"name":"uint256","nodeType":"ElementaryTypeName","src":"2427:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2958,"mutability":"immutable","name":"_cachedThis","nameLocation":"2499:11:20","nodeType":"VariableDeclaration","scope":3160,"src":"2473:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2957,"name":"address","nodeType":"ElementaryTypeName","src":"2473:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2960,"mutability":"immutable","name":"_hashedName","nameLocation":"2543:11:20","nodeType":"VariableDeclaration","scope":3160,"src":"2517:37:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2959,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2517:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2962,"mutability":"immutable","name":"_hashedVersion","nameLocation":"2586:14:20","nodeType":"VariableDeclaration","scope":3160,"src":"2560:40:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2961,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2560:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2965,"mutability":"immutable","name":"_name","nameLocation":"2637:5:20","nodeType":"VariableDeclaration","scope":3160,"src":"2607:35:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"},"typeName":{"id":2964,"nodeType":"UserDefinedTypeName","pathNode":{"id":2963,"name":"ShortString","nameLocations":["2607:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":1930,"src":"2607:11:20"},"referencedDeclaration":1930,"src":"2607:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2968,"mutability":"immutable","name":"_version","nameLocation":"2678:8:20","nodeType":"VariableDeclaration","scope":3160,"src":"2648:38:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"},"typeName":{"id":2967,"nodeType":"UserDefinedTypeName","pathNode":{"id":2966,"name":"ShortString","nameLocations":["2648:11:20"],"nodeType":"IdentifierPath","referencedDeclaration":1930,"src":"2648:11:20"},"referencedDeclaration":1930,"src":"2648:11:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"visibility":"private"},{"constant":false,"id":2970,"mutability":"mutable","name":"_nameFallback","nameLocation":"2707:13:20","nodeType":"VariableDeclaration","scope":3160,"src":"2692:28:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2969,"name":"string","nodeType":"ElementaryTypeName","src":"2692:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":2972,"mutability":"mutable","name":"_versionFallback","nameLocation":"2741:16:20","nodeType":"VariableDeclaration","scope":3160,"src":"2726:31:20","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":2971,"name":"string","nodeType":"ElementaryTypeName","src":"2726:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3029,"nodeType":"Block","src":"3383:376:20","statements":[{"expression":{"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2980,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"3393:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2983,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"3432:13:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2981,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"3401:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3406:25:20","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2082,"src":"3401:30:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1930_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3401:45:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"src":"3393:53:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"id":2986,"nodeType":"ExpressionStatement","src":"3393:53:20"},{"expression":{"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2987,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"3456:8:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2990,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"3501:16:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":2988,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"3467:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":2989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3475:25:20","memberName":"toShortStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2082,"src":"3467:33:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_storage_ptr_$returns$_t_userDefinedValueType$_ShortString_$1930_$attached_to$_t_string_memory_ptr_$","typeString":"function (string memory,string storage pointer) returns (ShortString)"}},"id":2991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3467:51:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"src":"3456:62:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"id":2993,"nodeType":"ExpressionStatement","src":"3456:62:20"},{"expression":{"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2994,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"3528:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":2998,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2975,"src":"3558:4:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3552:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2996,"name":"bytes","nodeType":"ElementaryTypeName","src":"3552:5:20","typeDescriptions":{}}},"id":2999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3552:11:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2995,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3542:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3542:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3528:36:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3002,"nodeType":"ExpressionStatement","src":"3528:36:20"},{"expression":{"id":3010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3003,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"3574:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":3007,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2977,"src":"3607:7:20","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3006,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3601:5:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3005,"name":"bytes","nodeType":"ElementaryTypeName","src":"3601:5:20","typeDescriptions":{}}},"id":3008,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3601:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3004,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3591:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3591:25:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3574:42:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3011,"nodeType":"ExpressionStatement","src":"3574:42:20"},{"expression":{"id":3015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3012,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"3627:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3013,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3644:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3650:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"3644:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3627:30:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3016,"nodeType":"ExpressionStatement","src":"3627:30:20"},{"expression":{"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3017,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"3667:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"id":3018,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"3692:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3692:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3667:48:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3021,"nodeType":"ExpressionStatement","src":"3667:48:20"},{"expression":{"id":3027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3022,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"3725:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3025,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3747:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3160","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3160","typeString":"contract EIP712"}],"id":3024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3739:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3023,"name":"address","nodeType":"ElementaryTypeName","src":"3739:7:20","typeDescriptions":{}}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3739:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3725:27:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3028,"nodeType":"ExpressionStatement","src":"3725:27:20"}]},"documentation":{"id":2973,"nodeType":"StructuredDocumentation","src":"2764:559:20","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":3030,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2978,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2975,"mutability":"mutable","name":"name","nameLocation":"3354:4:20","nodeType":"VariableDeclaration","scope":3030,"src":"3340:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2974,"name":"string","nodeType":"ElementaryTypeName","src":"3340:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2977,"mutability":"mutable","name":"version","nameLocation":"3374:7:20","nodeType":"VariableDeclaration","scope":3030,"src":"3360:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2976,"name":"string","nodeType":"ElementaryTypeName","src":"3360:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3339:43:20"},"returnParameters":{"id":2979,"nodeType":"ParameterList","parameters":[],"src":"3383:0:20"},"scope":3160,"src":"3328:431:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3055,"nodeType":"Block","src":"3907:200:20","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3038,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3929:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3160","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3160","typeString":"contract EIP712"}],"id":3037,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3921:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3036,"name":"address","nodeType":"ElementaryTypeName","src":"3921:7:20","typeDescriptions":{}}},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3921:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3040,"name":"_cachedThis","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2958,"src":"3938:11:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3921:28:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3042,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3953:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3959:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"3953:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3044,"name":"_cachedChainId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2956,"src":"3970:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3953:31:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3921:63:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3053,"nodeType":"Block","src":"4046:55:20","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3050,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"4067:21:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4067:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3035,"id":3052,"nodeType":"Return","src":"4060:30:20"}]},"id":3054,"nodeType":"IfStatement","src":"3917:184:20","trueBody":{"id":3049,"nodeType":"Block","src":"3986:54:20","statements":[{"expression":{"id":3047,"name":"_cachedDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"4007:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3035,"id":3048,"nodeType":"Return","src":"4000:29:20"}]}}]},"documentation":{"id":3031,"nodeType":"StructuredDocumentation","src":"3765:75:20","text":" @dev Returns the domain separator for the current chain."},"id":3056,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3854:18:20","nodeType":"FunctionDefinition","parameters":{"id":3032,"nodeType":"ParameterList","parameters":[],"src":"3872:2:20"},"returnParameters":{"id":3035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3056,"src":"3898:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3033,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3898:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3897:9:20"},"scope":3160,"src":"3845:262:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3076,"nodeType":"Block","src":"4177:115:20","statements":[{"expression":{"arguments":[{"arguments":[{"id":3064,"name":"TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2952,"src":"4215:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3065,"name":"_hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2960,"src":"4226:11:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3066,"name":"_hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2962,"src":"4239:14:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3067,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4255:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4261:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"4255:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3071,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4278:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3160","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3160","typeString":"contract EIP712"}],"id":3070,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4270:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3069,"name":"address","nodeType":"ElementaryTypeName","src":"4270:7:20","typeDescriptions":{}}},"id":3072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4270:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3062,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"4204:3:20","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4208:6:20","memberName":"encode","nodeType":"MemberAccess","src":"4204:10:20","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4204:80:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3061,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"4194:9:20","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3074,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4194:91:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3060,"id":3075,"nodeType":"Return","src":"4187:98:20"}]},"id":3077,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"4122:21:20","nodeType":"FunctionDefinition","parameters":{"id":3057,"nodeType":"ParameterList","parameters":[],"src":"4143:2:20"},"returnParameters":{"id":3060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3059,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3077,"src":"4168:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3058,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4168:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4167:9:20"},"scope":3160,"src":"4113:179:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3092,"nodeType":"Block","src":"5003:90:20","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":3087,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"5053:18:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5053:20:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3089,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3080,"src":"5075:10:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3085,"name":"MessageHashUtils","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"5020:16:20","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MessageHashUtils_$3234_$","typeString":"type(library MessageHashUtils)"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5037:15:20","memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":3233,"src":"5020:32:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5020:66:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3084,"id":3091,"nodeType":"Return","src":"5013:73:20"}]},"documentation":{"id":3078,"nodeType":"StructuredDocumentation","src":"4298:614:20","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":3093,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4926:16:20","nodeType":"FunctionDefinition","parameters":{"id":3081,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3080,"mutability":"mutable","name":"structHash","nameLocation":"4951:10:20","nodeType":"VariableDeclaration","scope":3093,"src":"4943:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3079,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4943:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4942:20:20"},"returnParameters":{"id":3084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3083,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3093,"src":"4994:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3082,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4994:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4993:9:20"},"scope":3160,"src":"4917:176:20","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1202],"body":{"id":3134,"nodeType":"Block","src":"5472:229:20","statements":[{"expression":{"components":[{"hexValue":"0f","id":3112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"5503:7:20","typeDescriptions":{"typeIdentifier":"t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c","typeString":"literal_string hex\"0f\""},"value":"\u000f"},{"arguments":[],"expression":{"argumentTypes":[],"id":3113,"name":"_EIP712Name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"5533:11:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5533:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"arguments":[],"expression":{"argumentTypes":[],"id":3115,"name":"_EIP712Version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3159,"src":"5560:14:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":3117,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5590:5:20","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5596:7:20","memberName":"chainid","nodeType":"MemberAccess","src":"5590:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3121,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5625:4:20","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$3160","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$3160","typeString":"contract EIP712"}],"id":3120,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5617:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3119,"name":"address","nodeType":"ElementaryTypeName","src":"5617:7:20","typeDescriptions":{}}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5617:13:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":3125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5644:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3123,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5644:7:20","typeDescriptions":{}}},"id":3126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5644:10:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"hexValue":"30","id":3130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5682:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5668:13:20","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3127,"name":"uint256","nodeType":"ElementaryTypeName","src":"5672:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3128,"nodeType":"ArrayTypeName","src":"5672:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5668:16:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"id":3132,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5489:205:20","typeDescriptions":{"typeIdentifier":"t_tuple$_t_stringliteral_3d725c5ee53025f027da36bea8d3af3b6a3e9d2d1542d47c162631de48e66c1c_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$_t_bytes32_$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"tuple(literal_string hex\"0f\",string memory,string memory,uint256,address,bytes32,uint256[] memory)"}},"functionReturnParameters":3111,"id":3133,"nodeType":"Return","src":"5482:212:20"}]},"documentation":{"id":3094,"nodeType":"StructuredDocumentation","src":"5099:40:20","text":" @dev See {IERC-5267}."},"functionSelector":"84b0196e","id":3135,"implemented":true,"kind":"function","modifiers":[],"name":"eip712Domain","nameLocation":"5153:12:20","nodeType":"FunctionDefinition","parameters":{"id":3095,"nodeType":"ParameterList","parameters":[],"src":"5165:2:20"},"returnParameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3097,"mutability":"mutable","name":"fields","nameLocation":"5249:6:20","nodeType":"VariableDeclaration","scope":3135,"src":"5242:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"typeName":{"id":3096,"name":"bytes1","nodeType":"ElementaryTypeName","src":"5242:6:20","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"visibility":"internal"},{"constant":false,"id":3099,"mutability":"mutable","name":"name","nameLocation":"5283:4:20","nodeType":"VariableDeclaration","scope":3135,"src":"5269:18:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3098,"name":"string","nodeType":"ElementaryTypeName","src":"5269:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3101,"mutability":"mutable","name":"version","nameLocation":"5315:7:20","nodeType":"VariableDeclaration","scope":3135,"src":"5301:21:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3100,"name":"string","nodeType":"ElementaryTypeName","src":"5301:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3103,"mutability":"mutable","name":"chainId","nameLocation":"5344:7:20","nodeType":"VariableDeclaration","scope":3135,"src":"5336:15:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3102,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3105,"mutability":"mutable","name":"verifyingContract","nameLocation":"5373:17:20","nodeType":"VariableDeclaration","scope":3135,"src":"5365:25:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3104,"name":"address","nodeType":"ElementaryTypeName","src":"5365:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3107,"mutability":"mutable","name":"salt","nameLocation":"5412:4:20","nodeType":"VariableDeclaration","scope":3135,"src":"5404:12:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3106,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5404:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3110,"mutability":"mutable","name":"extensions","nameLocation":"5447:10:20","nodeType":"VariableDeclaration","scope":3135,"src":"5430:27:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3108,"name":"uint256","nodeType":"ElementaryTypeName","src":"5430:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3109,"nodeType":"ArrayTypeName","src":"5430:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"5228:239:20"},"scope":3160,"src":"5144:557:20","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3146,"nodeType":"Block","src":"6082:65:20","statements":[{"expression":{"arguments":[{"id":3143,"name":"_nameFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2970,"src":"6126:13:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3141,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2965,"src":"6099:5:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"id":3142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6105:20:20","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2109,"src":"6099:26:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1930_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1930_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6099:41:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3140,"id":3145,"nodeType":"Return","src":"6092:48:20"}]},"documentation":{"id":3136,"nodeType":"StructuredDocumentation","src":"5707:256:20","text":" @dev The name parameter for the EIP712 domain.\n NOTE: By default this function reads _name which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3147,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Name","nameLocation":"6030:11:20","nodeType":"FunctionDefinition","parameters":{"id":3137,"nodeType":"ParameterList","parameters":[],"src":"6041:2:20"},"returnParameters":{"id":3140,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3139,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3147,"src":"6067:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3138,"name":"string","nodeType":"ElementaryTypeName","src":"6067:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6066:15:20"},"scope":3160,"src":"6021:126:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3158,"nodeType":"Block","src":"6537:71:20","statements":[{"expression":{"arguments":[{"id":3155,"name":"_versionFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2972,"src":"6584:16:20","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"expression":{"id":3153,"name":"_version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"6554:8:20","typeDescriptions":{"typeIdentifier":"t_userDefinedValueType$_ShortString_$1930","typeString":"ShortString"}},"id":3154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6563:20:20","memberName":"toStringWithFallback","nodeType":"MemberAccess","referencedDeclaration":2109,"src":"6554:29:20","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_userDefinedValueType$_ShortString_$1930_$_t_string_storage_ptr_$returns$_t_string_memory_ptr_$attached_to$_t_userDefinedValueType$_ShortString_$1930_$","typeString":"function (ShortString,string storage pointer) pure returns (string memory)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6554:47:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3152,"id":3157,"nodeType":"Return","src":"6547:54:20"}]},"documentation":{"id":3148,"nodeType":"StructuredDocumentation","src":"6153:262:20","text":" @dev The version parameter for the EIP712 domain.\n NOTE: By default this function reads _version which is an immutable value.\n It only reads from storage if necessary (in case the value is too large to fit in a ShortString)."},"id":3159,"implemented":true,"kind":"function","modifiers":[],"name":"_EIP712Version","nameLocation":"6482:14:20","nodeType":"FunctionDefinition","parameters":{"id":3149,"nodeType":"ParameterList","parameters":[],"src":"6496:2:20"},"returnParameters":{"id":3152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3159,"src":"6522:13:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3150,"name":"string","nodeType":"ElementaryTypeName","src":"6522:6:20","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6521:15:20"},"scope":3160,"src":"6473:135:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3161,"src":"1960:4650:20","usedErrors":[1938,1940],"usedEvents":[1183]}],"src":"113:6498:20"}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"id":21,"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol","exportedSymbols":{"MessageHashUtils":[3234],"Strings":[2585]},"id":3235,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3162,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"123:24:21"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":3164,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3235,"sourceUnit":2586,"src":"149:39:21","symbolAliases":[{"foreign":{"id":3163,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"157:7:21","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MessageHashUtils","contractDependencies":[],"contractKind":"library","documentation":{"id":3165,"nodeType":"StructuredDocumentation","src":"190:330:21","text":" @dev Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing.\n The library provides methods for generating a hash of a message that conforms to the\n https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712]\n specifications."},"fullyImplemented":true,"id":3234,"linearizedBaseContracts":[3234],"name":"MessageHashUtils","nameLocation":"529:16:21","nodeType":"ContractDefinition","nodes":[{"body":{"id":3174,"nodeType":"Block","src":"1314:341:21","statements":[{"AST":{"nativeSrc":"1349:300:21","nodeType":"YulBlock","src":"1349:300:21","statements":[{"expression":{"arguments":[{"kind":"number","nativeSrc":"1370:4:21","nodeType":"YulLiteral","src":"1370:4:21","type":"","value":"0x00"},{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","kind":"string","nativeSrc":"1376:34:21","nodeType":"YulLiteral","src":"1376:34:21","type":"","value":"\u0019Ethereum Signed Message:\n32"}],"functionName":{"name":"mstore","nativeSrc":"1363:6:21","nodeType":"YulIdentifier","src":"1363:6:21"},"nativeSrc":"1363:48:21","nodeType":"YulFunctionCall","src":"1363:48:21"},"nativeSrc":"1363:48:21","nodeType":"YulExpressionStatement","src":"1363:48:21"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"1472:4:21","nodeType":"YulLiteral","src":"1472:4:21","type":"","value":"0x1c"},{"name":"messageHash","nativeSrc":"1478:11:21","nodeType":"YulIdentifier","src":"1478:11:21"}],"functionName":{"name":"mstore","nativeSrc":"1465:6:21","nodeType":"YulIdentifier","src":"1465:6:21"},"nativeSrc":"1465:25:21","nodeType":"YulFunctionCall","src":"1465:25:21"},"nativeSrc":"1465:25:21","nodeType":"YulExpressionStatement","src":"1465:25:21"},{"nativeSrc":"1544:31:21","nodeType":"YulAssignment","src":"1544:31:21","value":{"arguments":[{"kind":"number","nativeSrc":"1564:4:21","nodeType":"YulLiteral","src":"1564:4:21","type":"","value":"0x00"},{"kind":"number","nativeSrc":"1570:4:21","nodeType":"YulLiteral","src":"1570:4:21","type":"","value":"0x3c"}],"functionName":{"name":"keccak256","nativeSrc":"1554:9:21","nodeType":"YulIdentifier","src":"1554:9:21"},"nativeSrc":"1554:21:21","nodeType":"YulFunctionCall","src":"1554:21:21"},"variableNames":[{"name":"digest","nativeSrc":"1544:6:21","nodeType":"YulIdentifier","src":"1544:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3171,"isOffset":false,"isSlot":false,"src":"1544:6:21","valueSize":1},{"declaration":3168,"isOffset":false,"isSlot":false,"src":"1478:11:21","valueSize":1}],"flags":["memory-safe"],"id":3173,"nodeType":"InlineAssembly","src":"1324:325:21"}]},"documentation":{"id":3166,"nodeType":"StructuredDocumentation","src":"552:665:21","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing a bytes32 `messageHash` with\n `\"\\x19Ethereum Signed Message:\\n32\"` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n NOTE: The `messageHash` parameter is intended to be the result of hashing a raw message with\n keccak256, although any bytes32 value can be safely used because the final digest will\n be re-hashed.\n See {ECDSA-recover}."},"id":3175,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"1231:22:21","nodeType":"FunctionDefinition","parameters":{"id":3169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3168,"mutability":"mutable","name":"messageHash","nameLocation":"1262:11:21","nodeType":"VariableDeclaration","scope":3175,"src":"1254:19:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1254:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1253:21:21"},"returnParameters":{"id":3172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3171,"mutability":"mutable","name":"digest","nameLocation":"1306:6:21","nodeType":"VariableDeclaration","scope":3175,"src":"1298:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3170,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1298:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1297:16:21"},"scope":3234,"src":"1222:433:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3200,"nodeType":"Block","src":"2207:143:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":3187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2259:32:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"arguments":[{"expression":{"id":3192,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"2316:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2324:6:21","memberName":"length","nodeType":"MemberAccess","src":"2316:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3190,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"2299:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2585_$","typeString":"type(library Strings)"}},"id":3191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2307:8:21","memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":2333,"src":"2299:16:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2299:32:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3189,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2293:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3188,"name":"bytes","nodeType":"ElementaryTypeName","src":"2293:5:21","typeDescriptions":{}}},"id":3195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2293:39:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3196,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3178,"src":"2334:7:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2246:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3184,"name":"bytes","nodeType":"ElementaryTypeName","src":"2246:5:21","typeDescriptions":{}}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2252:6:21","memberName":"concat","nodeType":"MemberAccess","src":"2246:12:21","typeDescriptions":{"typeIdentifier":"t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2246:96:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3183,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2236:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2236:107:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3182,"id":3199,"nodeType":"Return","src":"2217:126:21"}]},"documentation":{"id":3176,"nodeType":"StructuredDocumentation","src":"1661:455:21","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x45` (`personal_sign` messages).\n The digest is calculated by prefixing an arbitrary `message` with\n `\"\\x19Ethereum Signed Message:\\n\" + len(message)` and hashing the result. It corresponds with the\n hash signed when using the https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`] JSON-RPC method.\n See {ECDSA-recover}."},"id":3201,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"2130:22:21","nodeType":"FunctionDefinition","parameters":{"id":3179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3178,"mutability":"mutable","name":"message","nameLocation":"2166:7:21","nodeType":"VariableDeclaration","scope":3201,"src":"2153:20:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3177,"name":"bytes","nodeType":"ElementaryTypeName","src":"2153:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2152:22:21"},"returnParameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3201,"src":"2198:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3180,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2198:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2197:9:21"},"scope":3234,"src":"2121:229:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3220,"nodeType":"Block","src":"2804:80:21","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1900","id":3214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"2848:10:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},"value":"\u0019\u0000"},{"id":3215,"name":"validator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3204,"src":"2860:9:21","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3216,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3206,"src":"2871:4:21","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_73fd5d154550a4a103564cb191928cd38898034de1b952dc21b290898b4b697a","typeString":"literal_string hex\"1900\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3212,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2831:3:21","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3213,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2835:12:21","memberName":"encodePacked","nodeType":"MemberAccess","src":"2831:16:21","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2831:45:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3211,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2821:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2821:56:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3210,"id":3219,"nodeType":"Return","src":"2814:63:21"}]},"documentation":{"id":3202,"nodeType":"StructuredDocumentation","src":"2356:332:21","text":" @dev Returns the keccak256 digest of an ERC-191 signed data with version\n `0x00` (data with intended validator).\n The digest is calculated by prefixing an arbitrary `data` with `\"\\x19\\x00\"` and the intended\n `validator` address. Then hashing the result.\n See {ECDSA-recover}."},"id":3221,"implemented":true,"kind":"function","modifiers":[],"name":"toDataWithIntendedValidatorHash","nameLocation":"2702:31:21","nodeType":"FunctionDefinition","parameters":{"id":3207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3204,"mutability":"mutable","name":"validator","nameLocation":"2742:9:21","nodeType":"VariableDeclaration","scope":3221,"src":"2734:17:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3203,"name":"address","nodeType":"ElementaryTypeName","src":"2734:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3206,"mutability":"mutable","name":"data","nameLocation":"2766:4:21","nodeType":"VariableDeclaration","scope":3221,"src":"2753:17:21","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3205,"name":"bytes","nodeType":"ElementaryTypeName","src":"2753:5:21","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2733:38:21"},"returnParameters":{"id":3210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3221,"src":"2795:7:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3208,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2795:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:9:21"},"scope":3234,"src":"2693:191:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3232,"nodeType":"Block","src":"3435:265:21","statements":[{"AST":{"nativeSrc":"3470:224:21","nodeType":"YulBlock","src":"3470:224:21","statements":[{"nativeSrc":"3484:22:21","nodeType":"YulVariableDeclaration","src":"3484:22:21","value":{"arguments":[{"kind":"number","nativeSrc":"3501:4:21","nodeType":"YulLiteral","src":"3501:4:21","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"3495:5:21","nodeType":"YulIdentifier","src":"3495:5:21"},"nativeSrc":"3495:11:21","nodeType":"YulFunctionCall","src":"3495:11:21"},"variables":[{"name":"ptr","nativeSrc":"3488:3:21","nodeType":"YulTypedName","src":"3488:3:21","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"3526:3:21","nodeType":"YulIdentifier","src":"3526:3:21"},{"hexValue":"1901","kind":"string","nativeSrc":"3531:10:21","nodeType":"YulLiteral","src":"3531:10:21","type":"","value":"\u0019\u0001"}],"functionName":{"name":"mstore","nativeSrc":"3519:6:21","nodeType":"YulIdentifier","src":"3519:6:21"},"nativeSrc":"3519:23:21","nodeType":"YulFunctionCall","src":"3519:23:21"},"nativeSrc":"3519:23:21","nodeType":"YulExpressionStatement","src":"3519:23:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3566:3:21","nodeType":"YulIdentifier","src":"3566:3:21"},{"kind":"number","nativeSrc":"3571:4:21","nodeType":"YulLiteral","src":"3571:4:21","type":"","value":"0x02"}],"functionName":{"name":"add","nativeSrc":"3562:3:21","nodeType":"YulIdentifier","src":"3562:3:21"},"nativeSrc":"3562:14:21","nodeType":"YulFunctionCall","src":"3562:14:21"},{"name":"domainSeparator","nativeSrc":"3578:15:21","nodeType":"YulIdentifier","src":"3578:15:21"}],"functionName":{"name":"mstore","nativeSrc":"3555:6:21","nodeType":"YulIdentifier","src":"3555:6:21"},"nativeSrc":"3555:39:21","nodeType":"YulFunctionCall","src":"3555:39:21"},"nativeSrc":"3555:39:21","nodeType":"YulExpressionStatement","src":"3555:39:21"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"3618:3:21","nodeType":"YulIdentifier","src":"3618:3:21"},{"kind":"number","nativeSrc":"3623:4:21","nodeType":"YulLiteral","src":"3623:4:21","type":"","value":"0x22"}],"functionName":{"name":"add","nativeSrc":"3614:3:21","nodeType":"YulIdentifier","src":"3614:3:21"},"nativeSrc":"3614:14:21","nodeType":"YulFunctionCall","src":"3614:14:21"},{"name":"structHash","nativeSrc":"3630:10:21","nodeType":"YulIdentifier","src":"3630:10:21"}],"functionName":{"name":"mstore","nativeSrc":"3607:6:21","nodeType":"YulIdentifier","src":"3607:6:21"},"nativeSrc":"3607:34:21","nodeType":"YulFunctionCall","src":"3607:34:21"},"nativeSrc":"3607:34:21","nodeType":"YulExpressionStatement","src":"3607:34:21"},{"nativeSrc":"3654:30:21","nodeType":"YulAssignment","src":"3654:30:21","value":{"arguments":[{"name":"ptr","nativeSrc":"3674:3:21","nodeType":"YulIdentifier","src":"3674:3:21"},{"kind":"number","nativeSrc":"3679:4:21","nodeType":"YulLiteral","src":"3679:4:21","type":"","value":"0x42"}],"functionName":{"name":"keccak256","nativeSrc":"3664:9:21","nodeType":"YulIdentifier","src":"3664:9:21"},"nativeSrc":"3664:20:21","nodeType":"YulFunctionCall","src":"3664:20:21"},"variableNames":[{"name":"digest","nativeSrc":"3654:6:21","nodeType":"YulIdentifier","src":"3654:6:21"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3229,"isOffset":false,"isSlot":false,"src":"3654:6:21","valueSize":1},{"declaration":3224,"isOffset":false,"isSlot":false,"src":"3578:15:21","valueSize":1},{"declaration":3226,"isOffset":false,"isSlot":false,"src":"3630:10:21","valueSize":1}],"flags":["memory-safe"],"id":3231,"nodeType":"InlineAssembly","src":"3445:249:21"}]},"documentation":{"id":3222,"nodeType":"StructuredDocumentation","src":"2890:431:21","text":" @dev Returns the keccak256 digest of an EIP-712 typed data (ERC-191 version `0x01`).\n The digest is calculated from a `domainSeparator` and a `structHash`, by prefixing them with\n `\\x19\\x01` and hashing the result. It corresponds to the hash signed by the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`] JSON-RPC method as part of EIP-712.\n See {ECDSA-recover}."},"id":3233,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"3335:15:21","nodeType":"FunctionDefinition","parameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"domainSeparator","nameLocation":"3359:15:21","nodeType":"VariableDeclaration","scope":3233,"src":"3351:23:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3223,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3351:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3226,"mutability":"mutable","name":"structHash","nameLocation":"3384:10:21","nodeType":"VariableDeclaration","scope":3233,"src":"3376:18:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3376:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3350:45:21"},"returnParameters":{"id":3230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3229,"mutability":"mutable","name":"digest","nameLocation":"3427:6:21","nodeType":"VariableDeclaration","scope":3233,"src":"3419:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3419:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3418:16:21"},"scope":3234,"src":"3326:374:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":3235,"src":"521:3181:21","usedErrors":[],"usedEvents":[]}],"src":"123:3580:21"}},"@openzeppelin/contracts/utils/math/Math.sol":{"id":22,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[4840],"Panic":[1924],"SafeCast":[6605]},"id":4841,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3236,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"103:24:22"},{"absolutePath":"@openzeppelin/contracts/utils/Panic.sol","file":"../Panic.sol","id":3238,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4841,"sourceUnit":1925,"src":"129:35:22","symbolAliases":[{"foreign":{"id":3237,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"137:5:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":3240,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4841,"sourceUnit":6606,"src":"165:40:22","symbolAliases":[{"foreign":{"id":3239,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"173:8:22","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":3241,"nodeType":"StructuredDocumentation","src":"207:73:22","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":4840,"linearizedBaseContracts":[4840],"name":"Math","nameLocation":"289:4:22","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":3246,"members":[{"id":3242,"name":"Floor","nameLocation":"324:5:22","nodeType":"EnumValue","src":"324:5:22"},{"id":3243,"name":"Ceil","nameLocation":"367:4:22","nodeType":"EnumValue","src":"367:4:22"},{"id":3244,"name":"Trunc","nameLocation":"409:5:22","nodeType":"EnumValue","src":"409:5:22"},{"id":3245,"name":"Expand","nameLocation":"439:6:22","nodeType":"EnumValue","src":"439:6:22"}],"name":"Rounding","nameLocation":"305:8:22","nodeType":"EnumDefinition","src":"300:169:22"},{"body":{"id":3277,"nodeType":"Block","src":"677:140:22","statements":[{"id":3276,"nodeType":"UncheckedBlock","src":"687:124:22","statements":[{"assignments":[3259],"declarations":[{"constant":false,"id":3259,"mutability":"mutable","name":"c","nameLocation":"719:1:22","nodeType":"VariableDeclaration","scope":3276,"src":"711:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3258,"name":"uint256","nodeType":"ElementaryTypeName","src":"711:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3263,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3260,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"723:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":3261,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3251,"src":"727:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"723:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"711:17:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3264,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"746:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3265,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3249,"src":"750:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"746:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3271,"nodeType":"IfStatement","src":"742:28:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"761:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"768:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3269,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"760:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3257,"id":3270,"nodeType":"Return","src":"753:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":3272,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"792:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3273,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"798:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3274,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"791:9:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3257,"id":3275,"nodeType":"Return","src":"784:16:22"}]}]},"documentation":{"id":3247,"nodeType":"StructuredDocumentation","src":"475:106:22","text":" @dev Returns the addition of two unsigned integers, with an success flag (no overflow)."},"id":3278,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"595:6:22","nodeType":"FunctionDefinition","parameters":{"id":3252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3249,"mutability":"mutable","name":"a","nameLocation":"610:1:22","nodeType":"VariableDeclaration","scope":3278,"src":"602:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3248,"name":"uint256","nodeType":"ElementaryTypeName","src":"602:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3251,"mutability":"mutable","name":"b","nameLocation":"621:1:22","nodeType":"VariableDeclaration","scope":3278,"src":"613:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3250,"name":"uint256","nodeType":"ElementaryTypeName","src":"613:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"601:22:22"},"returnParameters":{"id":3257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3254,"mutability":"mutable","name":"success","nameLocation":"652:7:22","nodeType":"VariableDeclaration","scope":3278,"src":"647:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3253,"name":"bool","nodeType":"ElementaryTypeName","src":"647:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3256,"mutability":"mutable","name":"result","nameLocation":"669:6:22","nodeType":"VariableDeclaration","scope":3278,"src":"661:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3255,"name":"uint256","nodeType":"ElementaryTypeName","src":"661:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"646:30:22"},"scope":4840,"src":"586:231:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3305,"nodeType":"Block","src":"1028:113:22","statements":[{"id":3304,"nodeType":"UncheckedBlock","src":"1038:97:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3290,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"1066:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3291,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"1070:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1066:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3297,"nodeType":"IfStatement","src":"1062:28:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1081:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1088:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3295,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1080:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3289,"id":3296,"nodeType":"Return","src":"1073:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":3298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1112:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3299,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"1118:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3300,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3283,"src":"1122:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1118:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3302,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1111:13:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3289,"id":3303,"nodeType":"Return","src":"1104:20:22"}]}]},"documentation":{"id":3279,"nodeType":"StructuredDocumentation","src":"823:109:22","text":" @dev Returns the subtraction of two unsigned integers, with an success flag (no overflow)."},"id":3306,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"946:6:22","nodeType":"FunctionDefinition","parameters":{"id":3284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3281,"mutability":"mutable","name":"a","nameLocation":"961:1:22","nodeType":"VariableDeclaration","scope":3306,"src":"953:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3280,"name":"uint256","nodeType":"ElementaryTypeName","src":"953:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3283,"mutability":"mutable","name":"b","nameLocation":"972:1:22","nodeType":"VariableDeclaration","scope":3306,"src":"964:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3282,"name":"uint256","nodeType":"ElementaryTypeName","src":"964:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"952:22:22"},"returnParameters":{"id":3289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3286,"mutability":"mutable","name":"success","nameLocation":"1003:7:22","nodeType":"VariableDeclaration","scope":3306,"src":"998:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3285,"name":"bool","nodeType":"ElementaryTypeName","src":"998:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3288,"mutability":"mutable","name":"result","nameLocation":"1020:6:22","nodeType":"VariableDeclaration","scope":3306,"src":"1012:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3287,"name":"uint256","nodeType":"ElementaryTypeName","src":"1012:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"997:30:22"},"scope":4840,"src":"937:204:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3347,"nodeType":"Block","src":"1355:417:22","statements":[{"id":3346,"nodeType":"UncheckedBlock","src":"1365:401:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3318,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"1623:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1628:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1623:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3325,"nodeType":"IfStatement","src":"1619:28:22","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":3321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1639:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":3322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3323,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1638:9:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3317,"id":3324,"nodeType":"Return","src":"1631:16:22"}},{"assignments":[3327],"declarations":[{"constant":false,"id":3327,"mutability":"mutable","name":"c","nameLocation":"1669:1:22","nodeType":"VariableDeclaration","scope":3346,"src":"1661:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3326,"name":"uint256","nodeType":"ElementaryTypeName","src":"1661:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3331,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3328,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"1673:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3329,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"1677:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1673:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1661:17:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3332,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"1696:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3333,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3309,"src":"1700:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3335,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3311,"src":"1705:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1696:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3341,"nodeType":"IfStatement","src":"1692:33:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1716:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1723:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1715:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3317,"id":3340,"nodeType":"Return","src":"1708:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":3342,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1747:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":3343,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3327,"src":"1753:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3344,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1746:9:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3317,"id":3345,"nodeType":"Return","src":"1739:16:22"}]}]},"documentation":{"id":3307,"nodeType":"StructuredDocumentation","src":"1147:112:22","text":" @dev Returns the multiplication of two unsigned integers, with an success flag (no overflow)."},"id":3348,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1273:6:22","nodeType":"FunctionDefinition","parameters":{"id":3312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3309,"mutability":"mutable","name":"a","nameLocation":"1288:1:22","nodeType":"VariableDeclaration","scope":3348,"src":"1280:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3308,"name":"uint256","nodeType":"ElementaryTypeName","src":"1280:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3311,"mutability":"mutable","name":"b","nameLocation":"1299:1:22","nodeType":"VariableDeclaration","scope":3348,"src":"1291:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3310,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1279:22:22"},"returnParameters":{"id":3317,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3314,"mutability":"mutable","name":"success","nameLocation":"1330:7:22","nodeType":"VariableDeclaration","scope":3348,"src":"1325:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3313,"name":"bool","nodeType":"ElementaryTypeName","src":"1325:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3316,"mutability":"mutable","name":"result","nameLocation":"1347:6:22","nodeType":"VariableDeclaration","scope":3348,"src":"1339:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3315,"name":"uint256","nodeType":"ElementaryTypeName","src":"1339:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1324:30:22"},"scope":4840,"src":"1264:508:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3375,"nodeType":"Block","src":"1987:114:22","statements":[{"id":3374,"nodeType":"UncheckedBlock","src":"1997:98:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3360,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"2025:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2030:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2025:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3367,"nodeType":"IfStatement","src":"2021:29:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2041:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2040:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3359,"id":3366,"nodeType":"Return","src":"2033:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":3368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2072:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3371,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3369,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"2078:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3370,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3353,"src":"2082:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2078:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2071:13:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3359,"id":3373,"nodeType":"Return","src":"2064:20:22"}]}]},"documentation":{"id":3349,"nodeType":"StructuredDocumentation","src":"1778:113:22","text":" @dev Returns the division of two unsigned integers, with a success flag (no division by zero)."},"id":3376,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1905:6:22","nodeType":"FunctionDefinition","parameters":{"id":3354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"a","nameLocation":"1920:1:22","nodeType":"VariableDeclaration","scope":3376,"src":"1912:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"1912:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3353,"mutability":"mutable","name":"b","nameLocation":"1931:1:22","nodeType":"VariableDeclaration","scope":3376,"src":"1923:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3352,"name":"uint256","nodeType":"ElementaryTypeName","src":"1923:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1911:22:22"},"returnParameters":{"id":3359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3356,"mutability":"mutable","name":"success","nameLocation":"1962:7:22","nodeType":"VariableDeclaration","scope":3376,"src":"1957:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3355,"name":"bool","nodeType":"ElementaryTypeName","src":"1957:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3358,"mutability":"mutable","name":"result","nameLocation":"1979:6:22","nodeType":"VariableDeclaration","scope":3376,"src":"1971:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1971:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1956:30:22"},"scope":4840,"src":"1896:205:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3403,"nodeType":"Block","src":"2326:114:22","statements":[{"id":3402,"nodeType":"UncheckedBlock","src":"2336:98:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3388,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"2364:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2369:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2364:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3395,"nodeType":"IfStatement","src":"2360:29:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2380:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3392,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2387:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3393,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2379:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3387,"id":3394,"nodeType":"Return","src":"2372:17:22"}},{"expression":{"components":[{"hexValue":"74727565","id":3396,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2411:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3397,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"2417:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3398,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3381,"src":"2421:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3400,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2410:13:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3387,"id":3401,"nodeType":"Return","src":"2403:20:22"}]}]},"documentation":{"id":3377,"nodeType":"StructuredDocumentation","src":"2107:123:22","text":" @dev Returns the remainder of dividing two unsigned integers, with a success flag (no division by zero)."},"id":3404,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2244:6:22","nodeType":"FunctionDefinition","parameters":{"id":3382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3379,"mutability":"mutable","name":"a","nameLocation":"2259:1:22","nodeType":"VariableDeclaration","scope":3404,"src":"2251:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint256","nodeType":"ElementaryTypeName","src":"2251:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3381,"mutability":"mutable","name":"b","nameLocation":"2270:1:22","nodeType":"VariableDeclaration","scope":3404,"src":"2262:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3380,"name":"uint256","nodeType":"ElementaryTypeName","src":"2262:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2250:22:22"},"returnParameters":{"id":3387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3384,"mutability":"mutable","name":"success","nameLocation":"2301:7:22","nodeType":"VariableDeclaration","scope":3404,"src":"2296:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3383,"name":"bool","nodeType":"ElementaryTypeName","src":"2296:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3386,"mutability":"mutable","name":"result","nameLocation":"2318:6:22","nodeType":"VariableDeclaration","scope":3404,"src":"2310:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3385,"name":"uint256","nodeType":"ElementaryTypeName","src":"2310:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2295:30:22"},"scope":4840,"src":"2235:205:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3430,"nodeType":"Block","src":"2912:207:22","statements":[{"id":3429,"nodeType":"UncheckedBlock","src":"2922:191:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3427,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3416,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"3060:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3417,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"3066:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3418,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3411,"src":"3070:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3066:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3423,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"3091:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3421,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"3075:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3084:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"3075:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3075:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3065:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3426,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3064:38:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3060:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3415,"id":3428,"nodeType":"Return","src":"3053:49:22"}]}]},"documentation":{"id":3405,"nodeType":"StructuredDocumentation","src":"2446:374:22","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":3431,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"2834:7:22","nodeType":"FunctionDefinition","parameters":{"id":3412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3407,"mutability":"mutable","name":"condition","nameLocation":"2847:9:22","nodeType":"VariableDeclaration","scope":3431,"src":"2842:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3406,"name":"bool","nodeType":"ElementaryTypeName","src":"2842:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3409,"mutability":"mutable","name":"a","nameLocation":"2866:1:22","nodeType":"VariableDeclaration","scope":3431,"src":"2858:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3408,"name":"uint256","nodeType":"ElementaryTypeName","src":"2858:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3411,"mutability":"mutable","name":"b","nameLocation":"2877:1:22","nodeType":"VariableDeclaration","scope":3431,"src":"2869:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3410,"name":"uint256","nodeType":"ElementaryTypeName","src":"2869:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2841:38:22"},"returnParameters":{"id":3415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3414,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3431,"src":"2903:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3413,"name":"uint256","nodeType":"ElementaryTypeName","src":"2903:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2902:9:22"},"scope":4840,"src":"2825:294:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3449,"nodeType":"Block","src":"3256:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3442,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"3281:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":3443,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"3285:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3281:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3445,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3434,"src":"3288:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3446,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3436,"src":"3291:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3441,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"3273:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3273:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3440,"id":3448,"nodeType":"Return","src":"3266:27:22"}]},"documentation":{"id":3432,"nodeType":"StructuredDocumentation","src":"3125:59:22","text":" @dev Returns the largest of two numbers."},"id":3450,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"3198:3:22","nodeType":"FunctionDefinition","parameters":{"id":3437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3434,"mutability":"mutable","name":"a","nameLocation":"3210:1:22","nodeType":"VariableDeclaration","scope":3450,"src":"3202:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3433,"name":"uint256","nodeType":"ElementaryTypeName","src":"3202:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3436,"mutability":"mutable","name":"b","nameLocation":"3221:1:22","nodeType":"VariableDeclaration","scope":3450,"src":"3213:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3435,"name":"uint256","nodeType":"ElementaryTypeName","src":"3213:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3201:22:22"},"returnParameters":{"id":3440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3450,"src":"3247:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3438,"name":"uint256","nodeType":"ElementaryTypeName","src":"3247:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3246:9:22"},"scope":4840,"src":"3189:111:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3468,"nodeType":"Block","src":"3438:44:22","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3461,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"3463:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3462,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"3467:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3463:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":3464,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3453,"src":"3470:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3465,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3455,"src":"3473:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3460,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"3455:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3455:20:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3459,"id":3467,"nodeType":"Return","src":"3448:27:22"}]},"documentation":{"id":3451,"nodeType":"StructuredDocumentation","src":"3306:60:22","text":" @dev Returns the smallest of two numbers."},"id":3469,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"3380:3:22","nodeType":"FunctionDefinition","parameters":{"id":3456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3453,"mutability":"mutable","name":"a","nameLocation":"3392:1:22","nodeType":"VariableDeclaration","scope":3469,"src":"3384:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3452,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3455,"mutability":"mutable","name":"b","nameLocation":"3403:1:22","nodeType":"VariableDeclaration","scope":3469,"src":"3395:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3454,"name":"uint256","nodeType":"ElementaryTypeName","src":"3395:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3383:22:22"},"returnParameters":{"id":3459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3469,"src":"3429:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3457,"name":"uint256","nodeType":"ElementaryTypeName","src":"3429:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3428:9:22"},"scope":4840,"src":"3371:111:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3491,"nodeType":"Block","src":"3666:82:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3479,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"3721:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":3480,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"3725:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3721:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3720:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3483,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3472,"src":"3731:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":3484,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3474,"src":"3735:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3731:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3486,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3730:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":3487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3740:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3730:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3720:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3478,"id":3490,"nodeType":"Return","src":"3713:28:22"}]},"documentation":{"id":3470,"nodeType":"StructuredDocumentation","src":"3488:102:22","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":3492,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"3604:7:22","nodeType":"FunctionDefinition","parameters":{"id":3475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3472,"mutability":"mutable","name":"a","nameLocation":"3620:1:22","nodeType":"VariableDeclaration","scope":3492,"src":"3612:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3471,"name":"uint256","nodeType":"ElementaryTypeName","src":"3612:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3474,"mutability":"mutable","name":"b","nameLocation":"3631:1:22","nodeType":"VariableDeclaration","scope":3492,"src":"3623:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3473,"name":"uint256","nodeType":"ElementaryTypeName","src":"3623:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3611:22:22"},"returnParameters":{"id":3478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3477,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3492,"src":"3657:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3476,"name":"uint256","nodeType":"ElementaryTypeName","src":"3657:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3656:9:22"},"scope":4840,"src":"3595:153:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3532,"nodeType":"Block","src":"4040:633:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3502,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"4054:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4059:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4054:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3513,"nodeType":"IfStatement","src":"4050:150:22","trueBody":{"id":3512,"nodeType":"Block","src":"4062:138:22","statements":[{"expression":{"arguments":[{"expression":{"id":3508,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"4166:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1924_$","typeString":"type(library Panic)"}},"id":3509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4172:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1891,"src":"4166:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3505,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"4154:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1924_$","typeString":"type(library Panic)"}},"id":3507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4160:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1923,"src":"4154:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4154:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3511,"nodeType":"ExpressionStatement","src":"4154:35:22"}]}},{"id":3531,"nodeType":"UncheckedBlock","src":"4583:84:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3516,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"4630:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3517,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4634:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4630:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3514,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"4614:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4623:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"4614:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4614:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3520,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3495,"src":"4641:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3521,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4645:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4641:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3523,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4640:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3524,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3497,"src":"4650:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4640:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":3526,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4654:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4640:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3528,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4639:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4614:42:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3501,"id":3530,"nodeType":"Return","src":"4607:49:22"}]}]},"documentation":{"id":3493,"nodeType":"StructuredDocumentation","src":"3754:210:22","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."},"id":3533,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"3978:7:22","nodeType":"FunctionDefinition","parameters":{"id":3498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3495,"mutability":"mutable","name":"a","nameLocation":"3994:1:22","nodeType":"VariableDeclaration","scope":3533,"src":"3986:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3494,"name":"uint256","nodeType":"ElementaryTypeName","src":"3986:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3497,"mutability":"mutable","name":"b","nameLocation":"4005:1:22","nodeType":"VariableDeclaration","scope":3533,"src":"3997:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3496,"name":"uint256","nodeType":"ElementaryTypeName","src":"3997:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3985:22:22"},"returnParameters":{"id":3501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3533,"src":"4031:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3499,"name":"uint256","nodeType":"ElementaryTypeName","src":"4031:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4030:9:22"},"scope":4840,"src":"3969:704:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3669,"nodeType":"Block","src":"5094:4128:22","statements":[{"id":3668,"nodeType":"UncheckedBlock","src":"5104:4112:22","statements":[{"assignments":[3546],"declarations":[{"constant":false,"id":3546,"mutability":"mutable","name":"prod0","nameLocation":"5441:5:22","nodeType":"VariableDeclaration","scope":3668,"src":"5433:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3545,"name":"uint256","nodeType":"ElementaryTypeName","src":"5433:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3550,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3547,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3536,"src":"5449:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3548,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"5453:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5449:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5433:21:22"},{"assignments":[3552],"declarations":[{"constant":false,"id":3552,"mutability":"mutable","name":"prod1","nameLocation":"5521:5:22","nodeType":"VariableDeclaration","scope":3668,"src":"5513:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3551,"name":"uint256","nodeType":"ElementaryTypeName","src":"5513:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3553,"nodeType":"VariableDeclarationStatement","src":"5513:13:22"},{"AST":{"nativeSrc":"5593:122:22","nodeType":"YulBlock","src":"5593:122:22","statements":[{"nativeSrc":"5611:30:22","nodeType":"YulVariableDeclaration","src":"5611:30:22","value":{"arguments":[{"name":"x","nativeSrc":"5628:1:22","nodeType":"YulIdentifier","src":"5628:1:22"},{"name":"y","nativeSrc":"5631:1:22","nodeType":"YulIdentifier","src":"5631:1:22"},{"arguments":[{"kind":"number","nativeSrc":"5638:1:22","nodeType":"YulLiteral","src":"5638:1:22","type":"","value":"0"}],"functionName":{"name":"not","nativeSrc":"5634:3:22","nodeType":"YulIdentifier","src":"5634:3:22"},"nativeSrc":"5634:6:22","nodeType":"YulFunctionCall","src":"5634:6:22"}],"functionName":{"name":"mulmod","nativeSrc":"5621:6:22","nodeType":"YulIdentifier","src":"5621:6:22"},"nativeSrc":"5621:20:22","nodeType":"YulFunctionCall","src":"5621:20:22"},"variables":[{"name":"mm","nativeSrc":"5615:2:22","nodeType":"YulTypedName","src":"5615:2:22","type":""}]},{"nativeSrc":"5658:43:22","nodeType":"YulAssignment","src":"5658:43:22","value":{"arguments":[{"arguments":[{"name":"mm","nativeSrc":"5675:2:22","nodeType":"YulIdentifier","src":"5675:2:22"},{"name":"prod0","nativeSrc":"5679:5:22","nodeType":"YulIdentifier","src":"5679:5:22"}],"functionName":{"name":"sub","nativeSrc":"5671:3:22","nodeType":"YulIdentifier","src":"5671:3:22"},"nativeSrc":"5671:14:22","nodeType":"YulFunctionCall","src":"5671:14:22"},{"arguments":[{"name":"mm","nativeSrc":"5690:2:22","nodeType":"YulIdentifier","src":"5690:2:22"},{"name":"prod0","nativeSrc":"5694:5:22","nodeType":"YulIdentifier","src":"5694:5:22"}],"functionName":{"name":"lt","nativeSrc":"5687:2:22","nodeType":"YulIdentifier","src":"5687:2:22"},"nativeSrc":"5687:13:22","nodeType":"YulFunctionCall","src":"5687:13:22"}],"functionName":{"name":"sub","nativeSrc":"5667:3:22","nodeType":"YulIdentifier","src":"5667:3:22"},"nativeSrc":"5667:34:22","nodeType":"YulFunctionCall","src":"5667:34:22"},"variableNames":[{"name":"prod1","nativeSrc":"5658:5:22","nodeType":"YulIdentifier","src":"5658:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3546,"isOffset":false,"isSlot":false,"src":"5679:5:22","valueSize":1},{"declaration":3546,"isOffset":false,"isSlot":false,"src":"5694:5:22","valueSize":1},{"declaration":3552,"isOffset":false,"isSlot":false,"src":"5658:5:22","valueSize":1},{"declaration":3536,"isOffset":false,"isSlot":false,"src":"5628:1:22","valueSize":1},{"declaration":3538,"isOffset":false,"isSlot":false,"src":"5631:1:22","valueSize":1}],"id":3554,"nodeType":"InlineAssembly","src":"5584:131:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3555,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"5796:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3556,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5805:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5796:10:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3563,"nodeType":"IfStatement","src":"5792:368:22","trueBody":{"id":3562,"nodeType":"Block","src":"5808:352:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3558,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"6126:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3559,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"6134:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6126:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3544,"id":3561,"nodeType":"Return","src":"6119:26:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3566,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3564,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"6270:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":3565,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"6285:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6270:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3582,"nodeType":"IfStatement","src":"6266:143:22","trueBody":{"id":3581,"nodeType":"Block","src":"6292:117:22","statements":[{"expression":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3571,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"6330:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6345:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6330:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":3574,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"6348:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1924_$","typeString":"type(library Panic)"}},"id":3575,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6354:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1891,"src":"6348:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3576,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"6372:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1924_$","typeString":"type(library Panic)"}},"id":3577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6378:14:22","memberName":"UNDER_OVERFLOW","nodeType":"MemberAccess","referencedDeclaration":1887,"src":"6372:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3570,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"6322:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6322:71:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3567,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"6310:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1924_$","typeString":"type(library Panic)"}},"id":3569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6316:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1923,"src":"6310:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6310:84:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3580,"nodeType":"ExpressionStatement","src":"6310:84:22"}]}},{"assignments":[3584],"declarations":[{"constant":false,"id":3584,"mutability":"mutable","name":"remainder","nameLocation":"6672:9:22","nodeType":"VariableDeclaration","scope":3668,"src":"6664:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3583,"name":"uint256","nodeType":"ElementaryTypeName","src":"6664:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3585,"nodeType":"VariableDeclarationStatement","src":"6664:17:22"},{"AST":{"nativeSrc":"6704:291:22","nodeType":"YulBlock","src":"6704:291:22","statements":[{"nativeSrc":"6773:38:22","nodeType":"YulAssignment","src":"6773:38:22","value":{"arguments":[{"name":"x","nativeSrc":"6793:1:22","nodeType":"YulIdentifier","src":"6793:1:22"},{"name":"y","nativeSrc":"6796:1:22","nodeType":"YulIdentifier","src":"6796:1:22"},{"name":"denominator","nativeSrc":"6799:11:22","nodeType":"YulIdentifier","src":"6799:11:22"}],"functionName":{"name":"mulmod","nativeSrc":"6786:6:22","nodeType":"YulIdentifier","src":"6786:6:22"},"nativeSrc":"6786:25:22","nodeType":"YulFunctionCall","src":"6786:25:22"},"variableNames":[{"name":"remainder","nativeSrc":"6773:9:22","nodeType":"YulIdentifier","src":"6773:9:22"}]},{"nativeSrc":"6893:41:22","nodeType":"YulAssignment","src":"6893:41:22","value":{"arguments":[{"name":"prod1","nativeSrc":"6906:5:22","nodeType":"YulIdentifier","src":"6906:5:22"},{"arguments":[{"name":"remainder","nativeSrc":"6916:9:22","nodeType":"YulIdentifier","src":"6916:9:22"},{"name":"prod0","nativeSrc":"6927:5:22","nodeType":"YulIdentifier","src":"6927:5:22"}],"functionName":{"name":"gt","nativeSrc":"6913:2:22","nodeType":"YulIdentifier","src":"6913:2:22"},"nativeSrc":"6913:20:22","nodeType":"YulFunctionCall","src":"6913:20:22"}],"functionName":{"name":"sub","nativeSrc":"6902:3:22","nodeType":"YulIdentifier","src":"6902:3:22"},"nativeSrc":"6902:32:22","nodeType":"YulFunctionCall","src":"6902:32:22"},"variableNames":[{"name":"prod1","nativeSrc":"6893:5:22","nodeType":"YulIdentifier","src":"6893:5:22"}]},{"nativeSrc":"6951:30:22","nodeType":"YulAssignment","src":"6951:30:22","value":{"arguments":[{"name":"prod0","nativeSrc":"6964:5:22","nodeType":"YulIdentifier","src":"6964:5:22"},{"name":"remainder","nativeSrc":"6971:9:22","nodeType":"YulIdentifier","src":"6971:9:22"}],"functionName":{"name":"sub","nativeSrc":"6960:3:22","nodeType":"YulIdentifier","src":"6960:3:22"},"nativeSrc":"6960:21:22","nodeType":"YulFunctionCall","src":"6960:21:22"},"variableNames":[{"name":"prod0","nativeSrc":"6951:5:22","nodeType":"YulIdentifier","src":"6951:5:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3540,"isOffset":false,"isSlot":false,"src":"6799:11:22","valueSize":1},{"declaration":3546,"isOffset":false,"isSlot":false,"src":"6927:5:22","valueSize":1},{"declaration":3546,"isOffset":false,"isSlot":false,"src":"6951:5:22","valueSize":1},{"declaration":3546,"isOffset":false,"isSlot":false,"src":"6964:5:22","valueSize":1},{"declaration":3552,"isOffset":false,"isSlot":false,"src":"6893:5:22","valueSize":1},{"declaration":3552,"isOffset":false,"isSlot":false,"src":"6906:5:22","valueSize":1},{"declaration":3584,"isOffset":false,"isSlot":false,"src":"6773:9:22","valueSize":1},{"declaration":3584,"isOffset":false,"isSlot":false,"src":"6916:9:22","valueSize":1},{"declaration":3584,"isOffset":false,"isSlot":false,"src":"6971:9:22","valueSize":1},{"declaration":3536,"isOffset":false,"isSlot":false,"src":"6793:1:22","valueSize":1},{"declaration":3538,"isOffset":false,"isSlot":false,"src":"6796:1:22","valueSize":1}],"id":3586,"nodeType":"InlineAssembly","src":"6695:300:22"},{"assignments":[3588],"declarations":[{"constant":false,"id":3588,"mutability":"mutable","name":"twos","nameLocation":"7207:4:22","nodeType":"VariableDeclaration","scope":3668,"src":"7199:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3587,"name":"uint256","nodeType":"ElementaryTypeName","src":"7199:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3595,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3589,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"7214:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"30","id":3590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7229:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3591,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"7233:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7229:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3593,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7228:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7214:31:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7199:46:22"},{"AST":{"nativeSrc":"7268:366:22","nodeType":"YulBlock","src":"7268:366:22","statements":[{"nativeSrc":"7333:37:22","nodeType":"YulAssignment","src":"7333:37:22","value":{"arguments":[{"name":"denominator","nativeSrc":"7352:11:22","nodeType":"YulIdentifier","src":"7352:11:22"},{"name":"twos","nativeSrc":"7365:4:22","nodeType":"YulIdentifier","src":"7365:4:22"}],"functionName":{"name":"div","nativeSrc":"7348:3:22","nodeType":"YulIdentifier","src":"7348:3:22"},"nativeSrc":"7348:22:22","nodeType":"YulFunctionCall","src":"7348:22:22"},"variableNames":[{"name":"denominator","nativeSrc":"7333:11:22","nodeType":"YulIdentifier","src":"7333:11:22"}]},{"nativeSrc":"7437:25:22","nodeType":"YulAssignment","src":"7437:25:22","value":{"arguments":[{"name":"prod0","nativeSrc":"7450:5:22","nodeType":"YulIdentifier","src":"7450:5:22"},{"name":"twos","nativeSrc":"7457:4:22","nodeType":"YulIdentifier","src":"7457:4:22"}],"functionName":{"name":"div","nativeSrc":"7446:3:22","nodeType":"YulIdentifier","src":"7446:3:22"},"nativeSrc":"7446:16:22","nodeType":"YulFunctionCall","src":"7446:16:22"},"variableNames":[{"name":"prod0","nativeSrc":"7437:5:22","nodeType":"YulIdentifier","src":"7437:5:22"}]},{"nativeSrc":"7581:39:22","nodeType":"YulAssignment","src":"7581:39:22","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nativeSrc":"7601:1:22","nodeType":"YulLiteral","src":"7601:1:22","type":"","value":"0"},{"name":"twos","nativeSrc":"7604:4:22","nodeType":"YulIdentifier","src":"7604:4:22"}],"functionName":{"name":"sub","nativeSrc":"7597:3:22","nodeType":"YulIdentifier","src":"7597:3:22"},"nativeSrc":"7597:12:22","nodeType":"YulFunctionCall","src":"7597:12:22"},{"name":"twos","nativeSrc":"7611:4:22","nodeType":"YulIdentifier","src":"7611:4:22"}],"functionName":{"name":"div","nativeSrc":"7593:3:22","nodeType":"YulIdentifier","src":"7593:3:22"},"nativeSrc":"7593:23:22","nodeType":"YulFunctionCall","src":"7593:23:22"},{"kind":"number","nativeSrc":"7618:1:22","nodeType":"YulLiteral","src":"7618:1:22","type":"","value":"1"}],"functionName":{"name":"add","nativeSrc":"7589:3:22","nodeType":"YulIdentifier","src":"7589:3:22"},"nativeSrc":"7589:31:22","nodeType":"YulFunctionCall","src":"7589:31:22"},"variableNames":[{"name":"twos","nativeSrc":"7581:4:22","nodeType":"YulIdentifier","src":"7581:4:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3540,"isOffset":false,"isSlot":false,"src":"7333:11:22","valueSize":1},{"declaration":3540,"isOffset":false,"isSlot":false,"src":"7352:11:22","valueSize":1},{"declaration":3546,"isOffset":false,"isSlot":false,"src":"7437:5:22","valueSize":1},{"declaration":3546,"isOffset":false,"isSlot":false,"src":"7450:5:22","valueSize":1},{"declaration":3588,"isOffset":false,"isSlot":false,"src":"7365:4:22","valueSize":1},{"declaration":3588,"isOffset":false,"isSlot":false,"src":"7457:4:22","valueSize":1},{"declaration":3588,"isOffset":false,"isSlot":false,"src":"7581:4:22","valueSize":1},{"declaration":3588,"isOffset":false,"isSlot":false,"src":"7604:4:22","valueSize":1},{"declaration":3588,"isOffset":false,"isSlot":false,"src":"7611:4:22","valueSize":1}],"id":3596,"nodeType":"InlineAssembly","src":"7259:375:22"},{"expression":{"id":3601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3597,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"7700:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3598,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3552,"src":"7709:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3599,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3588,"src":"7717:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7709:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7700:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3602,"nodeType":"ExpressionStatement","src":"7700:21:22"},{"assignments":[3604],"declarations":[{"constant":false,"id":3604,"mutability":"mutable","name":"inverse","nameLocation":"8064:7:22","nodeType":"VariableDeclaration","scope":3668,"src":"8056:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3603,"name":"uint256","nodeType":"ElementaryTypeName","src":"8056:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3611,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8075:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3606,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"8079:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8075:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3608,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8074:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":3609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8094:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"8074:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8056:39:22"},{"expression":{"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3612,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"8312:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8323:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3614,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"8327:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3615,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"8341:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8327:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8323:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8312:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3619,"nodeType":"ExpressionStatement","src":"8312:36:22"},{"expression":{"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3620,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"8382:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3621,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8393:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3622,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"8397:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3623,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"8411:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8397:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8393:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8382:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3627,"nodeType":"ExpressionStatement","src":"8382:36:22"},{"expression":{"id":3634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3628,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"8454:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8465:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3630,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"8469:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3631,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"8483:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8469:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8465:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8454:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3635,"nodeType":"ExpressionStatement","src":"8454:36:22"},{"expression":{"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3636,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"8525:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3637,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8536:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3638,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"8540:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3639,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"8554:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8540:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8536:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8525:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3643,"nodeType":"ExpressionStatement","src":"8525:36:22"},{"expression":{"id":3650,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3644,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"8598:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8609:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3646,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"8613:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3647,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"8627:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8613:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8598:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3651,"nodeType":"ExpressionStatement","src":"8598:36:22"},{"expression":{"id":3658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3652,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"8672:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3653,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8683:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3654,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"8687:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3655,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"8701:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8687:21:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8683:25:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8672:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3659,"nodeType":"ExpressionStatement","src":"8672:36:22"},{"expression":{"id":3664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3660,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"9154:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3661,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3546,"src":"9163:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3662,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3604,"src":"9171:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9163:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9154:24:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3665,"nodeType":"ExpressionStatement","src":"9154:24:22"},{"expression":{"id":3666,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3543,"src":"9199:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3544,"id":3667,"nodeType":"Return","src":"9192:13:22"}]}]},"documentation":{"id":3534,"nodeType":"StructuredDocumentation","src":"4679:312:22","text":" @dev Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."},"id":3670,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5005:6:22","nodeType":"FunctionDefinition","parameters":{"id":3541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3536,"mutability":"mutable","name":"x","nameLocation":"5020:1:22","nodeType":"VariableDeclaration","scope":3670,"src":"5012:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3535,"name":"uint256","nodeType":"ElementaryTypeName","src":"5012:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3538,"mutability":"mutable","name":"y","nameLocation":"5031:1:22","nodeType":"VariableDeclaration","scope":3670,"src":"5023:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3537,"name":"uint256","nodeType":"ElementaryTypeName","src":"5023:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3540,"mutability":"mutable","name":"denominator","nameLocation":"5042:11:22","nodeType":"VariableDeclaration","scope":3670,"src":"5034:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3539,"name":"uint256","nodeType":"ElementaryTypeName","src":"5034:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5011:43:22"},"returnParameters":{"id":3544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3543,"mutability":"mutable","name":"result","nameLocation":"5086:6:22","nodeType":"VariableDeclaration","scope":3670,"src":"5078:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3542,"name":"uint256","nodeType":"ElementaryTypeName","src":"5078:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:16:22"},"scope":4840,"src":"4996:4226:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3706,"nodeType":"Block","src":"9461:128:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3686,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"9485:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3687,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"9488:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3688,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"9491:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3685,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[3670,3707],"referencedDeclaration":3670,"src":"9478:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9478:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3693,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3680,"src":"9539:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}],"id":3692,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"9522:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3246_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":3694,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9522:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3696,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3673,"src":"9559:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3697,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3675,"src":"9562:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3698,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3677,"src":"9565:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3695,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"9552:6:22","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9552:25:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3700,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9580:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9552:29:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9522:59:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":3690,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"9506:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9515:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"9506:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9506:76:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9478:104:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3684,"id":3705,"nodeType":"Return","src":"9471:111:22"}]},"documentation":{"id":3671,"nodeType":"StructuredDocumentation","src":"9228:118:22","text":" @dev Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":3707,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"9360:6:22","nodeType":"FunctionDefinition","parameters":{"id":3681,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3673,"mutability":"mutable","name":"x","nameLocation":"9375:1:22","nodeType":"VariableDeclaration","scope":3707,"src":"9367:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3672,"name":"uint256","nodeType":"ElementaryTypeName","src":"9367:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3675,"mutability":"mutable","name":"y","nameLocation":"9386:1:22","nodeType":"VariableDeclaration","scope":3707,"src":"9378:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3674,"name":"uint256","nodeType":"ElementaryTypeName","src":"9378:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3677,"mutability":"mutable","name":"denominator","nameLocation":"9397:11:22","nodeType":"VariableDeclaration","scope":3707,"src":"9389:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3676,"name":"uint256","nodeType":"ElementaryTypeName","src":"9389:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3680,"mutability":"mutable","name":"rounding","nameLocation":"9419:8:22","nodeType":"VariableDeclaration","scope":3707,"src":"9410:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"},"typeName":{"id":3679,"nodeType":"UserDefinedTypeName","pathNode":{"id":3678,"name":"Rounding","nameLocations":["9410:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3246,"src":"9410:8:22"},"referencedDeclaration":3246,"src":"9410:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9366:62:22"},"returnParameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3683,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3707,"src":"9452:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3682,"name":"uint256","nodeType":"ElementaryTypeName","src":"9452:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9451:9:22"},"scope":4840,"src":"9351:238:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3803,"nodeType":"Block","src":"10223:1849:22","statements":[{"id":3802,"nodeType":"UncheckedBlock","src":"10233:1833:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3717,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"10261:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10266:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10261:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3722,"nodeType":"IfStatement","src":"10257:20:22","trueBody":{"expression":{"hexValue":"30","id":3720,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10276:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3716,"id":3721,"nodeType":"Return","src":"10269:8:22"}},{"assignments":[3724],"declarations":[{"constant":false,"id":3724,"mutability":"mutable","name":"remainder","nameLocation":"10756:9:22","nodeType":"VariableDeclaration","scope":3802,"src":"10748:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3723,"name":"uint256","nodeType":"ElementaryTypeName","src":"10748:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3728,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3725,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3710,"src":"10768:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":3726,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"10772:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10768:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10748:25:22"},{"assignments":[3730],"declarations":[{"constant":false,"id":3730,"mutability":"mutable","name":"gcd","nameLocation":"10795:3:22","nodeType":"VariableDeclaration","scope":3802,"src":"10787:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"10787:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3732,"initialValue":{"id":3731,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"10801:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10787:15:22"},{"assignments":[3734],"declarations":[{"constant":false,"id":3734,"mutability":"mutable","name":"x","nameLocation":"10945:1:22","nodeType":"VariableDeclaration","scope":3802,"src":"10938:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3733,"name":"int256","nodeType":"ElementaryTypeName","src":"10938:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3736,"initialValue":{"hexValue":"30","id":3735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10949:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"10938:12:22"},{"assignments":[3738],"declarations":[{"constant":false,"id":3738,"mutability":"mutable","name":"y","nameLocation":"10971:1:22","nodeType":"VariableDeclaration","scope":3802,"src":"10964:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":3737,"name":"int256","nodeType":"ElementaryTypeName","src":"10964:6:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":3740,"initialValue":{"hexValue":"31","id":3739,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10975:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"10964:12:22"},{"body":{"id":3777,"nodeType":"Block","src":"11014:882:22","statements":[{"assignments":[3745],"declarations":[{"constant":false,"id":3745,"mutability":"mutable","name":"quotient","nameLocation":"11040:8:22","nodeType":"VariableDeclaration","scope":3777,"src":"11032:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3744,"name":"uint256","nodeType":"ElementaryTypeName","src":"11032:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3749,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3746,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"11051:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":3747,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"11057:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11051:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11032:34:22"},{"expression":{"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3750,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"11086:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3751,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"11091:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3752,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11085:16:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3753,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"11191:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3754,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"11436:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3755,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"11442:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":3756,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"11454:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11442:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11436:26:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3759,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11104:376:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"11085:395:22","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3761,"nodeType":"ExpressionStatement","src":"11085:395:22"},{"expression":{"id":3775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3762,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"11500:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":3763,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"11503:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3764,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"11499:6:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3765,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"11585:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3766,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"11839:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3767,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3738,"src":"11843:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3770,"name":"quotient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3745,"src":"11854:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3769,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:22","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":3768,"name":"int256","nodeType":"ElementaryTypeName","src":"11847:6:22","typeDescriptions":{}}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:16:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11843:20:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"11839:24:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":3774,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11508:373:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_int256_$_t_int256_$","typeString":"tuple(int256,int256)"}},"src":"11499:382:22","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3776,"nodeType":"ExpressionStatement","src":"11499:382:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3741,"name":"remainder","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3724,"src":"10998:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11011:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10998:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3778,"nodeType":"WhileStatement","src":"10991:905:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3779,"name":"gcd","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"11914:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"31","id":3780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11921:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"11914:8:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3784,"nodeType":"IfStatement","src":"11910:22:22","trueBody":{"expression":{"hexValue":"30","id":3782,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":3716,"id":3783,"nodeType":"Return","src":"11924:8:22"}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3786,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"11983:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":3787,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11987:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11983:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3795,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3789,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"11990:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"id":3793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"12002:2:22","subExpression":{"id":3792,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"12003:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3791,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11994:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3790,"name":"uint256","nodeType":"ElementaryTypeName","src":"11994:7:22","typeDescriptions":{}}},"id":3794,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11994:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11990:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3798,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3734,"src":"12015:1:22","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":3797,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12007:7:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3796,"name":"uint256","nodeType":"ElementaryTypeName","src":"12007:7:22","typeDescriptions":{}}},"id":3799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12007:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3785,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3431,"src":"11975:7:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (bool,uint256,uint256) pure returns (uint256)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11975:43:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3716,"id":3801,"nodeType":"Return","src":"11968:50:22"}]}]},"documentation":{"id":3708,"nodeType":"StructuredDocumentation","src":"9595:553:22","text":" @dev Calculate the modular multiplicative inverse of a number in Z/nZ.\n If n is a prime, then Z/nZ is a field. In that case all elements are inversible, except 0.\n If n is not a prime, then Z/nZ is not a field, and some elements might not be inversible.\n If the input value is not inversible, 0 is returned.\n NOTE: If you know for sure that n is (big) a prime, it may be cheaper to use Fermat's little theorem and get the\n inverse using `Math.modExp(a, n - 2, n)`. See {invModPrime}."},"id":3804,"implemented":true,"kind":"function","modifiers":[],"name":"invMod","nameLocation":"10162:6:22","nodeType":"FunctionDefinition","parameters":{"id":3713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3710,"mutability":"mutable","name":"a","nameLocation":"10177:1:22","nodeType":"VariableDeclaration","scope":3804,"src":"10169:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3709,"name":"uint256","nodeType":"ElementaryTypeName","src":"10169:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3712,"mutability":"mutable","name":"n","nameLocation":"10188:1:22","nodeType":"VariableDeclaration","scope":3804,"src":"10180:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3711,"name":"uint256","nodeType":"ElementaryTypeName","src":"10180:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10168:22:22"},"returnParameters":{"id":3716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3804,"src":"10214:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3714,"name":"uint256","nodeType":"ElementaryTypeName","src":"10214:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10213:9:22"},"scope":4840,"src":"10153:1919:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":3824,"nodeType":"Block","src":"12672:82:22","statements":[{"id":3823,"nodeType":"UncheckedBlock","src":"12682:66:22","statements":[{"expression":{"arguments":[{"id":3816,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"12725:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3817,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"12728:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"32","id":3818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12732:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"12728:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3820,"name":"p","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"12735:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3814,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4840,"src":"12713:4:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$4840_$","typeString":"type(library Math)"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12718:6:22","memberName":"modExp","nodeType":"MemberAccess","referencedDeclaration":3861,"src":"12713:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (uint256)"}},"id":3821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12713:24:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3813,"id":3822,"nodeType":"Return","src":"12706:31:22"}]}]},"documentation":{"id":3805,"nodeType":"StructuredDocumentation","src":"12078:514:22","text":" @dev Variant of {invMod}. More efficient, but only works if `p` is known to be a prime greater than `2`.\n From https://en.wikipedia.org/wiki/Fermat%27s_little_theorem[Fermat's little theorem], we know that if p is\n prime, then `a**(p-1) ≡ 1 mod p`. As a consequence, we have `a * a**(p-2) ≡ 1 mod p`, which means that\n `a**(p-2)` is the modular multiplicative inverse of a in Fp.\n NOTE: this function does NOT check that `p` is a prime greater than `2`."},"id":3825,"implemented":true,"kind":"function","modifiers":[],"name":"invModPrime","nameLocation":"12606:11:22","nodeType":"FunctionDefinition","parameters":{"id":3810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3807,"mutability":"mutable","name":"a","nameLocation":"12626:1:22","nodeType":"VariableDeclaration","scope":3825,"src":"12618:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3806,"name":"uint256","nodeType":"ElementaryTypeName","src":"12618:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3809,"mutability":"mutable","name":"p","nameLocation":"12637:1:22","nodeType":"VariableDeclaration","scope":3825,"src":"12629:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3808,"name":"uint256","nodeType":"ElementaryTypeName","src":"12629:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12617:22:22"},"returnParameters":{"id":3813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3825,"src":"12663:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3811,"name":"uint256","nodeType":"ElementaryTypeName","src":"12663:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12662:9:22"},"scope":4840,"src":"12597:157:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3860,"nodeType":"Block","src":"13524:174:22","statements":[{"assignments":[3838,3840],"declarations":[{"constant":false,"id":3838,"mutability":"mutable","name":"success","nameLocation":"13540:7:22","nodeType":"VariableDeclaration","scope":3860,"src":"13535:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3837,"name":"bool","nodeType":"ElementaryTypeName","src":"13535:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3840,"mutability":"mutable","name":"result","nameLocation":"13557:6:22","nodeType":"VariableDeclaration","scope":3860,"src":"13549:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3839,"name":"uint256","nodeType":"ElementaryTypeName","src":"13549:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3846,"initialValue":{"arguments":[{"id":3842,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3828,"src":"13577:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3843,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3830,"src":"13580:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3844,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3832,"src":"13583:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3841,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3885,3967],"referencedDeclaration":3885,"src":"13567:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_bool_$_t_uint256_$","typeString":"function (uint256,uint256,uint256) view returns (bool,uint256)"}},"id":3845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13567:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"13534:51:22"},{"condition":{"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13599:8:22","subExpression":{"id":3847,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3838,"src":"13600:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3857,"nodeType":"IfStatement","src":"13595:74:22","trueBody":{"id":3856,"nodeType":"Block","src":"13609:60:22","statements":[{"expression":{"arguments":[{"expression":{"id":3852,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"13635:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1924_$","typeString":"type(library Panic)"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13641:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1891,"src":"13635:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3849,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"13623:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1924_$","typeString":"type(library Panic)"}},"id":3851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13629:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1923,"src":"13623:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13623:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3855,"nodeType":"ExpressionStatement","src":"13623:35:22"}]}},{"expression":{"id":3858,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"13685:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3836,"id":3859,"nodeType":"Return","src":"13678:13:22"}]},"documentation":{"id":3826,"nodeType":"StructuredDocumentation","src":"12760:678:22","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m)\n Requirements:\n - modulus can't be zero\n - underlying staticcall to precompile must succeed\n IMPORTANT: The result is only valid if the underlying call succeeds. When using this function, make\n sure the chain you're using it on supports the precompiled contract for modular exponentiation\n at address 0x05 as specified in https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise,\n the underlying function will succeed given the lack of a revert, but the result may be incorrectly\n interpreted as 0."},"id":3861,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"13452:6:22","nodeType":"FunctionDefinition","parameters":{"id":3833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3828,"mutability":"mutable","name":"b","nameLocation":"13467:1:22","nodeType":"VariableDeclaration","scope":3861,"src":"13459:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3827,"name":"uint256","nodeType":"ElementaryTypeName","src":"13459:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3830,"mutability":"mutable","name":"e","nameLocation":"13478:1:22","nodeType":"VariableDeclaration","scope":3861,"src":"13470:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3829,"name":"uint256","nodeType":"ElementaryTypeName","src":"13470:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3832,"mutability":"mutable","name":"m","nameLocation":"13489:1:22","nodeType":"VariableDeclaration","scope":3861,"src":"13481:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3831,"name":"uint256","nodeType":"ElementaryTypeName","src":"13481:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13458:33:22"},"returnParameters":{"id":3836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3861,"src":"13515:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"13515:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13514:9:22"},"scope":4840,"src":"13443:255:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3884,"nodeType":"Block","src":"14552:1493:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3875,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3868,"src":"14566:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14571:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"14566:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3882,"nodeType":"IfStatement","src":"14562:29:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14582:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":3879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14589:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3880,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14581:10:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":3874,"id":3881,"nodeType":"Return","src":"14574:17:22"}},{"AST":{"nativeSrc":"14626:1413:22","nodeType":"YulBlock","src":"14626:1413:22","statements":[{"nativeSrc":"14640:22:22","nodeType":"YulVariableDeclaration","src":"14640:22:22","value":{"arguments":[{"kind":"number","nativeSrc":"14657:4:22","nodeType":"YulLiteral","src":"14657:4:22","type":"","value":"0x40"}],"functionName":{"name":"mload","nativeSrc":"14651:5:22","nodeType":"YulIdentifier","src":"14651:5:22"},"nativeSrc":"14651:11:22","nodeType":"YulFunctionCall","src":"14651:11:22"},"variables":[{"name":"ptr","nativeSrc":"14644:3:22","nodeType":"YulTypedName","src":"14644:3:22","type":""}]},{"expression":{"arguments":[{"name":"ptr","nativeSrc":"15570:3:22","nodeType":"YulIdentifier","src":"15570:3:22"},{"kind":"number","nativeSrc":"15575:4:22","nodeType":"YulLiteral","src":"15575:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15563:6:22","nodeType":"YulIdentifier","src":"15563:6:22"},"nativeSrc":"15563:17:22","nodeType":"YulFunctionCall","src":"15563:17:22"},"nativeSrc":"15563:17:22","nodeType":"YulExpressionStatement","src":"15563:17:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15604:3:22","nodeType":"YulIdentifier","src":"15604:3:22"},{"kind":"number","nativeSrc":"15609:4:22","nodeType":"YulLiteral","src":"15609:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"15600:3:22","nodeType":"YulIdentifier","src":"15600:3:22"},"nativeSrc":"15600:14:22","nodeType":"YulFunctionCall","src":"15600:14:22"},{"kind":"number","nativeSrc":"15616:4:22","nodeType":"YulLiteral","src":"15616:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15593:6:22","nodeType":"YulIdentifier","src":"15593:6:22"},"nativeSrc":"15593:28:22","nodeType":"YulFunctionCall","src":"15593:28:22"},"nativeSrc":"15593:28:22","nodeType":"YulExpressionStatement","src":"15593:28:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15645:3:22","nodeType":"YulIdentifier","src":"15645:3:22"},{"kind":"number","nativeSrc":"15650:4:22","nodeType":"YulLiteral","src":"15650:4:22","type":"","value":"0x40"}],"functionName":{"name":"add","nativeSrc":"15641:3:22","nodeType":"YulIdentifier","src":"15641:3:22"},"nativeSrc":"15641:14:22","nodeType":"YulFunctionCall","src":"15641:14:22"},{"kind":"number","nativeSrc":"15657:4:22","nodeType":"YulLiteral","src":"15657:4:22","type":"","value":"0x20"}],"functionName":{"name":"mstore","nativeSrc":"15634:6:22","nodeType":"YulIdentifier","src":"15634:6:22"},"nativeSrc":"15634:28:22","nodeType":"YulFunctionCall","src":"15634:28:22"},"nativeSrc":"15634:28:22","nodeType":"YulExpressionStatement","src":"15634:28:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15686:3:22","nodeType":"YulIdentifier","src":"15686:3:22"},{"kind":"number","nativeSrc":"15691:4:22","nodeType":"YulLiteral","src":"15691:4:22","type":"","value":"0x60"}],"functionName":{"name":"add","nativeSrc":"15682:3:22","nodeType":"YulIdentifier","src":"15682:3:22"},"nativeSrc":"15682:14:22","nodeType":"YulFunctionCall","src":"15682:14:22"},{"name":"b","nativeSrc":"15698:1:22","nodeType":"YulIdentifier","src":"15698:1:22"}],"functionName":{"name":"mstore","nativeSrc":"15675:6:22","nodeType":"YulIdentifier","src":"15675:6:22"},"nativeSrc":"15675:25:22","nodeType":"YulFunctionCall","src":"15675:25:22"},"nativeSrc":"15675:25:22","nodeType":"YulExpressionStatement","src":"15675:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15724:3:22","nodeType":"YulIdentifier","src":"15724:3:22"},{"kind":"number","nativeSrc":"15729:4:22","nodeType":"YulLiteral","src":"15729:4:22","type":"","value":"0x80"}],"functionName":{"name":"add","nativeSrc":"15720:3:22","nodeType":"YulIdentifier","src":"15720:3:22"},"nativeSrc":"15720:14:22","nodeType":"YulFunctionCall","src":"15720:14:22"},{"name":"e","nativeSrc":"15736:1:22","nodeType":"YulIdentifier","src":"15736:1:22"}],"functionName":{"name":"mstore","nativeSrc":"15713:6:22","nodeType":"YulIdentifier","src":"15713:6:22"},"nativeSrc":"15713:25:22","nodeType":"YulFunctionCall","src":"15713:25:22"},"nativeSrc":"15713:25:22","nodeType":"YulExpressionStatement","src":"15713:25:22"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nativeSrc":"15762:3:22","nodeType":"YulIdentifier","src":"15762:3:22"},{"kind":"number","nativeSrc":"15767:4:22","nodeType":"YulLiteral","src":"15767:4:22","type":"","value":"0xa0"}],"functionName":{"name":"add","nativeSrc":"15758:3:22","nodeType":"YulIdentifier","src":"15758:3:22"},"nativeSrc":"15758:14:22","nodeType":"YulFunctionCall","src":"15758:14:22"},{"name":"m","nativeSrc":"15774:1:22","nodeType":"YulIdentifier","src":"15774:1:22"}],"functionName":{"name":"mstore","nativeSrc":"15751:6:22","nodeType":"YulIdentifier","src":"15751:6:22"},"nativeSrc":"15751:25:22","nodeType":"YulFunctionCall","src":"15751:25:22"},"nativeSrc":"15751:25:22","nodeType":"YulExpressionStatement","src":"15751:25:22"},{"nativeSrc":"15938:57:22","nodeType":"YulAssignment","src":"15938:57:22","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"15960:3:22","nodeType":"YulIdentifier","src":"15960:3:22"},"nativeSrc":"15960:5:22","nodeType":"YulFunctionCall","src":"15960:5:22"},{"kind":"number","nativeSrc":"15967:4:22","nodeType":"YulLiteral","src":"15967:4:22","type":"","value":"0x05"},{"name":"ptr","nativeSrc":"15973:3:22","nodeType":"YulIdentifier","src":"15973:3:22"},{"kind":"number","nativeSrc":"15978:4:22","nodeType":"YulLiteral","src":"15978:4:22","type":"","value":"0xc0"},{"kind":"number","nativeSrc":"15984:4:22","nodeType":"YulLiteral","src":"15984:4:22","type":"","value":"0x00"},{"kind":"number","nativeSrc":"15990:4:22","nodeType":"YulLiteral","src":"15990:4:22","type":"","value":"0x20"}],"functionName":{"name":"staticcall","nativeSrc":"15949:10:22","nodeType":"YulIdentifier","src":"15949:10:22"},"nativeSrc":"15949:46:22","nodeType":"YulFunctionCall","src":"15949:46:22"},"variableNames":[{"name":"success","nativeSrc":"15938:7:22","nodeType":"YulIdentifier","src":"15938:7:22"}]},{"nativeSrc":"16008:21:22","nodeType":"YulAssignment","src":"16008:21:22","value":{"arguments":[{"kind":"number","nativeSrc":"16024:4:22","nodeType":"YulLiteral","src":"16024:4:22","type":"","value":"0x00"}],"functionName":{"name":"mload","nativeSrc":"16018:5:22","nodeType":"YulIdentifier","src":"16018:5:22"},"nativeSrc":"16018:11:22","nodeType":"YulFunctionCall","src":"16018:11:22"},"variableNames":[{"name":"result","nativeSrc":"16008:6:22","nodeType":"YulIdentifier","src":"16008:6:22"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":3864,"isOffset":false,"isSlot":false,"src":"15698:1:22","valueSize":1},{"declaration":3866,"isOffset":false,"isSlot":false,"src":"15736:1:22","valueSize":1},{"declaration":3868,"isOffset":false,"isSlot":false,"src":"15774:1:22","valueSize":1},{"declaration":3873,"isOffset":false,"isSlot":false,"src":"16008:6:22","valueSize":1},{"declaration":3871,"isOffset":false,"isSlot":false,"src":"15938:7:22","valueSize":1}],"flags":["memory-safe"],"id":3883,"nodeType":"InlineAssembly","src":"14601:1438:22"}]},"documentation":{"id":3862,"nodeType":"StructuredDocumentation","src":"13704:738:22","text":" @dev Returns the modular exponentiation of the specified base, exponent and modulus (b ** e % m).\n It includes a success flag indicating if the operation succeeded. Operation will be marked as failed if trying\n to operate modulo 0 or if the underlying precompile reverted.\n IMPORTANT: The result is only valid if the success flag is true. When using this function, make sure the chain\n you're using it on supports the precompiled contract for modular exponentiation at address 0x05 as specified in\n https://eips.ethereum.org/EIPS/eip-198[EIP-198]. Otherwise, the underlying function will succeed given the lack\n of a revert, but the result may be incorrectly interpreted as 0."},"id":3885,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"14456:9:22","nodeType":"FunctionDefinition","parameters":{"id":3869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3864,"mutability":"mutable","name":"b","nameLocation":"14474:1:22","nodeType":"VariableDeclaration","scope":3885,"src":"14466:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3863,"name":"uint256","nodeType":"ElementaryTypeName","src":"14466:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3866,"mutability":"mutable","name":"e","nameLocation":"14485:1:22","nodeType":"VariableDeclaration","scope":3885,"src":"14477:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3865,"name":"uint256","nodeType":"ElementaryTypeName","src":"14477:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3868,"mutability":"mutable","name":"m","nameLocation":"14496:1:22","nodeType":"VariableDeclaration","scope":3885,"src":"14488:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3867,"name":"uint256","nodeType":"ElementaryTypeName","src":"14488:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14465:33:22"},"returnParameters":{"id":3874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3871,"mutability":"mutable","name":"success","nameLocation":"14527:7:22","nodeType":"VariableDeclaration","scope":3885,"src":"14522:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3870,"name":"bool","nodeType":"ElementaryTypeName","src":"14522:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3873,"mutability":"mutable","name":"result","nameLocation":"14544:6:22","nodeType":"VariableDeclaration","scope":3885,"src":"14536:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3872,"name":"uint256","nodeType":"ElementaryTypeName","src":"14536:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14521:30:22"},"scope":4840,"src":"14447:1598:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3920,"nodeType":"Block","src":"16242:179:22","statements":[{"assignments":[3898,3900],"declarations":[{"constant":false,"id":3898,"mutability":"mutable","name":"success","nameLocation":"16258:7:22","nodeType":"VariableDeclaration","scope":3920,"src":"16253:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3897,"name":"bool","nodeType":"ElementaryTypeName","src":"16253:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3900,"mutability":"mutable","name":"result","nameLocation":"16280:6:22","nodeType":"VariableDeclaration","scope":3920,"src":"16267:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3899,"name":"bytes","nodeType":"ElementaryTypeName","src":"16267:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3906,"initialValue":{"arguments":[{"id":3902,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"16300:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3903,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"16303:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3904,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3892,"src":"16306:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3901,"name":"tryModExp","nodeType":"Identifier","overloadedDeclarations":[3885,3967],"referencedDeclaration":3967,"src":"16290:9:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory,bytes memory,bytes memory) view returns (bool,bytes memory)"}},"id":3905,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16290:18:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"16252:56:22"},{"condition":{"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"16322:8:22","subExpression":{"id":3907,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"16323:7:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3917,"nodeType":"IfStatement","src":"16318:74:22","trueBody":{"id":3916,"nodeType":"Block","src":"16332:60:22","statements":[{"expression":{"arguments":[{"expression":{"id":3912,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"16358:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1924_$","typeString":"type(library Panic)"}},"id":3913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16364:16:22","memberName":"DIVISION_BY_ZERO","nodeType":"MemberAccess","referencedDeclaration":1891,"src":"16358:22:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3909,"name":"Panic","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1924,"src":"16346:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Panic_$1924_$","typeString":"type(library Panic)"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16352:5:22","memberName":"panic","nodeType":"MemberAccess","referencedDeclaration":1923,"src":"16346:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$__$","typeString":"function (uint256) pure"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16346:35:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3915,"nodeType":"ExpressionStatement","src":"16346:35:22"}]}},{"expression":{"id":3918,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"16408:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":3896,"id":3919,"nodeType":"Return","src":"16401:13:22"}]},"documentation":{"id":3886,"nodeType":"StructuredDocumentation","src":"16051:85:22","text":" @dev Variant of {modExp} that supports inputs of arbitrary length."},"id":3921,"implemented":true,"kind":"function","modifiers":[],"name":"modExp","nameLocation":"16150:6:22","nodeType":"FunctionDefinition","parameters":{"id":3893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3888,"mutability":"mutable","name":"b","nameLocation":"16170:1:22","nodeType":"VariableDeclaration","scope":3921,"src":"16157:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3887,"name":"bytes","nodeType":"ElementaryTypeName","src":"16157:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"e","nameLocation":"16186:1:22","nodeType":"VariableDeclaration","scope":3921,"src":"16173:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3889,"name":"bytes","nodeType":"ElementaryTypeName","src":"16173:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3892,"mutability":"mutable","name":"m","nameLocation":"16202:1:22","nodeType":"VariableDeclaration","scope":3921,"src":"16189:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3891,"name":"bytes","nodeType":"ElementaryTypeName","src":"16189:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16156:48:22"},"returnParameters":{"id":3896,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3921,"src":"16228:12:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3894,"name":"bytes","nodeType":"ElementaryTypeName","src":"16228:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16227:14:22"},"scope":4840,"src":"16141:280:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3966,"nodeType":"Block","src":"16675:771:22","statements":[{"condition":{"arguments":[{"id":3936,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"16700:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3935,"name":"_zeroBytes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4000,"src":"16689:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$","typeString":"function (bytes memory) pure returns (bool)"}},"id":3937,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16689:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3945,"nodeType":"IfStatement","src":"16685:47:22","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":3938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16712:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"arguments":[{"hexValue":"30","id":3941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16729:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3940,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16719:9:22","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":3939,"name":"bytes","nodeType":"ElementaryTypeName","src":"16723:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":3942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16719:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"id":3943,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"16711:21:22","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"functionReturnParameters":3934,"id":3944,"nodeType":"Return","src":"16704:28:22"}},{"assignments":[3947],"declarations":[{"constant":false,"id":3947,"mutability":"mutable","name":"mLen","nameLocation":"16751:4:22","nodeType":"VariableDeclaration","scope":3966,"src":"16743:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3946,"name":"uint256","nodeType":"ElementaryTypeName","src":"16743:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3950,"initialValue":{"expression":{"id":3948,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"16758:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16760:6:22","memberName":"length","nodeType":"MemberAccess","src":"16758:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"16743:23:22"},{"expression":{"id":3963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3933,"src":"16848:6:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":3954,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"16874:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16876:6:22","memberName":"length","nodeType":"MemberAccess","src":"16874:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3956,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"16884:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16886:6:22","memberName":"length","nodeType":"MemberAccess","src":"16884:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3958,"name":"mLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3947,"src":"16894:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3959,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"16900:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3960,"name":"e","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3926,"src":"16903:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3961,"name":"m","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"16906:1:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3952,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"16857:3:22","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3953,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16861:12:22","memberName":"encodePacked","nodeType":"MemberAccess","src":"16857:16:22","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3962,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16857:51:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"src":"16848:60:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3964,"nodeType":"ExpressionStatement","src":"16848:60:22"},{"AST":{"nativeSrc":"16944:496:22","nodeType":"YulBlock","src":"16944:496:22","statements":[{"nativeSrc":"16958:32:22","nodeType":"YulVariableDeclaration","src":"16958:32:22","value":{"arguments":[{"name":"result","nativeSrc":"16977:6:22","nodeType":"YulIdentifier","src":"16977:6:22"},{"kind":"number","nativeSrc":"16985:4:22","nodeType":"YulLiteral","src":"16985:4:22","type":"","value":"0x20"}],"functionName":{"name":"add","nativeSrc":"16973:3:22","nodeType":"YulIdentifier","src":"16973:3:22"},"nativeSrc":"16973:17:22","nodeType":"YulFunctionCall","src":"16973:17:22"},"variables":[{"name":"dataPtr","nativeSrc":"16962:7:22","nodeType":"YulTypedName","src":"16962:7:22","type":""}]},{"nativeSrc":"17080:73:22","nodeType":"YulAssignment","src":"17080:73:22","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nativeSrc":"17102:3:22","nodeType":"YulIdentifier","src":"17102:3:22"},"nativeSrc":"17102:5:22","nodeType":"YulFunctionCall","src":"17102:5:22"},{"kind":"number","nativeSrc":"17109:4:22","nodeType":"YulLiteral","src":"17109:4:22","type":"","value":"0x05"},{"name":"dataPtr","nativeSrc":"17115:7:22","nodeType":"YulIdentifier","src":"17115:7:22"},{"arguments":[{"name":"result","nativeSrc":"17130:6:22","nodeType":"YulIdentifier","src":"17130:6:22"}],"functionName":{"name":"mload","nativeSrc":"17124:5:22","nodeType":"YulIdentifier","src":"17124:5:22"},"nativeSrc":"17124:13:22","nodeType":"YulFunctionCall","src":"17124:13:22"},{"name":"dataPtr","nativeSrc":"17139:7:22","nodeType":"YulIdentifier","src":"17139:7:22"},{"name":"mLen","nativeSrc":"17148:4:22","nodeType":"YulIdentifier","src":"17148:4:22"}],"functionName":{"name":"staticcall","nativeSrc":"17091:10:22","nodeType":"YulIdentifier","src":"17091:10:22"},"nativeSrc":"17091:62:22","nodeType":"YulFunctionCall","src":"17091:62:22"},"variableNames":[{"name":"success","nativeSrc":"17080:7:22","nodeType":"YulIdentifier","src":"17080:7:22"}]},{"expression":{"arguments":[{"name":"result","nativeSrc":"17309:6:22","nodeType":"YulIdentifier","src":"17309:6:22"},{"name":"mLen","nativeSrc":"17317:4:22","nodeType":"YulIdentifier","src":"17317:4:22"}],"functionName":{"name":"mstore","nativeSrc":"17302:6:22","nodeType":"YulIdentifier","src":"17302:6:22"},"nativeSrc":"17302:20:22","nodeType":"YulFunctionCall","src":"17302:20:22"},"nativeSrc":"17302:20:22","nodeType":"YulExpressionStatement","src":"17302:20:22"},{"expression":{"arguments":[{"kind":"number","nativeSrc":"17405:4:22","nodeType":"YulLiteral","src":"17405:4:22","type":"","value":"0x40"},{"arguments":[{"name":"dataPtr","nativeSrc":"17415:7:22","nodeType":"YulIdentifier","src":"17415:7:22"},{"name":"mLen","nativeSrc":"17424:4:22","nodeType":"YulIdentifier","src":"17424:4:22"}],"functionName":{"name":"add","nativeSrc":"17411:3:22","nodeType":"YulIdentifier","src":"17411:3:22"},"nativeSrc":"17411:18:22","nodeType":"YulFunctionCall","src":"17411:18:22"}],"functionName":{"name":"mstore","nativeSrc":"17398:6:22","nodeType":"YulIdentifier","src":"17398:6:22"},"nativeSrc":"17398:32:22","nodeType":"YulFunctionCall","src":"17398:32:22"},"nativeSrc":"17398:32:22","nodeType":"YulExpressionStatement","src":"17398:32:22"}]},"evmVersion":"paris","externalReferences":[{"declaration":3947,"isOffset":false,"isSlot":false,"src":"17148:4:22","valueSize":1},{"declaration":3947,"isOffset":false,"isSlot":false,"src":"17317:4:22","valueSize":1},{"declaration":3947,"isOffset":false,"isSlot":false,"src":"17424:4:22","valueSize":1},{"declaration":3933,"isOffset":false,"isSlot":false,"src":"16977:6:22","valueSize":1},{"declaration":3933,"isOffset":false,"isSlot":false,"src":"17130:6:22","valueSize":1},{"declaration":3933,"isOffset":false,"isSlot":false,"src":"17309:6:22","valueSize":1},{"declaration":3931,"isOffset":false,"isSlot":false,"src":"17080:7:22","valueSize":1}],"flags":["memory-safe"],"id":3965,"nodeType":"InlineAssembly","src":"16919:521:22"}]},"documentation":{"id":3922,"nodeType":"StructuredDocumentation","src":"16427:88:22","text":" @dev Variant of {tryModExp} that supports inputs of arbitrary length."},"id":3967,"implemented":true,"kind":"function","modifiers":[],"name":"tryModExp","nameLocation":"16529:9:22","nodeType":"FunctionDefinition","parameters":{"id":3929,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3924,"mutability":"mutable","name":"b","nameLocation":"16561:1:22","nodeType":"VariableDeclaration","scope":3967,"src":"16548:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3923,"name":"bytes","nodeType":"ElementaryTypeName","src":"16548:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3926,"mutability":"mutable","name":"e","nameLocation":"16585:1:22","nodeType":"VariableDeclaration","scope":3967,"src":"16572:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3925,"name":"bytes","nodeType":"ElementaryTypeName","src":"16572:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3928,"mutability":"mutable","name":"m","nameLocation":"16609:1:22","nodeType":"VariableDeclaration","scope":3967,"src":"16596:14:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3927,"name":"bytes","nodeType":"ElementaryTypeName","src":"16596:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16538:78:22"},"returnParameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3931,"mutability":"mutable","name":"success","nameLocation":"16645:7:22","nodeType":"VariableDeclaration","scope":3967,"src":"16640:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3930,"name":"bool","nodeType":"ElementaryTypeName","src":"16640:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3933,"mutability":"mutable","name":"result","nameLocation":"16667:6:22","nodeType":"VariableDeclaration","scope":3967,"src":"16654:19:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3932,"name":"bytes","nodeType":"ElementaryTypeName","src":"16654:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"16639:35:22"},"scope":4840,"src":"16520:926:22","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3999,"nodeType":"Block","src":"17601:176:22","statements":[{"body":{"id":3995,"nodeType":"Block","src":"17658:92:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bytes1","typeString":"bytes1"},"id":3990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3986,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"17676:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3988,"indexExpression":{"id":3987,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"17686:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"17676:12:22","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17692:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17676:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3994,"nodeType":"IfStatement","src":"17672:68:22","trueBody":{"id":3993,"nodeType":"Block","src":"17695:45:22","statements":[{"expression":{"hexValue":"66616c7365","id":3991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17720:5:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3974,"id":3992,"nodeType":"Return","src":"17713:12:22"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3979,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"17631:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3980,"name":"byteArray","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3970,"src":"17635:9:22","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17645:6:22","memberName":"length","nodeType":"MemberAccess","src":"17635:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17631:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3996,"initializationExpression":{"assignments":[3976],"declarations":[{"constant":false,"id":3976,"mutability":"mutable","name":"i","nameLocation":"17624:1:22","nodeType":"VariableDeclaration","scope":3996,"src":"17616:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3975,"name":"uint256","nodeType":"ElementaryTypeName","src":"17616:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3978,"initialValue":{"hexValue":"30","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17628:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"17616:13:22"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"17653:3:22","subExpression":{"id":3983,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3976,"src":"17655:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3985,"nodeType":"ExpressionStatement","src":"17653:3:22"},"nodeType":"ForStatement","src":"17611:139:22"},{"expression":{"hexValue":"74727565","id":3997,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"17766:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3974,"id":3998,"nodeType":"Return","src":"17759:11:22"}]},"documentation":{"id":3968,"nodeType":"StructuredDocumentation","src":"17452:72:22","text":" @dev Returns whether the provided byte array is zero."},"id":4000,"implemented":true,"kind":"function","modifiers":[],"name":"_zeroBytes","nameLocation":"17538:10:22","nodeType":"FunctionDefinition","parameters":{"id":3971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3970,"mutability":"mutable","name":"byteArray","nameLocation":"17562:9:22","nodeType":"VariableDeclaration","scope":4000,"src":"17549:22:22","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3969,"name":"bytes","nodeType":"ElementaryTypeName","src":"17549:5:22","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"17548:24:22"},"returnParameters":{"id":3974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4000,"src":"17595:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3972,"name":"bool","nodeType":"ElementaryTypeName","src":"17595:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17594:6:22"},"scope":4840,"src":"17529:248:22","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":4218,"nodeType":"Block","src":"18137:5124:22","statements":[{"id":4217,"nodeType":"UncheckedBlock","src":"18147:5108:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4008,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"18241:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"31","id":4009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18246:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"18241:6:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4014,"nodeType":"IfStatement","src":"18237:53:22","trueBody":{"id":4013,"nodeType":"Block","src":"18249:41:22","statements":[{"expression":{"id":4011,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"18274:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4007,"id":4012,"nodeType":"Return","src":"18267:8:22"}]}},{"assignments":[4016],"declarations":[{"constant":false,"id":4016,"mutability":"mutable","name":"aa","nameLocation":"19225:2:22","nodeType":"VariableDeclaration","scope":4217,"src":"19217:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4015,"name":"uint256","nodeType":"ElementaryTypeName","src":"19217:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4018,"initialValue":{"id":4017,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"19230:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"19217:14:22"},{"assignments":[4020],"declarations":[{"constant":false,"id":4020,"mutability":"mutable","name":"xn","nameLocation":"19253:2:22","nodeType":"VariableDeclaration","scope":4217,"src":"19245:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"19245:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4022,"initialValue":{"hexValue":"31","id":4021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19258:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"VariableDeclarationStatement","src":"19245:14:22"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4023,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"19278:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19285:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19290:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19285:8:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19284:10:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"src":"19278:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4038,"nodeType":"IfStatement","src":"19274:92:22","trueBody":{"id":4037,"nodeType":"Block","src":"19296:70:22","statements":[{"expression":{"id":4031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4029,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"19314:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":4030,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19321:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"19314:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4032,"nodeType":"ExpressionStatement","src":"19314:10:22"},{"expression":{"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4033,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"19342:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3634","id":4034,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19349:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19342:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4036,"nodeType":"ExpressionStatement","src":"19342:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4039,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"19383:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19390:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4041,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19395:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19390:7:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4043,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19389:9:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"src":"19383:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4054,"nodeType":"IfStatement","src":"19379:90:22","trueBody":{"id":4053,"nodeType":"Block","src":"19400:69:22","statements":[{"expression":{"id":4047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4045,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"19418:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":4046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19425:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"19418:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4048,"nodeType":"ExpressionStatement","src":"19418:9:22"},{"expression":{"id":4051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4049,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"19445:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3332","id":4050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19452:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19445:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4052,"nodeType":"ExpressionStatement","src":"19445:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4060,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4055,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"19486:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19493:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4057,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19498:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19493:7:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4059,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19492:9:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"19486:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4070,"nodeType":"IfStatement","src":"19482:90:22","trueBody":{"id":4069,"nodeType":"Block","src":"19503:69:22","statements":[{"expression":{"id":4063,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4061,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"19521:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":4062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19528:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"19521:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4064,"nodeType":"ExpressionStatement","src":"19521:9:22"},{"expression":{"id":4067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4065,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"19548:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"3136","id":4066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19555:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19548:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4068,"nodeType":"ExpressionStatement","src":"19548:9:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4071,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"19589:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19596:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19601:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19596:7:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4075,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19595:9:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"src":"19589:15:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4086,"nodeType":"IfStatement","src":"19585:89:22","trueBody":{"id":4085,"nodeType":"Block","src":"19606:68:22","statements":[{"expression":{"id":4079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4077,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"19624:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":4078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19631:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"19624:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4080,"nodeType":"ExpressionStatement","src":"19624:9:22"},{"expression":{"id":4083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4081,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"19651:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"38","id":4082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19658:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19651:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4084,"nodeType":"ExpressionStatement","src":"19651:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4087,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"19691:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4090,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19698:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19703:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19698:6:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4091,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19697:8:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"src":"19691:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4102,"nodeType":"IfStatement","src":"19687:87:22","trueBody":{"id":4101,"nodeType":"Block","src":"19707:67:22","statements":[{"expression":{"id":4095,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4093,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"19725:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":4094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19732:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"19725:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4096,"nodeType":"ExpressionStatement","src":"19725:8:22"},{"expression":{"id":4099,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4097,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"19751:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"34","id":4098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19758:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19751:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4100,"nodeType":"ExpressionStatement","src":"19751:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4103,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"19791:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4104,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19798:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4105,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19803:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19798:6:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19797:8:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"src":"19791:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4118,"nodeType":"IfStatement","src":"19787:87:22","trueBody":{"id":4117,"nodeType":"Block","src":"19807:67:22","statements":[{"expression":{"id":4111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4109,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"19825:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":4110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19832:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"19825:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4112,"nodeType":"ExpressionStatement","src":"19825:8:22"},{"expression":{"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4113,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"19851:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"32","id":4114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19858:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19851:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4116,"nodeType":"ExpressionStatement","src":"19851:8:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4119,"name":"aa","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4016,"src":"19891:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19898:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19903:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"19898:6:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4123,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"19897:8:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"src":"19891:14:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4130,"nodeType":"IfStatement","src":"19887:61:22","trueBody":{"id":4129,"nodeType":"Block","src":"19907:41:22","statements":[{"expression":{"id":4127,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4125,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"19925:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"<<=","rightHandSide":{"hexValue":"31","id":4126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19932:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"19925:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4128,"nodeType":"ExpressionStatement","src":"19925:8:22"}]}},{"expression":{"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4131,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"20368:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":4132,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20374:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4133,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"20378:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20374:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4135,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"20373:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20385:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"20373:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20368:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4139,"nodeType":"ExpressionStatement","src":"20368:18:22"},{"expression":{"id":4149,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4140,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22273:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4141,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22279:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4142,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"22284:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4143,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22288:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22284:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22279:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4146,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22278:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4147,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22295:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22278:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22273:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4150,"nodeType":"ExpressionStatement","src":"22273:23:22"},{"expression":{"id":4160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4151,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22382:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4152,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22388:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4153,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"22393:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4154,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22397:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22393:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22388:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22387:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22404:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22387:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22382:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4161,"nodeType":"ExpressionStatement","src":"22382:23:22"},{"expression":{"id":4171,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4162,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22493:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4170,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4163,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22499:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"22504:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4165,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22508:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22504:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22499:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4168,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22498:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4169,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22515:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22498:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22493:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4172,"nodeType":"ExpressionStatement","src":"22493:23:22"},{"expression":{"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4173,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22602:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4174,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22608:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4175,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"22613:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4176,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22617:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22613:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22608:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22607:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22624:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22607:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22602:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4183,"nodeType":"ExpressionStatement","src":"22602:23:22"},{"expression":{"id":4193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4184,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22712:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4185,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22718:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4186,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"22723:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4187,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22727:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22723:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22718:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4190,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22717:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22734:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22717:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22712:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4194,"nodeType":"ExpressionStatement","src":"22712:23:22"},{"expression":{"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4195,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22822:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4196,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22828:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4197,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"22833:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4198,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"22837:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22833:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22828:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4201,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"22827:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22844:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"22827:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22822:23:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4205,"nodeType":"ExpressionStatement","src":"22822:23:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4206,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"23211:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4209,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"23232:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4210,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4003,"src":"23237:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4211,"name":"xn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4020,"src":"23241:2:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23237:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23232:11:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4207,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"23216:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23225:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"23216:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23216:28:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23211:33:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4007,"id":4216,"nodeType":"Return","src":"23204:40:22"}]}]},"documentation":{"id":4001,"nodeType":"StructuredDocumentation","src":"17783:292:22","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n This method is based on Newton's method for computing square roots; the algorithm is restricted to only\n using integer operations."},"id":4219,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"18089:4:22","nodeType":"FunctionDefinition","parameters":{"id":4004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4003,"mutability":"mutable","name":"a","nameLocation":"18102:1:22","nodeType":"VariableDeclaration","scope":4219,"src":"18094:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4002,"name":"uint256","nodeType":"ElementaryTypeName","src":"18094:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18093:11:22"},"returnParameters":{"id":4007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4219,"src":"18128:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4005,"name":"uint256","nodeType":"ElementaryTypeName","src":"18128:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18127:9:22"},"scope":4840,"src":"18080:5181:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4252,"nodeType":"Block","src":"23434:171:22","statements":[{"id":4251,"nodeType":"UncheckedBlock","src":"23444:155:22","statements":[{"assignments":[4231],"declarations":[{"constant":false,"id":4231,"mutability":"mutable","name":"result","nameLocation":"23476:6:22","nodeType":"VariableDeclaration","scope":4251,"src":"23468:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4230,"name":"uint256","nodeType":"ElementaryTypeName","src":"23468:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4235,"initialValue":{"arguments":[{"id":4233,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"23490:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4232,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4219,4253],"referencedDeclaration":4219,"src":"23485:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23485:7:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"23468:24:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4236,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"23513:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4247,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4240,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4225,"src":"23555:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}],"id":4239,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"23538:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3246_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23538:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4242,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"23568:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4243,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4231,"src":"23577:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4245,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4222,"src":"23586:1:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23568:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23538:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4237,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"23522:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23531:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"23522:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23522:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23513:75:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4229,"id":4250,"nodeType":"Return","src":"23506:82:22"}]}]},"documentation":{"id":4220,"nodeType":"StructuredDocumentation","src":"23267:86:22","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":4253,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"23367:4:22","nodeType":"FunctionDefinition","parameters":{"id":4226,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4222,"mutability":"mutable","name":"a","nameLocation":"23380:1:22","nodeType":"VariableDeclaration","scope":4253,"src":"23372:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4221,"name":"uint256","nodeType":"ElementaryTypeName","src":"23372:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4225,"mutability":"mutable","name":"rounding","nameLocation":"23392:8:22","nodeType":"VariableDeclaration","scope":4253,"src":"23383:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"},"typeName":{"id":4224,"nodeType":"UserDefinedTypeName","pathNode":{"id":4223,"name":"Rounding","nameLocations":["23383:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3246,"src":"23383:8:22"},"referencedDeclaration":3246,"src":"23383:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"23371:30:22"},"returnParameters":{"id":4229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4228,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4253,"src":"23425:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4227,"name":"uint256","nodeType":"ElementaryTypeName","src":"23425:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23424:9:22"},"scope":4840,"src":"23358:247:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4448,"nodeType":"Block","src":"23796:981:22","statements":[{"assignments":[4262],"declarations":[{"constant":false,"id":4262,"mutability":"mutable","name":"result","nameLocation":"23814:6:22","nodeType":"VariableDeclaration","scope":4448,"src":"23806:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4261,"name":"uint256","nodeType":"ElementaryTypeName","src":"23806:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4264,"initialValue":{"hexValue":"30","id":4263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23823:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"23806:18:22"},{"assignments":[4266],"declarations":[{"constant":false,"id":4266,"mutability":"mutable","name":"exp","nameLocation":"23842:3:22","nodeType":"VariableDeclaration","scope":4448,"src":"23834:11:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4265,"name":"uint256","nodeType":"ElementaryTypeName","src":"23834:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4267,"nodeType":"VariableDeclarationStatement","src":"23834:11:22"},{"id":4445,"nodeType":"UncheckedBlock","src":"23855:893:22","statements":[{"expression":{"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4268,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"23879:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313238","id":4269,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23885:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"23907:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4278,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4275,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23916:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23921:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"23916:8:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4276,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"23915:10:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23928:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"23915:14:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"23907:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4270,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"23891:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"23900:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"23891:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23891:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23885:45:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23879:51:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4283,"nodeType":"ExpressionStatement","src":"23879:51:22"},{"expression":{"id":4286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4284,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"23944:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4285,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"23954:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23944:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4287,"nodeType":"ExpressionStatement","src":"23944:13:22"},{"expression":{"id":4290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4288,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"23971:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4289,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"23981:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23971:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4291,"nodeType":"ExpressionStatement","src":"23971:13:22"},{"expression":{"id":4306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4292,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"23999:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3634","id":4293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24005:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4296,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"24026:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24035:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24040:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"24035:7:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24034:9:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24046:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24034:13:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"24026:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4294,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"24010:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24019:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"24010:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24010:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24005:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"23999:49:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4307,"nodeType":"ExpressionStatement","src":"23999:49:22"},{"expression":{"id":4310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4308,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"24062:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4309,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24072:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24062:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4311,"nodeType":"ExpressionStatement","src":"24062:13:22"},{"expression":{"id":4314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4312,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"24089:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4313,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24099:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24089:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4315,"nodeType":"ExpressionStatement","src":"24089:13:22"},{"expression":{"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4316,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24117:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3332","id":4317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24123:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"24144:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4323,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24153:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4322,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24158:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"24153:7:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4324,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24152:9:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4325,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24164:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24152:13:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"24144:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4318,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"24128:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24137:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"24128:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4328,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24128:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24123:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24117:49:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4331,"nodeType":"ExpressionStatement","src":"24117:49:22"},{"expression":{"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"24180:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4333,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24190:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24180:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4335,"nodeType":"ExpressionStatement","src":"24180:13:22"},{"expression":{"id":4338,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4336,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"24207:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4337,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24217:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24207:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4339,"nodeType":"ExpressionStatement","src":"24207:13:22"},{"expression":{"id":4354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4340,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24235:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3136","id":4341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24241:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4344,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"24262:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4350,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4347,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24271:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4346,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24276:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"24271:7:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4348,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24270:9:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24282:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24270:13:22","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"24262:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4342,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"24246:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24255:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"24246:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24246:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24241:43:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24235:49:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4355,"nodeType":"ExpressionStatement","src":"24235:49:22"},{"expression":{"id":4358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4356,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"24298:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4357,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24308:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24298:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4359,"nodeType":"ExpressionStatement","src":"24298:13:22"},{"expression":{"id":4362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4360,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"24325:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4361,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24335:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24325:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4363,"nodeType":"ExpressionStatement","src":"24325:13:22"},{"expression":{"id":4378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4364,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24353:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"38","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24359:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4368,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"24379:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4371,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4369,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24388:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4370,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24393:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"24388:6:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4372,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24387:8:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24398:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24387:12:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"24379:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4366,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"24363:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24372:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"24363:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24363:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24359:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24353:47:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4379,"nodeType":"ExpressionStatement","src":"24353:47:22"},{"expression":{"id":4382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4380,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"24414:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4381,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24424:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24414:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4383,"nodeType":"ExpressionStatement","src":"24414:13:22"},{"expression":{"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4384,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"24441:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4385,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24451:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24441:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4387,"nodeType":"ExpressionStatement","src":"24441:13:22"},{"expression":{"id":4402,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4388,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24469:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"34","id":4389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24475:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4392,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"24495:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"id":4398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"id":4395,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24504:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"34","id":4394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24509:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"24504:6:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}}],"id":4396,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24503:8:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24514:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24503:12:22","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"}},"src":"24495:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4390,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"24479:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24488:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"24479:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24479:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24475:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24469:47:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4403,"nodeType":"ExpressionStatement","src":"24469:47:22"},{"expression":{"id":4406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"24530:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4405,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24540:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24530:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4407,"nodeType":"ExpressionStatement","src":"24530:13:22"},{"expression":{"id":4410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4408,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"24557:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4409,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24567:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24557:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4411,"nodeType":"ExpressionStatement","src":"24557:13:22"},{"expression":{"id":4426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4412,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24585:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24591:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"24611:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"id":4422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"id":4419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4417,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24620:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"32","id":4418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24625:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"24620:6:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}}],"id":4420,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"24619:8:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24630:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24619:12:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}},"src":"24611:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4414,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"24595:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4415,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24604:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"24595:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24595:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24591:41:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24585:47:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4427,"nodeType":"ExpressionStatement","src":"24585:47:22"},{"expression":{"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"24646:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"id":4429,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24656:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24646:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4431,"nodeType":"ExpressionStatement","src":"24646:13:22"},{"expression":{"id":4434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4432,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"24673:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":4433,"name":"exp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4266,"src":"24683:3:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24673:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4435,"nodeType":"ExpressionStatement","src":"24673:13:22"},{"expression":{"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4436,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"24701:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4256,"src":"24727:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":4440,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24735:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"24727:9:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4437,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"24711:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"24720:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"24711:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24711:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24701:36:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4444,"nodeType":"ExpressionStatement","src":"24701:36:22"}]},{"expression":{"id":4446,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4262,"src":"24764:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4260,"id":4447,"nodeType":"Return","src":"24757:13:22"}]},"documentation":{"id":4254,"nodeType":"StructuredDocumentation","src":"23611:119:22","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4449,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"23744:4:22","nodeType":"FunctionDefinition","parameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"value","nameLocation":"23757:5:22","nodeType":"VariableDeclaration","scope":4449,"src":"23749:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"23749:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23748:15:22"},"returnParameters":{"id":4260,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4259,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4449,"src":"23787:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4258,"name":"uint256","nodeType":"ElementaryTypeName","src":"23787:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"23786:9:22"},"scope":4840,"src":"23735:1042:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4482,"nodeType":"Block","src":"25010:175:22","statements":[{"id":4481,"nodeType":"UncheckedBlock","src":"25020:159:22","statements":[{"assignments":[4461],"declarations":[{"constant":false,"id":4461,"mutability":"mutable","name":"result","nameLocation":"25052:6:22","nodeType":"VariableDeclaration","scope":4481,"src":"25044:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4460,"name":"uint256","nodeType":"ElementaryTypeName","src":"25044:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4465,"initialValue":{"arguments":[{"id":4463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"25066:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4462,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[4449,4483],"referencedDeclaration":4449,"src":"25061:4:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25061:11:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"25044:28:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4466,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"25093:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4470,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4455,"src":"25135:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}],"id":4469,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"25118:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3246_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4471,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25118:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4474,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25148:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":4473,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"25153:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4475,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4452,"src":"25162:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25148:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"25118:49:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4467,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"25102:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"25111:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"25102:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25102:66:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"25093:75:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4459,"id":4480,"nodeType":"Return","src":"25086:82:22"}]}]},"documentation":{"id":4450,"nodeType":"StructuredDocumentation","src":"24783:142:22","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4483,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"24939:4:22","nodeType":"FunctionDefinition","parameters":{"id":4456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4452,"mutability":"mutable","name":"value","nameLocation":"24952:5:22","nodeType":"VariableDeclaration","scope":4483,"src":"24944:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4451,"name":"uint256","nodeType":"ElementaryTypeName","src":"24944:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4455,"mutability":"mutable","name":"rounding","nameLocation":"24968:8:22","nodeType":"VariableDeclaration","scope":4483,"src":"24959:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"},"typeName":{"id":4454,"nodeType":"UserDefinedTypeName","pathNode":{"id":4453,"name":"Rounding","nameLocations":["24959:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3246,"src":"24959:8:22"},"referencedDeclaration":3246,"src":"24959:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"24943:34:22"},"returnParameters":{"id":4459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4483,"src":"25001:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4457,"name":"uint256","nodeType":"ElementaryTypeName","src":"25001:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25000:9:22"},"scope":4840,"src":"24930:255:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4611,"nodeType":"Block","src":"25378:854:22","statements":[{"assignments":[4492],"declarations":[{"constant":false,"id":4492,"mutability":"mutable","name":"result","nameLocation":"25396:6:22","nodeType":"VariableDeclaration","scope":4611,"src":"25388:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4491,"name":"uint256","nodeType":"ElementaryTypeName","src":"25388:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4494,"initialValue":{"hexValue":"30","id":4493,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25405:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"25388:18:22"},{"id":4608,"nodeType":"UncheckedBlock","src":"25416:787:22","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4495,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"25444:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4496,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25453:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25459:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25453:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25444:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4511,"nodeType":"IfStatement","src":"25440:103:22","trueBody":{"id":4510,"nodeType":"Block","src":"25463:80:22","statements":[{"expression":{"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"25481:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":4503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25490:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":4502,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25496:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25490:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"25481:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4505,"nodeType":"ExpressionStatement","src":"25481:17:22"},{"expression":{"id":4508,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4506,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"25516:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":4507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25526:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"25516:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4509,"nodeType":"ExpressionStatement","src":"25516:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4512,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"25560:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25569:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4514,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25575:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25569:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25560:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4528,"nodeType":"IfStatement","src":"25556:103:22","trueBody":{"id":4527,"nodeType":"Block","src":"25579:80:22","statements":[{"expression":{"id":4521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4517,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"25597:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":4520,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4518,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25606:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":4519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25612:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25606:8:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"25597:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4522,"nodeType":"ExpressionStatement","src":"25597:17:22"},{"expression":{"id":4525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4523,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"25632:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":4524,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25642:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"25632:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4526,"nodeType":"ExpressionStatement","src":"25632:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"25676:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4530,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25685:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25691:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25685:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25676:17:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4545,"nodeType":"IfStatement","src":"25672:103:22","trueBody":{"id":4544,"nodeType":"Block","src":"25695:80:22","statements":[{"expression":{"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4534,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"25713:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":4537,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25722:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":4536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25728:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25722:8:22","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"25713:17:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4539,"nodeType":"ExpressionStatement","src":"25713:17:22"},{"expression":{"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4540,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"25748:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":4541,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25758:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"25748:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4543,"nodeType":"ExpressionStatement","src":"25748:12:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4546,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"25792:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25801:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25807:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25801:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25792:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4562,"nodeType":"IfStatement","src":"25788:100:22","trueBody":{"id":4561,"nodeType":"Block","src":"25810:78:22","statements":[{"expression":{"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4551,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"25828:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":4554,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4552,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25837:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":4553,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25843:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25837:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"25828:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4556,"nodeType":"ExpressionStatement","src":"25828:16:22"},{"expression":{"id":4559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4557,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"25862:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":4558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25872:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"25862:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4560,"nodeType":"ExpressionStatement","src":"25862:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"25905:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4564,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25914:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4565,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25920:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25914:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25905:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4579,"nodeType":"IfStatement","src":"25901:100:22","trueBody":{"id":4578,"nodeType":"Block","src":"25923:78:22","statements":[{"expression":{"id":4572,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4568,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"25941:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":4571,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4569,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25950:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":4570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25956:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25950:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"25941:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4573,"nodeType":"ExpressionStatement","src":"25941:16:22"},{"expression":{"id":4576,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4574,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"25975:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":4575,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25985:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"25975:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4577,"nodeType":"ExpressionStatement","src":"25975:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4580,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"26018:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4583,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26027:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26033:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26027:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26018:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4596,"nodeType":"IfStatement","src":"26014:100:22","trueBody":{"id":4595,"nodeType":"Block","src":"26036:78:22","statements":[{"expression":{"id":4589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4585,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"26054:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":4588,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26063:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":4587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26069:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26063:7:22","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"26054:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4590,"nodeType":"ExpressionStatement","src":"26054:16:22"},{"expression":{"id":4593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4591,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"26088:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":4592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26098:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"26088:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4594,"nodeType":"ExpressionStatement","src":"26088:11:22"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4597,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4486,"src":"26131:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":4600,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26140:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":4599,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26146:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26140:7:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"26131:16:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4607,"nodeType":"IfStatement","src":"26127:66:22","trueBody":{"id":4606,"nodeType":"Block","src":"26149:44:22","statements":[{"expression":{"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4602,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"26167:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":4603,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26177:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"26167:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4605,"nodeType":"ExpressionStatement","src":"26167:11:22"}]}}]},{"expression":{"id":4609,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"26219:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4490,"id":4610,"nodeType":"Return","src":"26212:13:22"}]},"documentation":{"id":4484,"nodeType":"StructuredDocumentation","src":"25191:120:22","text":" @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."},"id":4612,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"25325:5:22","nodeType":"FunctionDefinition","parameters":{"id":4487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4486,"mutability":"mutable","name":"value","nameLocation":"25339:5:22","nodeType":"VariableDeclaration","scope":4612,"src":"25331:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4485,"name":"uint256","nodeType":"ElementaryTypeName","src":"25331:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25330:15:22"},"returnParameters":{"id":4490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4612,"src":"25369:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4488,"name":"uint256","nodeType":"ElementaryTypeName","src":"25369:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25368:9:22"},"scope":4840,"src":"25316:916:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4645,"nodeType":"Block","src":"26467:177:22","statements":[{"id":4644,"nodeType":"UncheckedBlock","src":"26477:161:22","statements":[{"assignments":[4624],"declarations":[{"constant":false,"id":4624,"mutability":"mutable","name":"result","nameLocation":"26509:6:22","nodeType":"VariableDeclaration","scope":4644,"src":"26501:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4623,"name":"uint256","nodeType":"ElementaryTypeName","src":"26501:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4628,"initialValue":{"arguments":[{"id":4626,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"26524:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4625,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[4612,4646],"referencedDeclaration":4612,"src":"26518:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26518:12:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"26501:29:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4629,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"26551:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4640,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4633,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4618,"src":"26593:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}],"id":4632,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"26576:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3246_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4634,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26576:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26606:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":4636,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4624,"src":"26612:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:12:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4638,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4615,"src":"26621:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26606:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"26576:50:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4630,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"26560:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"26569:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"26560:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26560:67:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"26551:76:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4622,"id":4643,"nodeType":"Return","src":"26544:83:22"}]}]},"documentation":{"id":4613,"nodeType":"StructuredDocumentation","src":"26238:143:22","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4646,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"26395:5:22","nodeType":"FunctionDefinition","parameters":{"id":4619,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4615,"mutability":"mutable","name":"value","nameLocation":"26409:5:22","nodeType":"VariableDeclaration","scope":4646,"src":"26401:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4614,"name":"uint256","nodeType":"ElementaryTypeName","src":"26401:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4618,"mutability":"mutable","name":"rounding","nameLocation":"26425:8:22","nodeType":"VariableDeclaration","scope":4646,"src":"26416:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"},"typeName":{"id":4617,"nodeType":"UserDefinedTypeName","pathNode":{"id":4616,"name":"Rounding","nameLocations":["26416:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3246,"src":"26416:8:22"},"referencedDeclaration":3246,"src":"26416:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"26400:34:22"},"returnParameters":{"id":4622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4621,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4646,"src":"26458:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4620,"name":"uint256","nodeType":"ElementaryTypeName","src":"26458:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26457:9:22"},"scope":4840,"src":"26386:258:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4782,"nodeType":"Block","src":"26964:674:22","statements":[{"assignments":[4655],"declarations":[{"constant":false,"id":4655,"mutability":"mutable","name":"result","nameLocation":"26982:6:22","nodeType":"VariableDeclaration","scope":4782,"src":"26974:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4654,"name":"uint256","nodeType":"ElementaryTypeName","src":"26974:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4657,"initialValue":{"hexValue":"30","id":4656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26991:1:22","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"26974:18:22"},{"assignments":[4659],"declarations":[{"constant":false,"id":4659,"mutability":"mutable","name":"isGt","nameLocation":"27010:4:22","nodeType":"VariableDeclaration","scope":4782,"src":"27002:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4658,"name":"uint256","nodeType":"ElementaryTypeName","src":"27002:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4660,"nodeType":"VariableDeclarationStatement","src":"27002:12:22"},{"id":4779,"nodeType":"UncheckedBlock","src":"27024:585:22","statements":[{"expression":{"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4661,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"27048:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4664,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"27071:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"},"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"id":4667,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27080:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"313238","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27085:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27080:8:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}}],"id":4668,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27079:10:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27092:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27079:14:22","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211455_by_1","typeString":"int_const 3402...(31 digits omitted)...1455"}},"src":"27071:22:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4662,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"27055:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27064:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"27055:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27055:39:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27048:46:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4674,"nodeType":"ExpressionStatement","src":"27048:46:22"},{"expression":{"id":4679,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"27108:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4676,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"27118:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"313238","id":4677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27125:3:22","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"27118:10:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27108:20:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4680,"nodeType":"ExpressionStatement","src":"27108:20:22"},{"expression":{"id":4685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4681,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"27142:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4682,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"27152:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27159:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27152:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27142:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4686,"nodeType":"ExpressionStatement","src":"27142:19:22"},{"expression":{"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4687,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"27176:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4690,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"27199:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"},"id":4696,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"},"id":4693,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27208:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":4692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27213:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27208:7:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}}],"id":4694,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27207:9:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551616_by_1","typeString":"int_const 18446744073709551616"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27219:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27207:13:22","typeDescriptions":{"typeIdentifier":"t_rational_18446744073709551615_by_1","typeString":"int_const 18446744073709551615"}},"src":"27199:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4688,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"27183:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27192:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"27183:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27183:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27176:45:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4700,"nodeType":"ExpressionStatement","src":"27176:45:22"},{"expression":{"id":4705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4701,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"27235:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4702,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"27245:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3634","id":4703,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27252:2:22","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"27245:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27235:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4706,"nodeType":"ExpressionStatement","src":"27235:19:22"},{"expression":{"id":4711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"27268:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4708,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"27278:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":4709,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27285:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27278:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27268:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4712,"nodeType":"ExpressionStatement","src":"27268:18:22"},{"expression":{"id":4725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4713,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"27301:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"27324:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"},"id":4722,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":4719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4717,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27333:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":4718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27338:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27333:7:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":4720,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27332:9:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4721,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27344:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27332:13:22","typeDescriptions":{"typeIdentifier":"t_rational_4294967295_by_1","typeString":"int_const 4294967295"}},"src":"27324:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4714,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"27308:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27317:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"27308:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27308:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27301:45:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4726,"nodeType":"ExpressionStatement","src":"27301:45:22"},{"expression":{"id":4731,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4727,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"27360:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4730,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4728,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"27370:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3332","id":4729,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27377:2:22","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"27370:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27360:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4732,"nodeType":"ExpressionStatement","src":"27360:19:22"},{"expression":{"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4733,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"27393:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4734,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"27403:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"34","id":4735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27410:1:22","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"27403:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27393:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4738,"nodeType":"ExpressionStatement","src":"27393:18:22"},{"expression":{"id":4751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4739,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"27426:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4742,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"27449:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"},"id":4748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"id":4745,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4743,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27458:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3136","id":4744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27463:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27458:7:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}}],"id":4746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27457:9:22","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27469:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27457:13:22","typeDescriptions":{"typeIdentifier":"t_rational_65535_by_1","typeString":"int_const 65535"}},"src":"27449:21:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4740,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"27433:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27442:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"27433:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27433:38:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27426:45:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4752,"nodeType":"ExpressionStatement","src":"27426:45:22"},{"expression":{"id":4757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4753,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"27485:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4754,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"27495:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3136","id":4755,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27502:2:22","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"27495:9:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27485:19:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4758,"nodeType":"ExpressionStatement","src":"27485:19:22"},{"expression":{"id":4763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4759,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"27518:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4762,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4760,"name":"isGt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4659,"src":"27528:4:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"32","id":4761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27535:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"27528:8:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27518:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4764,"nodeType":"ExpressionStatement","src":"27518:18:22"},{"expression":{"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4765,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"27551:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4768,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4649,"src":"27577:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"commonType":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"id":4774,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"id":4771,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27586:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"38","id":4770,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27591:1:22","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"27586:6:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}}],"id":4772,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"27585:8:22","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":4773,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27596:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"27585:12:22","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"}},"src":"27577:20:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4766,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"27561:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27570:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"27561:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4776,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27561:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27551:47:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4778,"nodeType":"ExpressionStatement","src":"27551:47:22"}]},{"expression":{"id":4780,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4655,"src":"27625:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4653,"id":4781,"nodeType":"Return","src":"27618:13:22"}]},"documentation":{"id":4647,"nodeType":"StructuredDocumentation","src":"26650:246:22","text":" @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":4783,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"26910:6:22","nodeType":"FunctionDefinition","parameters":{"id":4650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4649,"mutability":"mutable","name":"value","nameLocation":"26925:5:22","nodeType":"VariableDeclaration","scope":4783,"src":"26917:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4648,"name":"uint256","nodeType":"ElementaryTypeName","src":"26917:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26916:15:22"},"returnParameters":{"id":4653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4783,"src":"26955:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4651,"name":"uint256","nodeType":"ElementaryTypeName","src":"26955:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26954:9:22"},"scope":4840,"src":"26901:737:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4819,"nodeType":"Block","src":"27875:184:22","statements":[{"id":4818,"nodeType":"UncheckedBlock","src":"27885:168:22","statements":[{"assignments":[4795],"declarations":[{"constant":false,"id":4795,"mutability":"mutable","name":"result","nameLocation":"27917:6:22","nodeType":"VariableDeclaration","scope":4818,"src":"27909:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4794,"name":"uint256","nodeType":"ElementaryTypeName","src":"27909:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4799,"initialValue":{"arguments":[{"id":4797,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"27933:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4796,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[4783,4820],"referencedDeclaration":4783,"src":"27926:6:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4798,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27926:13:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"27909:30:22"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4800,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"27960:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4804,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4789,"src":"28002:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}],"id":4803,"name":"unsignedRoundsUp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4839,"src":"27985:16:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_Rounding_$3246_$returns$_t_bool_$","typeString":"function (enum Math.Rounding) pure returns (bool)"}},"id":4805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27985:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4806,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28015:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4807,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4795,"src":"28021:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"33","id":4808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28031:1:22","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"28021:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4810,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"28020:13:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:18:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":4812,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4786,"src":"28036:5:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"28015:26:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"27985:56:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":4801,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"27969:8:22","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":4802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"27978:6:22","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"27969:15:22","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":4815,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27969:73:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"27960:82:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4793,"id":4817,"nodeType":"Return","src":"27953:89:22"}]}]},"documentation":{"id":4784,"nodeType":"StructuredDocumentation","src":"27644:144:22","text":" @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":4820,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"27802:6:22","nodeType":"FunctionDefinition","parameters":{"id":4790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4786,"mutability":"mutable","name":"value","nameLocation":"27817:5:22","nodeType":"VariableDeclaration","scope":4820,"src":"27809:13:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4785,"name":"uint256","nodeType":"ElementaryTypeName","src":"27809:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4789,"mutability":"mutable","name":"rounding","nameLocation":"27833:8:22","nodeType":"VariableDeclaration","scope":4820,"src":"27824:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"},"typeName":{"id":4788,"nodeType":"UserDefinedTypeName","pathNode":{"id":4787,"name":"Rounding","nameLocations":["27824:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3246,"src":"27824:8:22"},"referencedDeclaration":3246,"src":"27824:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"27808:34:22"},"returnParameters":{"id":4793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4820,"src":"27866:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4791,"name":"uint256","nodeType":"ElementaryTypeName","src":"27866:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"27865:9:22"},"scope":4840,"src":"27793:266:22","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4838,"nodeType":"Block","src":"28257:48:22","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4831,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4824,"src":"28280:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}],"id":4830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28274:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":4829,"name":"uint8","nodeType":"ElementaryTypeName","src":"28274:5:22","typeDescriptions":{}}},"id":4832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28274:15:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":4833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28292:1:22","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"28274:19:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":4835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28297:1:22","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"28274:24:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4828,"id":4837,"nodeType":"Return","src":"28267:31:22"}]},"documentation":{"id":4821,"nodeType":"StructuredDocumentation","src":"28065:113:22","text":" @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."},"id":4839,"implemented":true,"kind":"function","modifiers":[],"name":"unsignedRoundsUp","nameLocation":"28192:16:22","nodeType":"FunctionDefinition","parameters":{"id":4825,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4824,"mutability":"mutable","name":"rounding","nameLocation":"28218:8:22","nodeType":"VariableDeclaration","scope":4839,"src":"28209:17:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"},"typeName":{"id":4823,"nodeType":"UserDefinedTypeName","pathNode":{"id":4822,"name":"Rounding","nameLocations":["28209:8:22"],"nodeType":"IdentifierPath","referencedDeclaration":3246,"src":"28209:8:22"},"referencedDeclaration":3246,"src":"28209:8:22","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$3246","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"28208:19:22"},"returnParameters":{"id":4828,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4827,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4839,"src":"28251:4:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4826,"name":"bool","nodeType":"ElementaryTypeName","src":"28251:4:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"28250:6:22"},"scope":4840,"src":"28183:122:22","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":4841,"src":"281:28026:22","usedErrors":[],"usedEvents":[]}],"src":"103:28205:22"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"id":23,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[6605]},"id":6606,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4842,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"192:24:23"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":4843,"nodeType":"StructuredDocumentation","src":"218:550:23","text":" @dev Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":6605,"linearizedBaseContracts":[6605],"name":"SafeCast","nameLocation":"777:8:23","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":4844,"nodeType":"StructuredDocumentation","src":"792:68:23","text":" @dev Value doesn't fit in an uint of `bits` size."},"errorSelector":"6dfcc650","id":4850,"name":"SafeCastOverflowedUintDowncast","nameLocation":"871:30:23","nodeType":"ErrorDefinition","parameters":{"id":4849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4846,"mutability":"mutable","name":"bits","nameLocation":"908:4:23","nodeType":"VariableDeclaration","scope":4850,"src":"902:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4845,"name":"uint8","nodeType":"ElementaryTypeName","src":"902:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4848,"mutability":"mutable","name":"value","nameLocation":"922:5:23","nodeType":"VariableDeclaration","scope":4850,"src":"914:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4847,"name":"uint256","nodeType":"ElementaryTypeName","src":"914:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"901:27:23"},"src":"865:64:23"},{"documentation":{"id":4851,"nodeType":"StructuredDocumentation","src":"935:75:23","text":" @dev An int value doesn't fit in an uint of `bits` size."},"errorSelector":"a8ce4432","id":4855,"name":"SafeCastOverflowedIntToUint","nameLocation":"1021:27:23","nodeType":"ErrorDefinition","parameters":{"id":4854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4853,"mutability":"mutable","name":"value","nameLocation":"1056:5:23","nodeType":"VariableDeclaration","scope":4855,"src":"1049:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4852,"name":"int256","nodeType":"ElementaryTypeName","src":"1049:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1048:14:23"},"src":"1015:48:23"},{"documentation":{"id":4856,"nodeType":"StructuredDocumentation","src":"1069:67:23","text":" @dev Value doesn't fit in an int of `bits` size."},"errorSelector":"327269a7","id":4862,"name":"SafeCastOverflowedIntDowncast","nameLocation":"1147:29:23","nodeType":"ErrorDefinition","parameters":{"id":4861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4858,"mutability":"mutable","name":"bits","nameLocation":"1183:4:23","nodeType":"VariableDeclaration","scope":4862,"src":"1177:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4857,"name":"uint8","nodeType":"ElementaryTypeName","src":"1177:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":4860,"mutability":"mutable","name":"value","nameLocation":"1196:5:23","nodeType":"VariableDeclaration","scope":4862,"src":"1189:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4859,"name":"int256","nodeType":"ElementaryTypeName","src":"1189:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1176:26:23"},"src":"1141:62:23"},{"documentation":{"id":4863,"nodeType":"StructuredDocumentation","src":"1209:75:23","text":" @dev An uint value doesn't fit in an int of `bits` size."},"errorSelector":"24775e06","id":4867,"name":"SafeCastOverflowedUintToInt","nameLocation":"1295:27:23","nodeType":"ErrorDefinition","parameters":{"id":4866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4865,"mutability":"mutable","name":"value","nameLocation":"1331:5:23","nodeType":"VariableDeclaration","scope":4867,"src":"1323:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1322:15:23"},"src":"1289:49:23"},{"body":{"id":4894,"nodeType":"Block","src":"1695:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4875,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"1709:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4878,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1722:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4877,"name":"uint248","nodeType":"ElementaryTypeName","src":"1722:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":4876,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1717:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1717:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":4880,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1731:3:23","memberName":"max","nodeType":"MemberAccess","src":"1717:17:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1709:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4888,"nodeType":"IfStatement","src":"1705:105:23","trueBody":{"id":4887,"nodeType":"Block","src":"1736:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":4883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1788:3:23","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":4884,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"1793:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4882,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"1757:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4885,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1757:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4886,"nodeType":"RevertStatement","src":"1750:49:23"}]}},{"expression":{"arguments":[{"id":4891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4870,"src":"1834:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1826:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":4889,"name":"uint248","nodeType":"ElementaryTypeName","src":"1826:7:23","typeDescriptions":{}}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1826:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":4874,"id":4893,"nodeType":"Return","src":"1819:21:23"}]},"documentation":{"id":4868,"nodeType":"StructuredDocumentation","src":"1344:280:23","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":4895,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1638:9:23","nodeType":"FunctionDefinition","parameters":{"id":4871,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4870,"mutability":"mutable","name":"value","nameLocation":"1656:5:23","nodeType":"VariableDeclaration","scope":4895,"src":"1648:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4869,"name":"uint256","nodeType":"ElementaryTypeName","src":"1648:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1647:15:23"},"returnParameters":{"id":4874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4873,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4895,"src":"1686:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":4872,"name":"uint248","nodeType":"ElementaryTypeName","src":"1686:7:23","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1685:9:23"},"scope":6605,"src":"1629:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4922,"nodeType":"Block","src":"2204:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4903,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"2218:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4906,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2231:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4905,"name":"uint240","nodeType":"ElementaryTypeName","src":"2231:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":4904,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2226:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2226:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":4908,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2240:3:23","memberName":"max","nodeType":"MemberAccess","src":"2226:17:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"2218:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4916,"nodeType":"IfStatement","src":"2214:105:23","trueBody":{"id":4915,"nodeType":"Block","src":"2245:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":4911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2297:3:23","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":4912,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"2302:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4910,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"2266:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2266:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4914,"nodeType":"RevertStatement","src":"2259:49:23"}]}},{"expression":{"arguments":[{"id":4919,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"2343:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2335:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":4917,"name":"uint240","nodeType":"ElementaryTypeName","src":"2335:7:23","typeDescriptions":{}}},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2335:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":4902,"id":4921,"nodeType":"Return","src":"2328:21:23"}]},"documentation":{"id":4896,"nodeType":"StructuredDocumentation","src":"1853:280:23","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":4923,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"2147:9:23","nodeType":"FunctionDefinition","parameters":{"id":4899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4898,"mutability":"mutable","name":"value","nameLocation":"2165:5:23","nodeType":"VariableDeclaration","scope":4923,"src":"2157:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4897,"name":"uint256","nodeType":"ElementaryTypeName","src":"2157:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2156:15:23"},"returnParameters":{"id":4902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4923,"src":"2195:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":4900,"name":"uint240","nodeType":"ElementaryTypeName","src":"2195:7:23","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"2194:9:23"},"scope":6605,"src":"2138:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4950,"nodeType":"Block","src":"2713:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"2727:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4934,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2740:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4933,"name":"uint232","nodeType":"ElementaryTypeName","src":"2740:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":4932,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2735:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2735:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":4936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2749:3:23","memberName":"max","nodeType":"MemberAccess","src":"2735:17:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2727:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4944,"nodeType":"IfStatement","src":"2723:105:23","trueBody":{"id":4943,"nodeType":"Block","src":"2754:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":4939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2806:3:23","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":4940,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"2811:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4938,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"2775:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2775:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4942,"nodeType":"RevertStatement","src":"2768:49:23"}]}},{"expression":{"arguments":[{"id":4947,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4926,"src":"2852:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4946,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2844:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":4945,"name":"uint232","nodeType":"ElementaryTypeName","src":"2844:7:23","typeDescriptions":{}}},"id":4948,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2844:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":4930,"id":4949,"nodeType":"Return","src":"2837:21:23"}]},"documentation":{"id":4924,"nodeType":"StructuredDocumentation","src":"2362:280:23","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":4951,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2656:9:23","nodeType":"FunctionDefinition","parameters":{"id":4927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4926,"mutability":"mutable","name":"value","nameLocation":"2674:5:23","nodeType":"VariableDeclaration","scope":4951,"src":"2666:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4925,"name":"uint256","nodeType":"ElementaryTypeName","src":"2666:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2665:15:23"},"returnParameters":{"id":4930,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4929,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4951,"src":"2704:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":4928,"name":"uint232","nodeType":"ElementaryTypeName","src":"2704:7:23","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2703:9:23"},"scope":6605,"src":"2647:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":4978,"nodeType":"Block","src":"3222:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4959,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"3236:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4962,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3249:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4961,"name":"uint224","nodeType":"ElementaryTypeName","src":"3249:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":4960,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3244:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3244:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":4964,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3258:3:23","memberName":"max","nodeType":"MemberAccess","src":"3244:17:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"3236:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4972,"nodeType":"IfStatement","src":"3232:105:23","trueBody":{"id":4971,"nodeType":"Block","src":"3263:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":4967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3315:3:23","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":4968,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"3320:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4966,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"3284:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3284:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4970,"nodeType":"RevertStatement","src":"3277:49:23"}]}},{"expression":{"arguments":[{"id":4975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4954,"src":"3361:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3353:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":4973,"name":"uint224","nodeType":"ElementaryTypeName","src":"3353:7:23","typeDescriptions":{}}},"id":4976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3353:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":4958,"id":4977,"nodeType":"Return","src":"3346:21:23"}]},"documentation":{"id":4952,"nodeType":"StructuredDocumentation","src":"2871:280:23","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":4979,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"3165:9:23","nodeType":"FunctionDefinition","parameters":{"id":4955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4954,"mutability":"mutable","name":"value","nameLocation":"3183:5:23","nodeType":"VariableDeclaration","scope":4979,"src":"3175:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4953,"name":"uint256","nodeType":"ElementaryTypeName","src":"3175:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3174:15:23"},"returnParameters":{"id":4958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4957,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4979,"src":"3213:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":4956,"name":"uint224","nodeType":"ElementaryTypeName","src":"3213:7:23","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"3212:9:23"},"scope":6605,"src":"3156:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5006,"nodeType":"Block","src":"3731:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4987,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"3745:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":4990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3758:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":4989,"name":"uint216","nodeType":"ElementaryTypeName","src":"3758:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":4988,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3753:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":4991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3753:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":4992,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3767:3:23","memberName":"max","nodeType":"MemberAccess","src":"3753:17:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3745:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5000,"nodeType":"IfStatement","src":"3741:105:23","trueBody":{"id":4999,"nodeType":"Block","src":"3772:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":4995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3824:3:23","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":4996,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"3829:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4994,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"3793:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3793:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":4998,"nodeType":"RevertStatement","src":"3786:49:23"}]}},{"expression":{"arguments":[{"id":5003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4982,"src":"3870:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3862:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":5001,"name":"uint216","nodeType":"ElementaryTypeName","src":"3862:7:23","typeDescriptions":{}}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3862:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":4986,"id":5005,"nodeType":"Return","src":"3855:21:23"}]},"documentation":{"id":4980,"nodeType":"StructuredDocumentation","src":"3380:280:23","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5007,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3674:9:23","nodeType":"FunctionDefinition","parameters":{"id":4983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4982,"mutability":"mutable","name":"value","nameLocation":"3692:5:23","nodeType":"VariableDeclaration","scope":5007,"src":"3684:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4981,"name":"uint256","nodeType":"ElementaryTypeName","src":"3684:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3683:15:23"},"returnParameters":{"id":4986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4985,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5007,"src":"3722:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":4984,"name":"uint216","nodeType":"ElementaryTypeName","src":"3722:7:23","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3721:9:23"},"scope":6605,"src":"3665:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5034,"nodeType":"Block","src":"4240:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5015,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"4254:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5018,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4267:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5017,"name":"uint208","nodeType":"ElementaryTypeName","src":"4267:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":5016,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4262:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5019,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4262:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":5020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4276:3:23","memberName":"max","nodeType":"MemberAccess","src":"4262:17:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"4254:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5028,"nodeType":"IfStatement","src":"4250:105:23","trueBody":{"id":5027,"nodeType":"Block","src":"4281:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5023,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4333:3:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5024,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"4338:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5022,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"4302:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4302:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5026,"nodeType":"RevertStatement","src":"4295:49:23"}]}},{"expression":{"arguments":[{"id":5031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5010,"src":"4379:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5030,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4371:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":5029,"name":"uint208","nodeType":"ElementaryTypeName","src":"4371:7:23","typeDescriptions":{}}},"id":5032,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4371:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":5014,"id":5033,"nodeType":"Return","src":"4364:21:23"}]},"documentation":{"id":5008,"nodeType":"StructuredDocumentation","src":"3889:280:23","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5035,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"4183:9:23","nodeType":"FunctionDefinition","parameters":{"id":5011,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5010,"mutability":"mutable","name":"value","nameLocation":"4201:5:23","nodeType":"VariableDeclaration","scope":5035,"src":"4193:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5009,"name":"uint256","nodeType":"ElementaryTypeName","src":"4193:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4192:15:23"},"returnParameters":{"id":5014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5013,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5035,"src":"4231:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":5012,"name":"uint208","nodeType":"ElementaryTypeName","src":"4231:7:23","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"4230:9:23"},"scope":6605,"src":"4174:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5062,"nodeType":"Block","src":"4749:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"4763:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4776:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5045,"name":"uint200","nodeType":"ElementaryTypeName","src":"4776:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":5044,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4771:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4771:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":5048,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4785:3:23","memberName":"max","nodeType":"MemberAccess","src":"4771:17:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4763:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5056,"nodeType":"IfStatement","src":"4759:105:23","trueBody":{"id":5055,"nodeType":"Block","src":"4790:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4842:3:23","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5052,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"4847:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5050,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"4811:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4811:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5054,"nodeType":"RevertStatement","src":"4804:49:23"}]}},{"expression":{"arguments":[{"id":5059,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5038,"src":"4888:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5058,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":5057,"name":"uint200","nodeType":"ElementaryTypeName","src":"4880:7:23","typeDescriptions":{}}},"id":5060,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":5042,"id":5061,"nodeType":"Return","src":"4873:21:23"}]},"documentation":{"id":5036,"nodeType":"StructuredDocumentation","src":"4398:280:23","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5063,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4692:9:23","nodeType":"FunctionDefinition","parameters":{"id":5039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5038,"mutability":"mutable","name":"value","nameLocation":"4710:5:23","nodeType":"VariableDeclaration","scope":5063,"src":"4702:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5037,"name":"uint256","nodeType":"ElementaryTypeName","src":"4702:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4701:15:23"},"returnParameters":{"id":5042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5063,"src":"4740:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":5040,"name":"uint200","nodeType":"ElementaryTypeName","src":"4740:7:23","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4739:9:23"},"scope":6605,"src":"4683:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5090,"nodeType":"Block","src":"5258:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5071,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"5272:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5074,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5285:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5073,"name":"uint192","nodeType":"ElementaryTypeName","src":"5285:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":5072,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5280:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5280:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":5076,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5294:3:23","memberName":"max","nodeType":"MemberAccess","src":"5280:17:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5272:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5084,"nodeType":"IfStatement","src":"5268:105:23","trueBody":{"id":5083,"nodeType":"Block","src":"5299:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5351:3:23","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5080,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"5356:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5078,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"5320:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5081,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5320:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5082,"nodeType":"RevertStatement","src":"5313:49:23"}]}},{"expression":{"arguments":[{"id":5087,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5066,"src":"5397:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5389:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":5085,"name":"uint192","nodeType":"ElementaryTypeName","src":"5389:7:23","typeDescriptions":{}}},"id":5088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5389:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":5070,"id":5089,"nodeType":"Return","src":"5382:21:23"}]},"documentation":{"id":5064,"nodeType":"StructuredDocumentation","src":"4907:280:23","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5091,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"5201:9:23","nodeType":"FunctionDefinition","parameters":{"id":5067,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5066,"mutability":"mutable","name":"value","nameLocation":"5219:5:23","nodeType":"VariableDeclaration","scope":5091,"src":"5211:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5065,"name":"uint256","nodeType":"ElementaryTypeName","src":"5211:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5210:15:23"},"returnParameters":{"id":5070,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5069,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5091,"src":"5249:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":5068,"name":"uint192","nodeType":"ElementaryTypeName","src":"5249:7:23","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"5248:9:23"},"scope":6605,"src":"5192:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5118,"nodeType":"Block","src":"5767:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"5781:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5794:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5101,"name":"uint184","nodeType":"ElementaryTypeName","src":"5794:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":5100,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5789:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5789:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":5104,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5803:3:23","memberName":"max","nodeType":"MemberAccess","src":"5789:17:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5781:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5112,"nodeType":"IfStatement","src":"5777:105:23","trueBody":{"id":5111,"nodeType":"Block","src":"5808:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5107,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5860:3:23","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5108,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"5865:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5106,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"5829:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5829:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5110,"nodeType":"RevertStatement","src":"5822:49:23"}]}},{"expression":{"arguments":[{"id":5115,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5094,"src":"5906:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5898:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":5113,"name":"uint184","nodeType":"ElementaryTypeName","src":"5898:7:23","typeDescriptions":{}}},"id":5116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5898:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":5098,"id":5117,"nodeType":"Return","src":"5891:21:23"}]},"documentation":{"id":5092,"nodeType":"StructuredDocumentation","src":"5416:280:23","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5119,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5710:9:23","nodeType":"FunctionDefinition","parameters":{"id":5095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5094,"mutability":"mutable","name":"value","nameLocation":"5728:5:23","nodeType":"VariableDeclaration","scope":5119,"src":"5720:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5093,"name":"uint256","nodeType":"ElementaryTypeName","src":"5720:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5719:15:23"},"returnParameters":{"id":5098,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5097,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5119,"src":"5758:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":5096,"name":"uint184","nodeType":"ElementaryTypeName","src":"5758:7:23","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5757:9:23"},"scope":6605,"src":"5701:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5146,"nodeType":"Block","src":"6276:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5127,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"6290:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5130,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6303:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5129,"name":"uint176","nodeType":"ElementaryTypeName","src":"6303:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":5128,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6298:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5131,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6298:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":5132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6312:3:23","memberName":"max","nodeType":"MemberAccess","src":"6298:17:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6290:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5140,"nodeType":"IfStatement","src":"6286:105:23","trueBody":{"id":5139,"nodeType":"Block","src":"6317:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":5135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:3:23","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":5136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"6374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5134,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"6338:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6338:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5138,"nodeType":"RevertStatement","src":"6331:49:23"}]}},{"expression":{"arguments":[{"id":5143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5122,"src":"6415:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5142,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6407:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":5141,"name":"uint176","nodeType":"ElementaryTypeName","src":"6407:7:23","typeDescriptions":{}}},"id":5144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6407:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":5126,"id":5145,"nodeType":"Return","src":"6400:21:23"}]},"documentation":{"id":5120,"nodeType":"StructuredDocumentation","src":"5925:280:23","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":5147,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"6219:9:23","nodeType":"FunctionDefinition","parameters":{"id":5123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5122,"mutability":"mutable","name":"value","nameLocation":"6237:5:23","nodeType":"VariableDeclaration","scope":5147,"src":"6229:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5121,"name":"uint256","nodeType":"ElementaryTypeName","src":"6229:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6228:15:23"},"returnParameters":{"id":5126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5125,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5147,"src":"6267:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":5124,"name":"uint176","nodeType":"ElementaryTypeName","src":"6267:7:23","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6266:9:23"},"scope":6605,"src":"6210:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5174,"nodeType":"Block","src":"6785:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5155,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"6799:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6812:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5157,"name":"uint168","nodeType":"ElementaryTypeName","src":"6812:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":5156,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6807:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5159,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6807:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6821:3:23","memberName":"max","nodeType":"MemberAccess","src":"6807:17:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6799:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5168,"nodeType":"IfStatement","src":"6795:105:23","trueBody":{"id":5167,"nodeType":"Block","src":"6826:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":5163,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6878:3:23","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":5164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"6883:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5162,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"6847:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6847:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5166,"nodeType":"RevertStatement","src":"6840:49:23"}]}},{"expression":{"arguments":[{"id":5171,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5150,"src":"6924:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5170,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6916:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":5169,"name":"uint168","nodeType":"ElementaryTypeName","src":"6916:7:23","typeDescriptions":{}}},"id":5172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6916:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":5154,"id":5173,"nodeType":"Return","src":"6909:21:23"}]},"documentation":{"id":5148,"nodeType":"StructuredDocumentation","src":"6434:280:23","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":5175,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6728:9:23","nodeType":"FunctionDefinition","parameters":{"id":5151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5150,"mutability":"mutable","name":"value","nameLocation":"6746:5:23","nodeType":"VariableDeclaration","scope":5175,"src":"6738:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5149,"name":"uint256","nodeType":"ElementaryTypeName","src":"6738:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6737:15:23"},"returnParameters":{"id":5154,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5153,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5175,"src":"6776:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":5152,"name":"uint168","nodeType":"ElementaryTypeName","src":"6776:7:23","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6775:9:23"},"scope":6605,"src":"6719:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5202,"nodeType":"Block","src":"7294:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5183,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"7308:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5186,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7321:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5185,"name":"uint160","nodeType":"ElementaryTypeName","src":"7321:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":5184,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7316:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7316:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7330:3:23","memberName":"max","nodeType":"MemberAccess","src":"7316:17:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7308:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5196,"nodeType":"IfStatement","src":"7304:105:23","trueBody":{"id":5195,"nodeType":"Block","src":"7335:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":5191,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7387:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":5192,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"7392:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5190,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"7356:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7356:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5194,"nodeType":"RevertStatement","src":"7349:49:23"}]}},{"expression":{"arguments":[{"id":5199,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5178,"src":"7433:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5198,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7425:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":5197,"name":"uint160","nodeType":"ElementaryTypeName","src":"7425:7:23","typeDescriptions":{}}},"id":5200,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7425:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":5182,"id":5201,"nodeType":"Return","src":"7418:21:23"}]},"documentation":{"id":5176,"nodeType":"StructuredDocumentation","src":"6943:280:23","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":5203,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7237:9:23","nodeType":"FunctionDefinition","parameters":{"id":5179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5178,"mutability":"mutable","name":"value","nameLocation":"7255:5:23","nodeType":"VariableDeclaration","scope":5203,"src":"7247:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5177,"name":"uint256","nodeType":"ElementaryTypeName","src":"7247:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7246:15:23"},"returnParameters":{"id":5182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5181,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5203,"src":"7285:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":5180,"name":"uint160","nodeType":"ElementaryTypeName","src":"7285:7:23","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7284:9:23"},"scope":6605,"src":"7228:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5230,"nodeType":"Block","src":"7803:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"7817:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7830:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5213,"name":"uint152","nodeType":"ElementaryTypeName","src":"7830:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":5212,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7825:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7825:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":5216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7839:3:23","memberName":"max","nodeType":"MemberAccess","src":"7825:17:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7817:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5224,"nodeType":"IfStatement","src":"7813:105:23","trueBody":{"id":5223,"nodeType":"Block","src":"7844:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":5219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:3:23","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":5220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"7901:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5218,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"7865:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5222,"nodeType":"RevertStatement","src":"7858:49:23"}]}},{"expression":{"arguments":[{"id":5227,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5206,"src":"7942:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7934:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":5225,"name":"uint152","nodeType":"ElementaryTypeName","src":"7934:7:23","typeDescriptions":{}}},"id":5228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7934:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":5210,"id":5229,"nodeType":"Return","src":"7927:21:23"}]},"documentation":{"id":5204,"nodeType":"StructuredDocumentation","src":"7452:280:23","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":5231,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7746:9:23","nodeType":"FunctionDefinition","parameters":{"id":5207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5206,"mutability":"mutable","name":"value","nameLocation":"7764:5:23","nodeType":"VariableDeclaration","scope":5231,"src":"7756:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5205,"name":"uint256","nodeType":"ElementaryTypeName","src":"7756:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7755:15:23"},"returnParameters":{"id":5210,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5209,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5231,"src":"7794:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":5208,"name":"uint152","nodeType":"ElementaryTypeName","src":"7794:7:23","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7793:9:23"},"scope":6605,"src":"7737:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5258,"nodeType":"Block","src":"8312:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"8326:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5242,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8339:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5241,"name":"uint144","nodeType":"ElementaryTypeName","src":"8339:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":5240,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8334:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8334:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":5244,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8348:3:23","memberName":"max","nodeType":"MemberAccess","src":"8334:17:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8326:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5252,"nodeType":"IfStatement","src":"8322:105:23","trueBody":{"id":5251,"nodeType":"Block","src":"8353:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":5247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8405:3:23","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":5248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"8410:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5246,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"8374:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8374:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5250,"nodeType":"RevertStatement","src":"8367:49:23"}]}},{"expression":{"arguments":[{"id":5255,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5234,"src":"8451:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5254,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8443:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":5253,"name":"uint144","nodeType":"ElementaryTypeName","src":"8443:7:23","typeDescriptions":{}}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8443:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":5238,"id":5257,"nodeType":"Return","src":"8436:21:23"}]},"documentation":{"id":5232,"nodeType":"StructuredDocumentation","src":"7961:280:23","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":5259,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8255:9:23","nodeType":"FunctionDefinition","parameters":{"id":5235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5234,"mutability":"mutable","name":"value","nameLocation":"8273:5:23","nodeType":"VariableDeclaration","scope":5259,"src":"8265:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5233,"name":"uint256","nodeType":"ElementaryTypeName","src":"8265:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8264:15:23"},"returnParameters":{"id":5238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5259,"src":"8303:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":5236,"name":"uint144","nodeType":"ElementaryTypeName","src":"8303:7:23","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8302:9:23"},"scope":6605,"src":"8246:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5286,"nodeType":"Block","src":"8821:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5267,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"8835:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8848:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5269,"name":"uint136","nodeType":"ElementaryTypeName","src":"8848:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":5268,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8843:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8843:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":5272,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8857:3:23","memberName":"max","nodeType":"MemberAccess","src":"8843:17:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8835:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5280,"nodeType":"IfStatement","src":"8831:105:23","trueBody":{"id":5279,"nodeType":"Block","src":"8862:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":5275,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8914:3:23","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":5276,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"8919:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5274,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"8883:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8883:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5278,"nodeType":"RevertStatement","src":"8876:49:23"}]}},{"expression":{"arguments":[{"id":5283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5262,"src":"8960:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8952:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":5281,"name":"uint136","nodeType":"ElementaryTypeName","src":"8952:7:23","typeDescriptions":{}}},"id":5284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8952:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":5266,"id":5285,"nodeType":"Return","src":"8945:21:23"}]},"documentation":{"id":5260,"nodeType":"StructuredDocumentation","src":"8470:280:23","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":5287,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8764:9:23","nodeType":"FunctionDefinition","parameters":{"id":5263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5262,"mutability":"mutable","name":"value","nameLocation":"8782:5:23","nodeType":"VariableDeclaration","scope":5287,"src":"8774:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5261,"name":"uint256","nodeType":"ElementaryTypeName","src":"8774:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8773:15:23"},"returnParameters":{"id":5266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5287,"src":"8812:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":5264,"name":"uint136","nodeType":"ElementaryTypeName","src":"8812:7:23","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8811:9:23"},"scope":6605,"src":"8755:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5314,"nodeType":"Block","src":"9330:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5295,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"9344:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5298,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9357:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5297,"name":"uint128","nodeType":"ElementaryTypeName","src":"9357:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":5296,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9352:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5299,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9352:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":5300,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9366:3:23","memberName":"max","nodeType":"MemberAccess","src":"9352:17:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9344:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5308,"nodeType":"IfStatement","src":"9340:105:23","trueBody":{"id":5307,"nodeType":"Block","src":"9371:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":5303,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9423:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":5304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"9428:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5302,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"9392:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5305,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9392:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5306,"nodeType":"RevertStatement","src":"9385:49:23"}]}},{"expression":{"arguments":[{"id":5311,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5290,"src":"9469:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5310,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9461:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":5309,"name":"uint128","nodeType":"ElementaryTypeName","src":"9461:7:23","typeDescriptions":{}}},"id":5312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9461:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":5294,"id":5313,"nodeType":"Return","src":"9454:21:23"}]},"documentation":{"id":5288,"nodeType":"StructuredDocumentation","src":"8979:280:23","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":5315,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9273:9:23","nodeType":"FunctionDefinition","parameters":{"id":5291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5290,"mutability":"mutable","name":"value","nameLocation":"9291:5:23","nodeType":"VariableDeclaration","scope":5315,"src":"9283:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5289,"name":"uint256","nodeType":"ElementaryTypeName","src":"9283:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9282:15:23"},"returnParameters":{"id":5294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5315,"src":"9321:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":5292,"name":"uint128","nodeType":"ElementaryTypeName","src":"9321:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9320:9:23"},"scope":6605,"src":"9264:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5342,"nodeType":"Block","src":"9839:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5323,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"9853:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5326,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9866:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5325,"name":"uint120","nodeType":"ElementaryTypeName","src":"9866:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":5324,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9861:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5327,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9861:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":5328,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9875:3:23","memberName":"max","nodeType":"MemberAccess","src":"9861:17:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9853:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5336,"nodeType":"IfStatement","src":"9849:105:23","trueBody":{"id":5335,"nodeType":"Block","src":"9880:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":5331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9932:3:23","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":5332,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"9937:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5330,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"9901:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9901:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5334,"nodeType":"RevertStatement","src":"9894:49:23"}]}},{"expression":{"arguments":[{"id":5339,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5318,"src":"9978:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9970:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":5337,"name":"uint120","nodeType":"ElementaryTypeName","src":"9970:7:23","typeDescriptions":{}}},"id":5340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9970:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":5322,"id":5341,"nodeType":"Return","src":"9963:21:23"}]},"documentation":{"id":5316,"nodeType":"StructuredDocumentation","src":"9488:280:23","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":5343,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9782:9:23","nodeType":"FunctionDefinition","parameters":{"id":5319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5318,"mutability":"mutable","name":"value","nameLocation":"9800:5:23","nodeType":"VariableDeclaration","scope":5343,"src":"9792:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5317,"name":"uint256","nodeType":"ElementaryTypeName","src":"9792:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9791:15:23"},"returnParameters":{"id":5322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5343,"src":"9830:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":5320,"name":"uint120","nodeType":"ElementaryTypeName","src":"9830:7:23","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9829:9:23"},"scope":6605,"src":"9773:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5370,"nodeType":"Block","src":"10348:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5351,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5346,"src":"10362:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5354,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10375:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5353,"name":"uint112","nodeType":"ElementaryTypeName","src":"10375:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":5352,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10370:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5355,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10370:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":5356,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10384:3:23","memberName":"max","nodeType":"MemberAccess","src":"10370:17:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10362:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5364,"nodeType":"IfStatement","src":"10358:105:23","trueBody":{"id":5363,"nodeType":"Block","src":"10389:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":5359,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10441:3:23","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":5360,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5346,"src":"10446:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5358,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"10410:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10410:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5362,"nodeType":"RevertStatement","src":"10403:49:23"}]}},{"expression":{"arguments":[{"id":5367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5346,"src":"10487:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10479:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":5365,"name":"uint112","nodeType":"ElementaryTypeName","src":"10479:7:23","typeDescriptions":{}}},"id":5368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10479:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":5350,"id":5369,"nodeType":"Return","src":"10472:21:23"}]},"documentation":{"id":5344,"nodeType":"StructuredDocumentation","src":"9997:280:23","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":5371,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10291:9:23","nodeType":"FunctionDefinition","parameters":{"id":5347,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5346,"mutability":"mutable","name":"value","nameLocation":"10309:5:23","nodeType":"VariableDeclaration","scope":5371,"src":"10301:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5345,"name":"uint256","nodeType":"ElementaryTypeName","src":"10301:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10300:15:23"},"returnParameters":{"id":5350,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5349,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5371,"src":"10339:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":5348,"name":"uint112","nodeType":"ElementaryTypeName","src":"10339:7:23","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10338:9:23"},"scope":6605,"src":"10282:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5398,"nodeType":"Block","src":"10857:152:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"10871:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10884:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5381,"name":"uint104","nodeType":"ElementaryTypeName","src":"10884:7:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":5380,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10879:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10879:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":5384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10893:3:23","memberName":"max","nodeType":"MemberAccess","src":"10879:17:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10871:25:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5392,"nodeType":"IfStatement","src":"10867:105:23","trueBody":{"id":5391,"nodeType":"Block","src":"10898:74:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":5387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10950:3:23","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":5388,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"10955:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5386,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"10919:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10919:42:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5390,"nodeType":"RevertStatement","src":"10912:49:23"}]}},{"expression":{"arguments":[{"id":5395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5374,"src":"10996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5394,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10988:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":5393,"name":"uint104","nodeType":"ElementaryTypeName","src":"10988:7:23","typeDescriptions":{}}},"id":5396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10988:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":5378,"id":5397,"nodeType":"Return","src":"10981:21:23"}]},"documentation":{"id":5372,"nodeType":"StructuredDocumentation","src":"10506:280:23","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":5399,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10800:9:23","nodeType":"FunctionDefinition","parameters":{"id":5375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5374,"mutability":"mutable","name":"value","nameLocation":"10818:5:23","nodeType":"VariableDeclaration","scope":5399,"src":"10810:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5373,"name":"uint256","nodeType":"ElementaryTypeName","src":"10810:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10809:15:23"},"returnParameters":{"id":5378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5377,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5399,"src":"10848:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":5376,"name":"uint104","nodeType":"ElementaryTypeName","src":"10848:7:23","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10847:9:23"},"scope":6605,"src":"10791:218:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5426,"nodeType":"Block","src":"11360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5407,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"11374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5409,"name":"uint96","nodeType":"ElementaryTypeName","src":"11387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":5408,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":5412,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11395:3:23","memberName":"max","nodeType":"MemberAccess","src":"11382:16:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5420,"nodeType":"IfStatement","src":"11370:103:23","trueBody":{"id":5419,"nodeType":"Block","src":"11400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":5415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":5416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"11456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5414,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"11421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5418,"nodeType":"RevertStatement","src":"11414:48:23"}]}},{"expression":{"arguments":[{"id":5423,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5402,"src":"11496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5422,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":5421,"name":"uint96","nodeType":"ElementaryTypeName","src":"11489:6:23","typeDescriptions":{}}},"id":5424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":5406,"id":5425,"nodeType":"Return","src":"11482:20:23"}]},"documentation":{"id":5400,"nodeType":"StructuredDocumentation","src":"11015:276:23","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":5427,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11305:8:23","nodeType":"FunctionDefinition","parameters":{"id":5403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5402,"mutability":"mutable","name":"value","nameLocation":"11322:5:23","nodeType":"VariableDeclaration","scope":5427,"src":"11314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5401,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:15:23"},"returnParameters":{"id":5406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5427,"src":"11352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":5404,"name":"uint96","nodeType":"ElementaryTypeName","src":"11352:6:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11351:8:23"},"scope":6605,"src":"11296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5454,"nodeType":"Block","src":"11860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"11874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5438,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5437,"name":"uint88","nodeType":"ElementaryTypeName","src":"11887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":5436,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":5440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11895:3:23","memberName":"max","nodeType":"MemberAccess","src":"11882:16:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5448,"nodeType":"IfStatement","src":"11870:103:23","trueBody":{"id":5447,"nodeType":"Block","src":"11900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":5443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":5444,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"11956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5442,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"11921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5446,"nodeType":"RevertStatement","src":"11914:48:23"}]}},{"expression":{"arguments":[{"id":5451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5430,"src":"11996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":5449,"name":"uint88","nodeType":"ElementaryTypeName","src":"11989:6:23","typeDescriptions":{}}},"id":5452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":5434,"id":5453,"nodeType":"Return","src":"11982:20:23"}]},"documentation":{"id":5428,"nodeType":"StructuredDocumentation","src":"11515:276:23","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":5455,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11805:8:23","nodeType":"FunctionDefinition","parameters":{"id":5431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5430,"mutability":"mutable","name":"value","nameLocation":"11822:5:23","nodeType":"VariableDeclaration","scope":5455,"src":"11814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5429,"name":"uint256","nodeType":"ElementaryTypeName","src":"11814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11813:15:23"},"returnParameters":{"id":5434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5455,"src":"11852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":5432,"name":"uint88","nodeType":"ElementaryTypeName","src":"11852:6:23","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11851:8:23"},"scope":6605,"src":"11796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5482,"nodeType":"Block","src":"12360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5469,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5463,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"12374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5466,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5465,"name":"uint80","nodeType":"ElementaryTypeName","src":"12387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":5464,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":5468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12395:3:23","memberName":"max","nodeType":"MemberAccess","src":"12382:16:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5476,"nodeType":"IfStatement","src":"12370:103:23","trueBody":{"id":5475,"nodeType":"Block","src":"12400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":5471,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":5472,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"12456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5470,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"12421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5474,"nodeType":"RevertStatement","src":"12414:48:23"}]}},{"expression":{"arguments":[{"id":5479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5458,"src":"12496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":5477,"name":"uint80","nodeType":"ElementaryTypeName","src":"12489:6:23","typeDescriptions":{}}},"id":5480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":5462,"id":5481,"nodeType":"Return","src":"12482:20:23"}]},"documentation":{"id":5456,"nodeType":"StructuredDocumentation","src":"12015:276:23","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":5483,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12305:8:23","nodeType":"FunctionDefinition","parameters":{"id":5459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5458,"mutability":"mutable","name":"value","nameLocation":"12322:5:23","nodeType":"VariableDeclaration","scope":5483,"src":"12314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5457,"name":"uint256","nodeType":"ElementaryTypeName","src":"12314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12313:15:23"},"returnParameters":{"id":5462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5483,"src":"12352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":5460,"name":"uint80","nodeType":"ElementaryTypeName","src":"12352:6:23","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12351:8:23"},"scope":6605,"src":"12296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5510,"nodeType":"Block","src":"12860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"12874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5494,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5493,"name":"uint72","nodeType":"ElementaryTypeName","src":"12887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":5492,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5495,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":5496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12895:3:23","memberName":"max","nodeType":"MemberAccess","src":"12882:16:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5504,"nodeType":"IfStatement","src":"12870:103:23","trueBody":{"id":5503,"nodeType":"Block","src":"12900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":5499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":5500,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"12956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5498,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"12921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5502,"nodeType":"RevertStatement","src":"12914:48:23"}]}},{"expression":{"arguments":[{"id":5507,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5486,"src":"12996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5506,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":5505,"name":"uint72","nodeType":"ElementaryTypeName","src":"12989:6:23","typeDescriptions":{}}},"id":5508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":5490,"id":5509,"nodeType":"Return","src":"12982:20:23"}]},"documentation":{"id":5484,"nodeType":"StructuredDocumentation","src":"12515:276:23","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":5511,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12805:8:23","nodeType":"FunctionDefinition","parameters":{"id":5487,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5486,"mutability":"mutable","name":"value","nameLocation":"12822:5:23","nodeType":"VariableDeclaration","scope":5511,"src":"12814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5485,"name":"uint256","nodeType":"ElementaryTypeName","src":"12814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12813:15:23"},"returnParameters":{"id":5490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5489,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5511,"src":"12852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":5488,"name":"uint72","nodeType":"ElementaryTypeName","src":"12852:6:23","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12851:8:23"},"scope":6605,"src":"12796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5538,"nodeType":"Block","src":"13360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5519,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"13374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5521,"name":"uint64","nodeType":"ElementaryTypeName","src":"13387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":5520,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5523,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":5524,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13395:3:23","memberName":"max","nodeType":"MemberAccess","src":"13382:16:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5532,"nodeType":"IfStatement","src":"13370:103:23","trueBody":{"id":5531,"nodeType":"Block","src":"13400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":5527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":5528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"13456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5526,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"13421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5530,"nodeType":"RevertStatement","src":"13414:48:23"}]}},{"expression":{"arguments":[{"id":5535,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5514,"src":"13496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":5533,"name":"uint64","nodeType":"ElementaryTypeName","src":"13489:6:23","typeDescriptions":{}}},"id":5536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":5518,"id":5537,"nodeType":"Return","src":"13482:20:23"}]},"documentation":{"id":5512,"nodeType":"StructuredDocumentation","src":"13015:276:23","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":5539,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13305:8:23","nodeType":"FunctionDefinition","parameters":{"id":5515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5514,"mutability":"mutable","name":"value","nameLocation":"13322:5:23","nodeType":"VariableDeclaration","scope":5539,"src":"13314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5513,"name":"uint256","nodeType":"ElementaryTypeName","src":"13314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13313:15:23"},"returnParameters":{"id":5518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5517,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5539,"src":"13352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":5516,"name":"uint64","nodeType":"ElementaryTypeName","src":"13352:6:23","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13351:8:23"},"scope":6605,"src":"13296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5566,"nodeType":"Block","src":"13860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5547,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"13874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5550,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5549,"name":"uint56","nodeType":"ElementaryTypeName","src":"13887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":5548,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":5552,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13895:3:23","memberName":"max","nodeType":"MemberAccess","src":"13882:16:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5560,"nodeType":"IfStatement","src":"13870:103:23","trueBody":{"id":5559,"nodeType":"Block","src":"13900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":5555,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":5556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"13956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5554,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"13921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5557,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5558,"nodeType":"RevertStatement","src":"13914:48:23"}]}},{"expression":{"arguments":[{"id":5563,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5542,"src":"13996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5562,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":5561,"name":"uint56","nodeType":"ElementaryTypeName","src":"13989:6:23","typeDescriptions":{}}},"id":5564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":5546,"id":5565,"nodeType":"Return","src":"13982:20:23"}]},"documentation":{"id":5540,"nodeType":"StructuredDocumentation","src":"13515:276:23","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":5567,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13805:8:23","nodeType":"FunctionDefinition","parameters":{"id":5543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5542,"mutability":"mutable","name":"value","nameLocation":"13822:5:23","nodeType":"VariableDeclaration","scope":5567,"src":"13814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5541,"name":"uint256","nodeType":"ElementaryTypeName","src":"13814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13813:15:23"},"returnParameters":{"id":5546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5567,"src":"13852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":5544,"name":"uint56","nodeType":"ElementaryTypeName","src":"13852:6:23","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13851:8:23"},"scope":6605,"src":"13796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5594,"nodeType":"Block","src":"14360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5575,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"14374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5577,"name":"uint48","nodeType":"ElementaryTypeName","src":"14387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":5576,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":5580,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14395:3:23","memberName":"max","nodeType":"MemberAccess","src":"14382:16:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5588,"nodeType":"IfStatement","src":"14370:103:23","trueBody":{"id":5587,"nodeType":"Block","src":"14400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":5583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":5584,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"14456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5582,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"14421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5586,"nodeType":"RevertStatement","src":"14414:48:23"}]}},{"expression":{"arguments":[{"id":5591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5570,"src":"14496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":5589,"name":"uint48","nodeType":"ElementaryTypeName","src":"14489:6:23","typeDescriptions":{}}},"id":5592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":5574,"id":5593,"nodeType":"Return","src":"14482:20:23"}]},"documentation":{"id":5568,"nodeType":"StructuredDocumentation","src":"14015:276:23","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":5595,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14305:8:23","nodeType":"FunctionDefinition","parameters":{"id":5571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5570,"mutability":"mutable","name":"value","nameLocation":"14322:5:23","nodeType":"VariableDeclaration","scope":5595,"src":"14314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5569,"name":"uint256","nodeType":"ElementaryTypeName","src":"14314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14313:15:23"},"returnParameters":{"id":5574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5595,"src":"14352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":5572,"name":"uint48","nodeType":"ElementaryTypeName","src":"14352:6:23","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14351:8:23"},"scope":6605,"src":"14296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5622,"nodeType":"Block","src":"14860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5603,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"14874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5606,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5605,"name":"uint40","nodeType":"ElementaryTypeName","src":"14887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":5604,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":5608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14895:3:23","memberName":"max","nodeType":"MemberAccess","src":"14882:16:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5616,"nodeType":"IfStatement","src":"14870:103:23","trueBody":{"id":5615,"nodeType":"Block","src":"14900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":5611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":5612,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"14956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5610,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"14921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5614,"nodeType":"RevertStatement","src":"14914:48:23"}]}},{"expression":{"arguments":[{"id":5619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5598,"src":"14996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":5617,"name":"uint40","nodeType":"ElementaryTypeName","src":"14989:6:23","typeDescriptions":{}}},"id":5620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":5602,"id":5621,"nodeType":"Return","src":"14982:20:23"}]},"documentation":{"id":5596,"nodeType":"StructuredDocumentation","src":"14515:276:23","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":5623,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14805:8:23","nodeType":"FunctionDefinition","parameters":{"id":5599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5598,"mutability":"mutable","name":"value","nameLocation":"14822:5:23","nodeType":"VariableDeclaration","scope":5623,"src":"14814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5597,"name":"uint256","nodeType":"ElementaryTypeName","src":"14814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14813:15:23"},"returnParameters":{"id":5602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5623,"src":"14852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":5600,"name":"uint40","nodeType":"ElementaryTypeName","src":"14852:6:23","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14851:8:23"},"scope":6605,"src":"14796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5650,"nodeType":"Block","src":"15360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5631,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"15374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5633,"name":"uint32","nodeType":"ElementaryTypeName","src":"15387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":5632,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5635,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":5636,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15395:3:23","memberName":"max","nodeType":"MemberAccess","src":"15382:16:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5644,"nodeType":"IfStatement","src":"15370:103:23","trueBody":{"id":5643,"nodeType":"Block","src":"15400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":5639,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":5640,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"15456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5638,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"15421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5642,"nodeType":"RevertStatement","src":"15414:48:23"}]}},{"expression":{"arguments":[{"id":5647,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5626,"src":"15496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":5645,"name":"uint32","nodeType":"ElementaryTypeName","src":"15489:6:23","typeDescriptions":{}}},"id":5648,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":5630,"id":5649,"nodeType":"Return","src":"15482:20:23"}]},"documentation":{"id":5624,"nodeType":"StructuredDocumentation","src":"15015:276:23","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":5651,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15305:8:23","nodeType":"FunctionDefinition","parameters":{"id":5627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5626,"mutability":"mutable","name":"value","nameLocation":"15322:5:23","nodeType":"VariableDeclaration","scope":5651,"src":"15314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5625,"name":"uint256","nodeType":"ElementaryTypeName","src":"15314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15313:15:23"},"returnParameters":{"id":5630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5651,"src":"15352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":5628,"name":"uint32","nodeType":"ElementaryTypeName","src":"15352:6:23","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15351:8:23"},"scope":6605,"src":"15296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5678,"nodeType":"Block","src":"15860:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5659,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"15874:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15887:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5661,"name":"uint24","nodeType":"ElementaryTypeName","src":"15887:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":5660,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15882:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5663,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15882:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":5664,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15895:3:23","memberName":"max","nodeType":"MemberAccess","src":"15882:16:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15874:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5672,"nodeType":"IfStatement","src":"15870:103:23","trueBody":{"id":5671,"nodeType":"Block","src":"15900:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":5667,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15952:2:23","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":5668,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"15956:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5666,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"15921:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15921:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5670,"nodeType":"RevertStatement","src":"15914:48:23"}]}},{"expression":{"arguments":[{"id":5675,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5654,"src":"15996:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5674,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":5673,"name":"uint24","nodeType":"ElementaryTypeName","src":"15989:6:23","typeDescriptions":{}}},"id":5676,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":5658,"id":5677,"nodeType":"Return","src":"15982:20:23"}]},"documentation":{"id":5652,"nodeType":"StructuredDocumentation","src":"15515:276:23","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":5679,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15805:8:23","nodeType":"FunctionDefinition","parameters":{"id":5655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5654,"mutability":"mutable","name":"value","nameLocation":"15822:5:23","nodeType":"VariableDeclaration","scope":5679,"src":"15814:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5653,"name":"uint256","nodeType":"ElementaryTypeName","src":"15814:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15813:15:23"},"returnParameters":{"id":5658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5679,"src":"15852:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":5656,"name":"uint24","nodeType":"ElementaryTypeName","src":"15852:6:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15851:8:23"},"scope":6605,"src":"15796:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5706,"nodeType":"Block","src":"16360:149:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5687,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"16374:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16387:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5689,"name":"uint16","nodeType":"ElementaryTypeName","src":"16387:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":5688,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16382:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5691,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16382:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":5692,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16395:3:23","memberName":"max","nodeType":"MemberAccess","src":"16382:16:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16374:24:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5700,"nodeType":"IfStatement","src":"16370:103:23","trueBody":{"id":5699,"nodeType":"Block","src":"16400:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":5695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16452:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":5696,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"16456:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5694,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"16421:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16421:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5698,"nodeType":"RevertStatement","src":"16414:48:23"}]}},{"expression":{"arguments":[{"id":5703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5682,"src":"16496:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16489:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":5701,"name":"uint16","nodeType":"ElementaryTypeName","src":"16489:6:23","typeDescriptions":{}}},"id":5704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16489:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":5686,"id":5705,"nodeType":"Return","src":"16482:20:23"}]},"documentation":{"id":5680,"nodeType":"StructuredDocumentation","src":"16015:276:23","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":5707,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16305:8:23","nodeType":"FunctionDefinition","parameters":{"id":5683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5682,"mutability":"mutable","name":"value","nameLocation":"16322:5:23","nodeType":"VariableDeclaration","scope":5707,"src":"16314:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5681,"name":"uint256","nodeType":"ElementaryTypeName","src":"16314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16313:15:23"},"returnParameters":{"id":5686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5707,"src":"16352:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":5684,"name":"uint16","nodeType":"ElementaryTypeName","src":"16352:6:23","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16351:8:23"},"scope":6605,"src":"16296:213:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5734,"nodeType":"Block","src":"16854:146:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5715,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"16868:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"arguments":[{"id":5718,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16881:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5717,"name":"uint8","nodeType":"ElementaryTypeName","src":"16881:5:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":5716,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16876:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":5719,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16876:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":5720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16888:3:23","memberName":"max","nodeType":"MemberAccess","src":"16876:15:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16868:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5728,"nodeType":"IfStatement","src":"16864:101:23","trueBody":{"id":5727,"nodeType":"Block","src":"16893:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":5723,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16945:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":5724,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"16948:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5722,"name":"SafeCastOverflowedUintDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"16914:30:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$","typeString":"function (uint8,uint256) pure returns (error)"}},"id":5725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16914:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5726,"nodeType":"RevertStatement","src":"16907:47:23"}]}},{"expression":{"arguments":[{"id":5731,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5710,"src":"16987:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5730,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16981:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":5729,"name":"uint8","nodeType":"ElementaryTypeName","src":"16981:5:23","typeDescriptions":{}}},"id":5732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16981:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":5714,"id":5733,"nodeType":"Return","src":"16974:19:23"}]},"documentation":{"id":5708,"nodeType":"StructuredDocumentation","src":"16515:272:23","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":5735,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16801:7:23","nodeType":"FunctionDefinition","parameters":{"id":5711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5710,"mutability":"mutable","name":"value","nameLocation":"16817:5:23","nodeType":"VariableDeclaration","scope":5735,"src":"16809:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5709,"name":"uint256","nodeType":"ElementaryTypeName","src":"16809:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16808:15:23"},"returnParameters":{"id":5714,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5713,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5735,"src":"16847:5:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":5712,"name":"uint8","nodeType":"ElementaryTypeName","src":"16847:5:23","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16846:7:23"},"scope":6605,"src":"16792:208:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5757,"nodeType":"Block","src":"17236:128:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5743,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"17250:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":5744,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17258:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17250:9:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5751,"nodeType":"IfStatement","src":"17246:81:23","trueBody":{"id":5750,"nodeType":"Block","src":"17261:66:23","statements":[{"errorCall":{"arguments":[{"id":5747,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"17310:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5746,"name":"SafeCastOverflowedIntToUint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4855,"src":"17282:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_int256_$returns$_t_error_$","typeString":"function (int256) pure returns (error)"}},"id":5748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17282:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5749,"nodeType":"RevertStatement","src":"17275:41:23"}]}},{"expression":{"arguments":[{"id":5754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5738,"src":"17351:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17343:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":5752,"name":"uint256","nodeType":"ElementaryTypeName","src":"17343:7:23","typeDescriptions":{}}},"id":5755,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17343:14:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":5742,"id":5756,"nodeType":"Return","src":"17336:21:23"}]},"documentation":{"id":5736,"nodeType":"StructuredDocumentation","src":"17006:160:23","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."},"id":5758,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17180:9:23","nodeType":"FunctionDefinition","parameters":{"id":5739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5738,"mutability":"mutable","name":"value","nameLocation":"17197:5:23","nodeType":"VariableDeclaration","scope":5758,"src":"17190:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5737,"name":"int256","nodeType":"ElementaryTypeName","src":"17190:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17189:14:23"},"returnParameters":{"id":5742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5741,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":5758,"src":"17227:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5740,"name":"uint256","nodeType":"ElementaryTypeName","src":"17227:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17226:9:23"},"scope":6605,"src":"17171:193:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5783,"nodeType":"Block","src":"17761:150:23","statements":[{"expression":{"id":5771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5766,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"17771:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5769,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"17791:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17784:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":5767,"name":"int248","nodeType":"ElementaryTypeName","src":"17784:6:23","typeDescriptions":{}}},"id":5770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17784:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17771:26:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":5772,"nodeType":"ExpressionStatement","src":"17771:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5773,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5764,"src":"17811:10:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5774,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"17825:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17811:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5782,"nodeType":"IfStatement","src":"17807:98:23","trueBody":{"id":5781,"nodeType":"Block","src":"17832:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323438","id":5777,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17883:3:23","typeDescriptions":{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},"value":"248"},{"id":5778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5761,"src":"17888:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_248_by_1","typeString":"int_const 248"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5776,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"17853:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17853:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5780,"nodeType":"RevertStatement","src":"17846:48:23"}]}}]},"documentation":{"id":5759,"nodeType":"StructuredDocumentation","src":"17370:312:23","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"},"id":5784,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17696:8:23","nodeType":"FunctionDefinition","parameters":{"id":5762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5761,"mutability":"mutable","name":"value","nameLocation":"17712:5:23","nodeType":"VariableDeclaration","scope":5784,"src":"17705:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5760,"name":"int256","nodeType":"ElementaryTypeName","src":"17705:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17704:14:23"},"returnParameters":{"id":5765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5764,"mutability":"mutable","name":"downcasted","nameLocation":"17749:10:23","nodeType":"VariableDeclaration","scope":5784,"src":"17742:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":5763,"name":"int248","nodeType":"ElementaryTypeName","src":"17742:6:23","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17741:19:23"},"scope":6605,"src":"17687:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5809,"nodeType":"Block","src":"18308:150:23","statements":[{"expression":{"id":5797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5792,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"18318:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5795,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"18338:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18331:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":5793,"name":"int240","nodeType":"ElementaryTypeName","src":"18331:6:23","typeDescriptions":{}}},"id":5796,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18331:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18318:26:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":5798,"nodeType":"ExpressionStatement","src":"18318:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5801,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5799,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5790,"src":"18358:10:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"18372:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18358:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5808,"nodeType":"IfStatement","src":"18354:98:23","trueBody":{"id":5807,"nodeType":"Block","src":"18379:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323430","id":5803,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18430:3:23","typeDescriptions":{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},"value":"240"},{"id":5804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5787,"src":"18435:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_240_by_1","typeString":"int_const 240"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5802,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"18400:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18400:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5806,"nodeType":"RevertStatement","src":"18393:48:23"}]}}]},"documentation":{"id":5785,"nodeType":"StructuredDocumentation","src":"17917:312:23","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"},"id":5810,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18243:8:23","nodeType":"FunctionDefinition","parameters":{"id":5788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5787,"mutability":"mutable","name":"value","nameLocation":"18259:5:23","nodeType":"VariableDeclaration","scope":5810,"src":"18252:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5786,"name":"int256","nodeType":"ElementaryTypeName","src":"18252:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18251:14:23"},"returnParameters":{"id":5791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5790,"mutability":"mutable","name":"downcasted","nameLocation":"18296:10:23","nodeType":"VariableDeclaration","scope":5810,"src":"18289:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":5789,"name":"int240","nodeType":"ElementaryTypeName","src":"18289:6:23","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18288:19:23"},"scope":6605,"src":"18234:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5835,"nodeType":"Block","src":"18855:150:23","statements":[{"expression":{"id":5823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5818,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"18865:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5821,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"18885:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5820,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18878:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":5819,"name":"int232","nodeType":"ElementaryTypeName","src":"18878:6:23","typeDescriptions":{}}},"id":5822,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18878:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18865:26:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":5824,"nodeType":"ExpressionStatement","src":"18865:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5825,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5816,"src":"18905:10:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5826,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"18919:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18905:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5834,"nodeType":"IfStatement","src":"18901:98:23","trueBody":{"id":5833,"nodeType":"Block","src":"18926:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323332","id":5829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18977:3:23","typeDescriptions":{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},"value":"232"},{"id":5830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5813,"src":"18982:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_232_by_1","typeString":"int_const 232"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5828,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"18947:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18947:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5832,"nodeType":"RevertStatement","src":"18940:48:23"}]}}]},"documentation":{"id":5811,"nodeType":"StructuredDocumentation","src":"18464:312:23","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"},"id":5836,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18790:8:23","nodeType":"FunctionDefinition","parameters":{"id":5814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5813,"mutability":"mutable","name":"value","nameLocation":"18806:5:23","nodeType":"VariableDeclaration","scope":5836,"src":"18799:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5812,"name":"int256","nodeType":"ElementaryTypeName","src":"18799:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18798:14:23"},"returnParameters":{"id":5817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5816,"mutability":"mutable","name":"downcasted","nameLocation":"18843:10:23","nodeType":"VariableDeclaration","scope":5836,"src":"18836:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":5815,"name":"int232","nodeType":"ElementaryTypeName","src":"18836:6:23","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18835:19:23"},"scope":6605,"src":"18781:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5861,"nodeType":"Block","src":"19402:150:23","statements":[{"expression":{"id":5849,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5844,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"19412:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5847,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"19432:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5846,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19425:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":5845,"name":"int224","nodeType":"ElementaryTypeName","src":"19425:6:23","typeDescriptions":{}}},"id":5848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19425:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19412:26:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":5850,"nodeType":"ExpressionStatement","src":"19412:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5851,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5842,"src":"19452:10:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5852,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"19466:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19452:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5860,"nodeType":"IfStatement","src":"19448:98:23","trueBody":{"id":5859,"nodeType":"Block","src":"19473:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323234","id":5855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19524:3:23","typeDescriptions":{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},"value":"224"},{"id":5856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5839,"src":"19529:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_224_by_1","typeString":"int_const 224"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5854,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"19494:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19494:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5858,"nodeType":"RevertStatement","src":"19487:48:23"}]}}]},"documentation":{"id":5837,"nodeType":"StructuredDocumentation","src":"19011:312:23","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"},"id":5862,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19337:8:23","nodeType":"FunctionDefinition","parameters":{"id":5840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5839,"mutability":"mutable","name":"value","nameLocation":"19353:5:23","nodeType":"VariableDeclaration","scope":5862,"src":"19346:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5838,"name":"int256","nodeType":"ElementaryTypeName","src":"19346:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19345:14:23"},"returnParameters":{"id":5843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5842,"mutability":"mutable","name":"downcasted","nameLocation":"19390:10:23","nodeType":"VariableDeclaration","scope":5862,"src":"19383:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":5841,"name":"int224","nodeType":"ElementaryTypeName","src":"19383:6:23","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19382:19:23"},"scope":6605,"src":"19328:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5887,"nodeType":"Block","src":"19949:150:23","statements":[{"expression":{"id":5875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5870,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"19959:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5873,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"19979:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5872,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19972:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":5871,"name":"int216","nodeType":"ElementaryTypeName","src":"19972:6:23","typeDescriptions":{}}},"id":5874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19972:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"19959:26:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":5876,"nodeType":"ExpressionStatement","src":"19959:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5879,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5877,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5868,"src":"19999:10:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"20013:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19999:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5886,"nodeType":"IfStatement","src":"19995:98:23","trueBody":{"id":5885,"nodeType":"Block","src":"20020:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323136","id":5881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20071:3:23","typeDescriptions":{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},"value":"216"},{"id":5882,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5865,"src":"20076:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_216_by_1","typeString":"int_const 216"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5880,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"20041:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5883,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20041:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5884,"nodeType":"RevertStatement","src":"20034:48:23"}]}}]},"documentation":{"id":5863,"nodeType":"StructuredDocumentation","src":"19558:312:23","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"},"id":5888,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19884:8:23","nodeType":"FunctionDefinition","parameters":{"id":5866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5865,"mutability":"mutable","name":"value","nameLocation":"19900:5:23","nodeType":"VariableDeclaration","scope":5888,"src":"19893:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5864,"name":"int256","nodeType":"ElementaryTypeName","src":"19893:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19892:14:23"},"returnParameters":{"id":5869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5868,"mutability":"mutable","name":"downcasted","nameLocation":"19937:10:23","nodeType":"VariableDeclaration","scope":5888,"src":"19930:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":5867,"name":"int216","nodeType":"ElementaryTypeName","src":"19930:6:23","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"19929:19:23"},"scope":6605,"src":"19875:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5913,"nodeType":"Block","src":"20496:150:23","statements":[{"expression":{"id":5901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5896,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"20506:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5899,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"20526:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20519:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":5897,"name":"int208","nodeType":"ElementaryTypeName","src":"20519:6:23","typeDescriptions":{}}},"id":5900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20519:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20506:26:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":5902,"nodeType":"ExpressionStatement","src":"20506:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5903,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5894,"src":"20546:10:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"20560:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20546:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5912,"nodeType":"IfStatement","src":"20542:98:23","trueBody":{"id":5911,"nodeType":"Block","src":"20567:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323038","id":5907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20618:3:23","typeDescriptions":{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},"value":"208"},{"id":5908,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5891,"src":"20623:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_208_by_1","typeString":"int_const 208"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5906,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"20588:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20588:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5910,"nodeType":"RevertStatement","src":"20581:48:23"}]}}]},"documentation":{"id":5889,"nodeType":"StructuredDocumentation","src":"20105:312:23","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"},"id":5914,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20431:8:23","nodeType":"FunctionDefinition","parameters":{"id":5892,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5891,"mutability":"mutable","name":"value","nameLocation":"20447:5:23","nodeType":"VariableDeclaration","scope":5914,"src":"20440:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5890,"name":"int256","nodeType":"ElementaryTypeName","src":"20440:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20439:14:23"},"returnParameters":{"id":5895,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5894,"mutability":"mutable","name":"downcasted","nameLocation":"20484:10:23","nodeType":"VariableDeclaration","scope":5914,"src":"20477:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":5893,"name":"int208","nodeType":"ElementaryTypeName","src":"20477:6:23","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20476:19:23"},"scope":6605,"src":"20422:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5939,"nodeType":"Block","src":"21043:150:23","statements":[{"expression":{"id":5927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5922,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"21053:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5925,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5917,"src":"21073:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5924,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21066:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":5923,"name":"int200","nodeType":"ElementaryTypeName","src":"21066:6:23","typeDescriptions":{}}},"id":5926,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21066:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21053:26:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":5928,"nodeType":"ExpressionStatement","src":"21053:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5929,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5920,"src":"21093:10:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5930,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5917,"src":"21107:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21093:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5938,"nodeType":"IfStatement","src":"21089:98:23","trueBody":{"id":5937,"nodeType":"Block","src":"21114:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"323030","id":5933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21165:3:23","typeDescriptions":{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},"value":"200"},{"id":5934,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5917,"src":"21170:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_200_by_1","typeString":"int_const 200"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5932,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"21135:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21135:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5936,"nodeType":"RevertStatement","src":"21128:48:23"}]}}]},"documentation":{"id":5915,"nodeType":"StructuredDocumentation","src":"20652:312:23","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"},"id":5940,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"20978:8:23","nodeType":"FunctionDefinition","parameters":{"id":5918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5917,"mutability":"mutable","name":"value","nameLocation":"20994:5:23","nodeType":"VariableDeclaration","scope":5940,"src":"20987:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5916,"name":"int256","nodeType":"ElementaryTypeName","src":"20987:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20986:14:23"},"returnParameters":{"id":5921,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5920,"mutability":"mutable","name":"downcasted","nameLocation":"21031:10:23","nodeType":"VariableDeclaration","scope":5940,"src":"21024:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":5919,"name":"int200","nodeType":"ElementaryTypeName","src":"21024:6:23","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21023:19:23"},"scope":6605,"src":"20969:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5965,"nodeType":"Block","src":"21590:150:23","statements":[{"expression":{"id":5953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5948,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"21600:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5951,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"21620:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21613:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":5949,"name":"int192","nodeType":"ElementaryTypeName","src":"21613:6:23","typeDescriptions":{}}},"id":5952,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21613:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21600:26:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":5954,"nodeType":"ExpressionStatement","src":"21600:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5955,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5946,"src":"21640:10:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5956,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"21654:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21640:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5964,"nodeType":"IfStatement","src":"21636:98:23","trueBody":{"id":5963,"nodeType":"Block","src":"21661:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313932","id":5959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21712:3:23","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},{"id":5960,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5943,"src":"21717:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5958,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"21682:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21682:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5962,"nodeType":"RevertStatement","src":"21675:48:23"}]}}]},"documentation":{"id":5941,"nodeType":"StructuredDocumentation","src":"21199:312:23","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"},"id":5966,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21525:8:23","nodeType":"FunctionDefinition","parameters":{"id":5944,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5943,"mutability":"mutable","name":"value","nameLocation":"21541:5:23","nodeType":"VariableDeclaration","scope":5966,"src":"21534:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5942,"name":"int256","nodeType":"ElementaryTypeName","src":"21534:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21533:14:23"},"returnParameters":{"id":5947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5946,"mutability":"mutable","name":"downcasted","nameLocation":"21578:10:23","nodeType":"VariableDeclaration","scope":5966,"src":"21571:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":5945,"name":"int192","nodeType":"ElementaryTypeName","src":"21571:6:23","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21570:19:23"},"scope":6605,"src":"21516:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5991,"nodeType":"Block","src":"22137:150:23","statements":[{"expression":{"id":5979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5974,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"22147:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5977,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"22167:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5976,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22160:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":5975,"name":"int184","nodeType":"ElementaryTypeName","src":"22160:6:23","typeDescriptions":{}}},"id":5978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22160:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22147:26:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":5980,"nodeType":"ExpressionStatement","src":"22147:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":5983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5981,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5972,"src":"22187:10:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":5982,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"22201:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22187:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5990,"nodeType":"IfStatement","src":"22183:98:23","trueBody":{"id":5989,"nodeType":"Block","src":"22208:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313834","id":5985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22259:3:23","typeDescriptions":{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},"value":"184"},{"id":5986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5969,"src":"22264:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_184_by_1","typeString":"int_const 184"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":5984,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"22229:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":5987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22229:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":5988,"nodeType":"RevertStatement","src":"22222:48:23"}]}}]},"documentation":{"id":5967,"nodeType":"StructuredDocumentation","src":"21746:312:23","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"},"id":5992,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22072:8:23","nodeType":"FunctionDefinition","parameters":{"id":5970,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5969,"mutability":"mutable","name":"value","nameLocation":"22088:5:23","nodeType":"VariableDeclaration","scope":5992,"src":"22081:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5968,"name":"int256","nodeType":"ElementaryTypeName","src":"22081:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22080:14:23"},"returnParameters":{"id":5973,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5972,"mutability":"mutable","name":"downcasted","nameLocation":"22125:10:23","nodeType":"VariableDeclaration","scope":5992,"src":"22118:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":5971,"name":"int184","nodeType":"ElementaryTypeName","src":"22118:6:23","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22117:19:23"},"scope":6605,"src":"22063:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6017,"nodeType":"Block","src":"22684:150:23","statements":[{"expression":{"id":6005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6000,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5998,"src":"22694:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6003,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5995,"src":"22714:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6002,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22707:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":6001,"name":"int176","nodeType":"ElementaryTypeName","src":"22707:6:23","typeDescriptions":{}}},"id":6004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22707:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22694:26:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":6006,"nodeType":"ExpressionStatement","src":"22694:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6007,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5998,"src":"22734:10:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5995,"src":"22748:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22734:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6016,"nodeType":"IfStatement","src":"22730:98:23","trueBody":{"id":6015,"nodeType":"Block","src":"22755:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313736","id":6011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22806:3:23","typeDescriptions":{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},"value":"176"},{"id":6012,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5995,"src":"22811:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_176_by_1","typeString":"int_const 176"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6010,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"22776:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22776:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6014,"nodeType":"RevertStatement","src":"22769:48:23"}]}}]},"documentation":{"id":5993,"nodeType":"StructuredDocumentation","src":"22293:312:23","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"},"id":6018,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22619:8:23","nodeType":"FunctionDefinition","parameters":{"id":5996,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5995,"mutability":"mutable","name":"value","nameLocation":"22635:5:23","nodeType":"VariableDeclaration","scope":6018,"src":"22628:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":5994,"name":"int256","nodeType":"ElementaryTypeName","src":"22628:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22627:14:23"},"returnParameters":{"id":5999,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5998,"mutability":"mutable","name":"downcasted","nameLocation":"22672:10:23","nodeType":"VariableDeclaration","scope":6018,"src":"22665:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":5997,"name":"int176","nodeType":"ElementaryTypeName","src":"22665:6:23","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22664:19:23"},"scope":6605,"src":"22610:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6043,"nodeType":"Block","src":"23231:150:23","statements":[{"expression":{"id":6031,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6026,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"23241:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6029,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"23261:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23254:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":6027,"name":"int168","nodeType":"ElementaryTypeName","src":"23254:6:23","typeDescriptions":{}}},"id":6030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23254:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23241:26:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":6032,"nodeType":"ExpressionStatement","src":"23241:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6033,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6024,"src":"23281:10:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6034,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"23295:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23281:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6042,"nodeType":"IfStatement","src":"23277:98:23","trueBody":{"id":6041,"nodeType":"Block","src":"23302:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313638","id":6037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23353:3:23","typeDescriptions":{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},"value":"168"},{"id":6038,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6021,"src":"23358:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_168_by_1","typeString":"int_const 168"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6036,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"23323:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23323:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6040,"nodeType":"RevertStatement","src":"23316:48:23"}]}}]},"documentation":{"id":6019,"nodeType":"StructuredDocumentation","src":"22840:312:23","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"},"id":6044,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23166:8:23","nodeType":"FunctionDefinition","parameters":{"id":6022,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6021,"mutability":"mutable","name":"value","nameLocation":"23182:5:23","nodeType":"VariableDeclaration","scope":6044,"src":"23175:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6020,"name":"int256","nodeType":"ElementaryTypeName","src":"23175:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23174:14:23"},"returnParameters":{"id":6025,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6024,"mutability":"mutable","name":"downcasted","nameLocation":"23219:10:23","nodeType":"VariableDeclaration","scope":6044,"src":"23212:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":6023,"name":"int168","nodeType":"ElementaryTypeName","src":"23212:6:23","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23211:19:23"},"scope":6605,"src":"23157:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6069,"nodeType":"Block","src":"23778:150:23","statements":[{"expression":{"id":6057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6052,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"23788:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6055,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"23808:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6054,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23801:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":6053,"name":"int160","nodeType":"ElementaryTypeName","src":"23801:6:23","typeDescriptions":{}}},"id":6056,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23801:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23788:26:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":6058,"nodeType":"ExpressionStatement","src":"23788:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6061,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6059,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6050,"src":"23828:10:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"23842:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23828:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6068,"nodeType":"IfStatement","src":"23824:98:23","trueBody":{"id":6067,"nodeType":"Block","src":"23849:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313630","id":6063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23900:3:23","typeDescriptions":{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},"value":"160"},{"id":6064,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6047,"src":"23905:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_160_by_1","typeString":"int_const 160"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6062,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"23870:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6065,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23870:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6066,"nodeType":"RevertStatement","src":"23863:48:23"}]}}]},"documentation":{"id":6045,"nodeType":"StructuredDocumentation","src":"23387:312:23","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"},"id":6070,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23713:8:23","nodeType":"FunctionDefinition","parameters":{"id":6048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6047,"mutability":"mutable","name":"value","nameLocation":"23729:5:23","nodeType":"VariableDeclaration","scope":6070,"src":"23722:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6046,"name":"int256","nodeType":"ElementaryTypeName","src":"23722:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23721:14:23"},"returnParameters":{"id":6051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6050,"mutability":"mutable","name":"downcasted","nameLocation":"23766:10:23","nodeType":"VariableDeclaration","scope":6070,"src":"23759:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":6049,"name":"int160","nodeType":"ElementaryTypeName","src":"23759:6:23","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23758:19:23"},"scope":6605,"src":"23704:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6095,"nodeType":"Block","src":"24325:150:23","statements":[{"expression":{"id":6083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6078,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"24335:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6081,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"24355:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24348:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":6079,"name":"int152","nodeType":"ElementaryTypeName","src":"24348:6:23","typeDescriptions":{}}},"id":6082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24348:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24335:26:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":6084,"nodeType":"ExpressionStatement","src":"24335:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6085,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6076,"src":"24375:10:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"24389:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24375:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6094,"nodeType":"IfStatement","src":"24371:98:23","trueBody":{"id":6093,"nodeType":"Block","src":"24396:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313532","id":6089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24447:3:23","typeDescriptions":{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},"value":"152"},{"id":6090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6073,"src":"24452:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_152_by_1","typeString":"int_const 152"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6088,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24417:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24417:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6092,"nodeType":"RevertStatement","src":"24410:48:23"}]}}]},"documentation":{"id":6071,"nodeType":"StructuredDocumentation","src":"23934:312:23","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"},"id":6096,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24260:8:23","nodeType":"FunctionDefinition","parameters":{"id":6074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6073,"mutability":"mutable","name":"value","nameLocation":"24276:5:23","nodeType":"VariableDeclaration","scope":6096,"src":"24269:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6072,"name":"int256","nodeType":"ElementaryTypeName","src":"24269:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24268:14:23"},"returnParameters":{"id":6077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6076,"mutability":"mutable","name":"downcasted","nameLocation":"24313:10:23","nodeType":"VariableDeclaration","scope":6096,"src":"24306:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":6075,"name":"int152","nodeType":"ElementaryTypeName","src":"24306:6:23","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24305:19:23"},"scope":6605,"src":"24251:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6121,"nodeType":"Block","src":"24872:150:23","statements":[{"expression":{"id":6109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6104,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"24882:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6107,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"24902:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24895:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":6105,"name":"int144","nodeType":"ElementaryTypeName","src":"24895:6:23","typeDescriptions":{}}},"id":6108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24895:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"24882:26:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":6110,"nodeType":"ExpressionStatement","src":"24882:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6111,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6102,"src":"24922:10:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6112,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"24936:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24922:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6120,"nodeType":"IfStatement","src":"24918:98:23","trueBody":{"id":6119,"nodeType":"Block","src":"24943:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313434","id":6115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24994:3:23","typeDescriptions":{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},"value":"144"},{"id":6116,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6099,"src":"24999:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_144_by_1","typeString":"int_const 144"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6114,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"24964:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24964:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6118,"nodeType":"RevertStatement","src":"24957:48:23"}]}}]},"documentation":{"id":6097,"nodeType":"StructuredDocumentation","src":"24481:312:23","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"},"id":6122,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24807:8:23","nodeType":"FunctionDefinition","parameters":{"id":6100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6099,"mutability":"mutable","name":"value","nameLocation":"24823:5:23","nodeType":"VariableDeclaration","scope":6122,"src":"24816:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6098,"name":"int256","nodeType":"ElementaryTypeName","src":"24816:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24815:14:23"},"returnParameters":{"id":6103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6102,"mutability":"mutable","name":"downcasted","nameLocation":"24860:10:23","nodeType":"VariableDeclaration","scope":6122,"src":"24853:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":6101,"name":"int144","nodeType":"ElementaryTypeName","src":"24853:6:23","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"24852:19:23"},"scope":6605,"src":"24798:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6147,"nodeType":"Block","src":"25419:150:23","statements":[{"expression":{"id":6135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6130,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"25429:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6133,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"25449:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25442:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":6131,"name":"int136","nodeType":"ElementaryTypeName","src":"25442:6:23","typeDescriptions":{}}},"id":6134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25442:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25429:26:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":6136,"nodeType":"ExpressionStatement","src":"25429:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6137,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6128,"src":"25469:10:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6138,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"25483:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25469:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6146,"nodeType":"IfStatement","src":"25465:98:23","trueBody":{"id":6145,"nodeType":"Block","src":"25490:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313336","id":6141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"25541:3:23","typeDescriptions":{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},"value":"136"},{"id":6142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6125,"src":"25546:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_136_by_1","typeString":"int_const 136"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6140,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"25511:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25511:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6144,"nodeType":"RevertStatement","src":"25504:48:23"}]}}]},"documentation":{"id":6123,"nodeType":"StructuredDocumentation","src":"25028:312:23","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"},"id":6148,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25354:8:23","nodeType":"FunctionDefinition","parameters":{"id":6126,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6125,"mutability":"mutable","name":"value","nameLocation":"25370:5:23","nodeType":"VariableDeclaration","scope":6148,"src":"25363:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6124,"name":"int256","nodeType":"ElementaryTypeName","src":"25363:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25362:14:23"},"returnParameters":{"id":6129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6128,"mutability":"mutable","name":"downcasted","nameLocation":"25407:10:23","nodeType":"VariableDeclaration","scope":6148,"src":"25400:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":6127,"name":"int136","nodeType":"ElementaryTypeName","src":"25400:6:23","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25399:19:23"},"scope":6605,"src":"25345:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6173,"nodeType":"Block","src":"25966:150:23","statements":[{"expression":{"id":6161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6156,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"25976:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"25996:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25989:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":6157,"name":"int128","nodeType":"ElementaryTypeName","src":"25989:6:23","typeDescriptions":{}}},"id":6160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25989:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"25976:26:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":6162,"nodeType":"ExpressionStatement","src":"25976:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6163,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6154,"src":"26016:10:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6164,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"26030:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26016:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6172,"nodeType":"IfStatement","src":"26012:98:23","trueBody":{"id":6171,"nodeType":"Block","src":"26037:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313238","id":6167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26088:3:23","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},{"id":6168,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6151,"src":"26093:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6166,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"26058:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26058:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6170,"nodeType":"RevertStatement","src":"26051:48:23"}]}}]},"documentation":{"id":6149,"nodeType":"StructuredDocumentation","src":"25575:312:23","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"},"id":6174,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"25901:8:23","nodeType":"FunctionDefinition","parameters":{"id":6152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6151,"mutability":"mutable","name":"value","nameLocation":"25917:5:23","nodeType":"VariableDeclaration","scope":6174,"src":"25910:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6150,"name":"int256","nodeType":"ElementaryTypeName","src":"25910:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25909:14:23"},"returnParameters":{"id":6155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6154,"mutability":"mutable","name":"downcasted","nameLocation":"25954:10:23","nodeType":"VariableDeclaration","scope":6174,"src":"25947:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":6153,"name":"int128","nodeType":"ElementaryTypeName","src":"25947:6:23","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"25946:19:23"},"scope":6605,"src":"25892:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6199,"nodeType":"Block","src":"26513:150:23","statements":[{"expression":{"id":6187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6182,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"26523:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6185,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6177,"src":"26543:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26536:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":6183,"name":"int120","nodeType":"ElementaryTypeName","src":"26536:6:23","typeDescriptions":{}}},"id":6186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26536:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26523:26:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":6188,"nodeType":"ExpressionStatement","src":"26523:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6189,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6180,"src":"26563:10:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6190,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6177,"src":"26577:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26563:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6198,"nodeType":"IfStatement","src":"26559:98:23","trueBody":{"id":6197,"nodeType":"Block","src":"26584:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313230","id":6193,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"26635:3:23","typeDescriptions":{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},"value":"120"},{"id":6194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6177,"src":"26640:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_120_by_1","typeString":"int_const 120"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6192,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"26605:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26605:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6196,"nodeType":"RevertStatement","src":"26598:48:23"}]}}]},"documentation":{"id":6175,"nodeType":"StructuredDocumentation","src":"26122:312:23","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"},"id":6200,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26448:8:23","nodeType":"FunctionDefinition","parameters":{"id":6178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6177,"mutability":"mutable","name":"value","nameLocation":"26464:5:23","nodeType":"VariableDeclaration","scope":6200,"src":"26457:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6176,"name":"int256","nodeType":"ElementaryTypeName","src":"26457:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26456:14:23"},"returnParameters":{"id":6181,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6180,"mutability":"mutable","name":"downcasted","nameLocation":"26501:10:23","nodeType":"VariableDeclaration","scope":6200,"src":"26494:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":6179,"name":"int120","nodeType":"ElementaryTypeName","src":"26494:6:23","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26493:19:23"},"scope":6605,"src":"26439:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6225,"nodeType":"Block","src":"27060:150:23","statements":[{"expression":{"id":6213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6208,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"27070:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"27090:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27083:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":6209,"name":"int112","nodeType":"ElementaryTypeName","src":"27083:6:23","typeDescriptions":{}}},"id":6212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27083:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27070:26:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":6214,"nodeType":"ExpressionStatement","src":"27070:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6215,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6206,"src":"27110:10:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"27124:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27110:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6224,"nodeType":"IfStatement","src":"27106:98:23","trueBody":{"id":6223,"nodeType":"Block","src":"27131:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313132","id":6219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27182:3:23","typeDescriptions":{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},"value":"112"},{"id":6220,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6203,"src":"27187:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_112_by_1","typeString":"int_const 112"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6218,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"27152:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6221,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27152:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6222,"nodeType":"RevertStatement","src":"27145:48:23"}]}}]},"documentation":{"id":6201,"nodeType":"StructuredDocumentation","src":"26669:312:23","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"},"id":6226,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"26995:8:23","nodeType":"FunctionDefinition","parameters":{"id":6204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6203,"mutability":"mutable","name":"value","nameLocation":"27011:5:23","nodeType":"VariableDeclaration","scope":6226,"src":"27004:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6202,"name":"int256","nodeType":"ElementaryTypeName","src":"27004:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27003:14:23"},"returnParameters":{"id":6207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6206,"mutability":"mutable","name":"downcasted","nameLocation":"27048:10:23","nodeType":"VariableDeclaration","scope":6226,"src":"27041:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":6205,"name":"int112","nodeType":"ElementaryTypeName","src":"27041:6:23","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27040:19:23"},"scope":6605,"src":"26986:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6251,"nodeType":"Block","src":"27607:150:23","statements":[{"expression":{"id":6239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6234,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"27617:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6237,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"27637:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27630:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":6235,"name":"int104","nodeType":"ElementaryTypeName","src":"27630:6:23","typeDescriptions":{}}},"id":6238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27630:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27617:26:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":6240,"nodeType":"ExpressionStatement","src":"27617:26:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6241,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6232,"src":"27657:10:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6242,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"27671:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27657:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6250,"nodeType":"IfStatement","src":"27653:98:23","trueBody":{"id":6249,"nodeType":"Block","src":"27678:73:23","statements":[{"errorCall":{"arguments":[{"hexValue":"313034","id":6245,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"27729:3:23","typeDescriptions":{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},"value":"104"},{"id":6246,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6229,"src":"27734:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_104_by_1","typeString":"int_const 104"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6244,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"27699:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6247,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27699:41:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6248,"nodeType":"RevertStatement","src":"27692:48:23"}]}}]},"documentation":{"id":6227,"nodeType":"StructuredDocumentation","src":"27216:312:23","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"},"id":6252,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27542:8:23","nodeType":"FunctionDefinition","parameters":{"id":6230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6229,"mutability":"mutable","name":"value","nameLocation":"27558:5:23","nodeType":"VariableDeclaration","scope":6252,"src":"27551:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6228,"name":"int256","nodeType":"ElementaryTypeName","src":"27551:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27550:14:23"},"returnParameters":{"id":6233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6232,"mutability":"mutable","name":"downcasted","nameLocation":"27595:10:23","nodeType":"VariableDeclaration","scope":6252,"src":"27588:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":6231,"name":"int104","nodeType":"ElementaryTypeName","src":"27588:6:23","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27587:19:23"},"scope":6605,"src":"27533:224:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6277,"nodeType":"Block","src":"28147:148:23","statements":[{"expression":{"id":6265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6260,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"28157:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"28176:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28170:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":6261,"name":"int96","nodeType":"ElementaryTypeName","src":"28170:5:23","typeDescriptions":{}}},"id":6264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28170:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28157:25:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":6266,"nodeType":"ExpressionStatement","src":"28157:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6267,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6258,"src":"28196:10:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6268,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"28210:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28196:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6276,"nodeType":"IfStatement","src":"28192:97:23","trueBody":{"id":6275,"nodeType":"Block","src":"28217:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3936","id":6271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28268:2:23","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},{"id":6272,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6255,"src":"28272:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6270,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"28238:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6273,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28238:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6274,"nodeType":"RevertStatement","src":"28231:47:23"}]}}]},"documentation":{"id":6253,"nodeType":"StructuredDocumentation","src":"27763:307:23","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"},"id":6278,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28084:7:23","nodeType":"FunctionDefinition","parameters":{"id":6256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6255,"mutability":"mutable","name":"value","nameLocation":"28099:5:23","nodeType":"VariableDeclaration","scope":6278,"src":"28092:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6254,"name":"int256","nodeType":"ElementaryTypeName","src":"28092:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28091:14:23"},"returnParameters":{"id":6259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6258,"mutability":"mutable","name":"downcasted","nameLocation":"28135:10:23","nodeType":"VariableDeclaration","scope":6278,"src":"28129:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":6257,"name":"int96","nodeType":"ElementaryTypeName","src":"28129:5:23","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28128:18:23"},"scope":6605,"src":"28075:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6303,"nodeType":"Block","src":"28685:148:23","statements":[{"expression":{"id":6291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6286,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"28695:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6289,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"28714:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28708:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":6287,"name":"int88","nodeType":"ElementaryTypeName","src":"28708:5:23","typeDescriptions":{}}},"id":6290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28708:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28695:25:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":6292,"nodeType":"ExpressionStatement","src":"28695:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6293,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6284,"src":"28734:10:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6294,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"28748:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28734:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6302,"nodeType":"IfStatement","src":"28730:97:23","trueBody":{"id":6301,"nodeType":"Block","src":"28755:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3838","id":6297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"28806:2:23","typeDescriptions":{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},"value":"88"},{"id":6298,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6281,"src":"28810:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_88_by_1","typeString":"int_const 88"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6296,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"28776:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28776:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6300,"nodeType":"RevertStatement","src":"28769:47:23"}]}}]},"documentation":{"id":6279,"nodeType":"StructuredDocumentation","src":"28301:307:23","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"},"id":6304,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28622:7:23","nodeType":"FunctionDefinition","parameters":{"id":6282,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6281,"mutability":"mutable","name":"value","nameLocation":"28637:5:23","nodeType":"VariableDeclaration","scope":6304,"src":"28630:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6280,"name":"int256","nodeType":"ElementaryTypeName","src":"28630:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28629:14:23"},"returnParameters":{"id":6285,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6284,"mutability":"mutable","name":"downcasted","nameLocation":"28673:10:23","nodeType":"VariableDeclaration","scope":6304,"src":"28667:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":6283,"name":"int88","nodeType":"ElementaryTypeName","src":"28667:5:23","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28666:18:23"},"scope":6605,"src":"28613:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6329,"nodeType":"Block","src":"29223:148:23","statements":[{"expression":{"id":6317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6312,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"29233:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6315,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"29252:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29246:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":6313,"name":"int80","nodeType":"ElementaryTypeName","src":"29246:5:23","typeDescriptions":{}}},"id":6316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29246:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29233:25:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":6318,"nodeType":"ExpressionStatement","src":"29233:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6319,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6310,"src":"29272:10:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"29286:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29272:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6328,"nodeType":"IfStatement","src":"29268:97:23","trueBody":{"id":6327,"nodeType":"Block","src":"29293:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3830","id":6323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29344:2:23","typeDescriptions":{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},"value":"80"},{"id":6324,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6307,"src":"29348:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_80_by_1","typeString":"int_const 80"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6322,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"29314:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29314:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6326,"nodeType":"RevertStatement","src":"29307:47:23"}]}}]},"documentation":{"id":6305,"nodeType":"StructuredDocumentation","src":"28839:307:23","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"},"id":6330,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29160:7:23","nodeType":"FunctionDefinition","parameters":{"id":6308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6307,"mutability":"mutable","name":"value","nameLocation":"29175:5:23","nodeType":"VariableDeclaration","scope":6330,"src":"29168:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6306,"name":"int256","nodeType":"ElementaryTypeName","src":"29168:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29167:14:23"},"returnParameters":{"id":6311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6310,"mutability":"mutable","name":"downcasted","nameLocation":"29211:10:23","nodeType":"VariableDeclaration","scope":6330,"src":"29205:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":6309,"name":"int80","nodeType":"ElementaryTypeName","src":"29205:5:23","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29204:18:23"},"scope":6605,"src":"29151:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6355,"nodeType":"Block","src":"29761:148:23","statements":[{"expression":{"id":6343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6338,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6336,"src":"29771:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"29790:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29784:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":6339,"name":"int72","nodeType":"ElementaryTypeName","src":"29784:5:23","typeDescriptions":{}}},"id":6342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29784:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"29771:25:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":6344,"nodeType":"ExpressionStatement","src":"29771:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6345,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6336,"src":"29810:10:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6346,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"29824:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29810:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6354,"nodeType":"IfStatement","src":"29806:97:23","trueBody":{"id":6353,"nodeType":"Block","src":"29831:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3732","id":6349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"29882:2:23","typeDescriptions":{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},"value":"72"},{"id":6350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6333,"src":"29886:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_72_by_1","typeString":"int_const 72"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6348,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"29852:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29852:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6352,"nodeType":"RevertStatement","src":"29845:47:23"}]}}]},"documentation":{"id":6331,"nodeType":"StructuredDocumentation","src":"29377:307:23","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"},"id":6356,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29698:7:23","nodeType":"FunctionDefinition","parameters":{"id":6334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6333,"mutability":"mutable","name":"value","nameLocation":"29713:5:23","nodeType":"VariableDeclaration","scope":6356,"src":"29706:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6332,"name":"int256","nodeType":"ElementaryTypeName","src":"29706:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29705:14:23"},"returnParameters":{"id":6337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6336,"mutability":"mutable","name":"downcasted","nameLocation":"29749:10:23","nodeType":"VariableDeclaration","scope":6356,"src":"29743:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":6335,"name":"int72","nodeType":"ElementaryTypeName","src":"29743:5:23","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"29742:18:23"},"scope":6605,"src":"29689:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6381,"nodeType":"Block","src":"30299:148:23","statements":[{"expression":{"id":6369,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6364,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"30309:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6367,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"30328:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6366,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30322:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":6365,"name":"int64","nodeType":"ElementaryTypeName","src":"30322:5:23","typeDescriptions":{}}},"id":6368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30322:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30309:25:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":6370,"nodeType":"ExpressionStatement","src":"30309:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6371,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6362,"src":"30348:10:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"30362:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30348:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6380,"nodeType":"IfStatement","src":"30344:97:23","trueBody":{"id":6379,"nodeType":"Block","src":"30369:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3634","id":6375,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30420:2:23","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},{"id":6376,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6359,"src":"30424:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6374,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"30390:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30390:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6378,"nodeType":"RevertStatement","src":"30383:47:23"}]}}]},"documentation":{"id":6357,"nodeType":"StructuredDocumentation","src":"29915:307:23","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"},"id":6382,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30236:7:23","nodeType":"FunctionDefinition","parameters":{"id":6360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6359,"mutability":"mutable","name":"value","nameLocation":"30251:5:23","nodeType":"VariableDeclaration","scope":6382,"src":"30244:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6358,"name":"int256","nodeType":"ElementaryTypeName","src":"30244:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30243:14:23"},"returnParameters":{"id":6363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6362,"mutability":"mutable","name":"downcasted","nameLocation":"30287:10:23","nodeType":"VariableDeclaration","scope":6382,"src":"30281:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":6361,"name":"int64","nodeType":"ElementaryTypeName","src":"30281:5:23","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30280:18:23"},"scope":6605,"src":"30227:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6407,"nodeType":"Block","src":"30837:148:23","statements":[{"expression":{"id":6395,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6390,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6388,"src":"30847:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6393,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"30866:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30860:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":6391,"name":"int56","nodeType":"ElementaryTypeName","src":"30860:5:23","typeDescriptions":{}}},"id":6394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30860:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"30847:25:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":6396,"nodeType":"ExpressionStatement","src":"30847:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6397,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6388,"src":"30886:10:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6398,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"30900:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30886:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6406,"nodeType":"IfStatement","src":"30882:97:23","trueBody":{"id":6405,"nodeType":"Block","src":"30907:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3536","id":6401,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"30958:2:23","typeDescriptions":{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},"value":"56"},{"id":6402,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6385,"src":"30962:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_56_by_1","typeString":"int_const 56"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6400,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"30928:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30928:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6404,"nodeType":"RevertStatement","src":"30921:47:23"}]}}]},"documentation":{"id":6383,"nodeType":"StructuredDocumentation","src":"30453:307:23","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"},"id":6408,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"30774:7:23","nodeType":"FunctionDefinition","parameters":{"id":6386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6385,"mutability":"mutable","name":"value","nameLocation":"30789:5:23","nodeType":"VariableDeclaration","scope":6408,"src":"30782:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6384,"name":"int256","nodeType":"ElementaryTypeName","src":"30782:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30781:14:23"},"returnParameters":{"id":6389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6388,"mutability":"mutable","name":"downcasted","nameLocation":"30825:10:23","nodeType":"VariableDeclaration","scope":6408,"src":"30819:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":6387,"name":"int56","nodeType":"ElementaryTypeName","src":"30819:5:23","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"30818:18:23"},"scope":6605,"src":"30765:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6433,"nodeType":"Block","src":"31375:148:23","statements":[{"expression":{"id":6421,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6416,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"31385:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6419,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"31404:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31398:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":6417,"name":"int48","nodeType":"ElementaryTypeName","src":"31398:5:23","typeDescriptions":{}}},"id":6420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31398:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31385:25:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":6422,"nodeType":"ExpressionStatement","src":"31385:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6423,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6414,"src":"31424:10:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6424,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"31438:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31424:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6432,"nodeType":"IfStatement","src":"31420:97:23","trueBody":{"id":6431,"nodeType":"Block","src":"31445:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3438","id":6427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"31496:2:23","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},{"id":6428,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6411,"src":"31500:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6426,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"31466:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31466:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6430,"nodeType":"RevertStatement","src":"31459:47:23"}]}}]},"documentation":{"id":6409,"nodeType":"StructuredDocumentation","src":"30991:307:23","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"},"id":6434,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31312:7:23","nodeType":"FunctionDefinition","parameters":{"id":6412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6411,"mutability":"mutable","name":"value","nameLocation":"31327:5:23","nodeType":"VariableDeclaration","scope":6434,"src":"31320:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6410,"name":"int256","nodeType":"ElementaryTypeName","src":"31320:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31319:14:23"},"returnParameters":{"id":6415,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6414,"mutability":"mutable","name":"downcasted","nameLocation":"31363:10:23","nodeType":"VariableDeclaration","scope":6434,"src":"31357:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":6413,"name":"int48","nodeType":"ElementaryTypeName","src":"31357:5:23","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31356:18:23"},"scope":6605,"src":"31303:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6459,"nodeType":"Block","src":"31913:148:23","statements":[{"expression":{"id":6447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6442,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"31923:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6445,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"31942:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6444,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31936:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":6443,"name":"int40","nodeType":"ElementaryTypeName","src":"31936:5:23","typeDescriptions":{}}},"id":6446,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31936:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"31923:25:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":6448,"nodeType":"ExpressionStatement","src":"31923:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6449,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6440,"src":"31962:10:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6450,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"31976:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31962:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6458,"nodeType":"IfStatement","src":"31958:97:23","trueBody":{"id":6457,"nodeType":"Block","src":"31983:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3430","id":6453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32034:2:23","typeDescriptions":{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},"value":"40"},{"id":6454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6437,"src":"32038:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_40_by_1","typeString":"int_const 40"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6452,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"32004:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32004:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6456,"nodeType":"RevertStatement","src":"31997:47:23"}]}}]},"documentation":{"id":6435,"nodeType":"StructuredDocumentation","src":"31529:307:23","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"},"id":6460,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"31850:7:23","nodeType":"FunctionDefinition","parameters":{"id":6438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6437,"mutability":"mutable","name":"value","nameLocation":"31865:5:23","nodeType":"VariableDeclaration","scope":6460,"src":"31858:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6436,"name":"int256","nodeType":"ElementaryTypeName","src":"31858:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31857:14:23"},"returnParameters":{"id":6441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6440,"mutability":"mutable","name":"downcasted","nameLocation":"31901:10:23","nodeType":"VariableDeclaration","scope":6460,"src":"31895:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":6439,"name":"int40","nodeType":"ElementaryTypeName","src":"31895:5:23","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"31894:18:23"},"scope":6605,"src":"31841:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6485,"nodeType":"Block","src":"32451:148:23","statements":[{"expression":{"id":6473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6468,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"32461:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6471,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"32480:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32474:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":6469,"name":"int32","nodeType":"ElementaryTypeName","src":"32474:5:23","typeDescriptions":{}}},"id":6472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32474:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32461:25:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":6474,"nodeType":"ExpressionStatement","src":"32461:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6475,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6466,"src":"32500:10:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6476,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"32514:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32500:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6484,"nodeType":"IfStatement","src":"32496:97:23","trueBody":{"id":6483,"nodeType":"Block","src":"32521:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3332","id":6479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"32572:2:23","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},{"id":6480,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6463,"src":"32576:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6478,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"32542:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32542:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6482,"nodeType":"RevertStatement","src":"32535:47:23"}]}}]},"documentation":{"id":6461,"nodeType":"StructuredDocumentation","src":"32067:307:23","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"},"id":6486,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32388:7:23","nodeType":"FunctionDefinition","parameters":{"id":6464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6463,"mutability":"mutable","name":"value","nameLocation":"32403:5:23","nodeType":"VariableDeclaration","scope":6486,"src":"32396:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6462,"name":"int256","nodeType":"ElementaryTypeName","src":"32396:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32395:14:23"},"returnParameters":{"id":6467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6466,"mutability":"mutable","name":"downcasted","nameLocation":"32439:10:23","nodeType":"VariableDeclaration","scope":6486,"src":"32433:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":6465,"name":"int32","nodeType":"ElementaryTypeName","src":"32433:5:23","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32432:18:23"},"scope":6605,"src":"32379:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6511,"nodeType":"Block","src":"32989:148:23","statements":[{"expression":{"id":6499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6494,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"32999:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6497,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"33018:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6496,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33012:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":6495,"name":"int24","nodeType":"ElementaryTypeName","src":"33012:5:23","typeDescriptions":{}}},"id":6498,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33012:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"32999:25:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":6500,"nodeType":"ExpressionStatement","src":"32999:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6501,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6492,"src":"33038:10:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6502,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"33052:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33038:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6510,"nodeType":"IfStatement","src":"33034:97:23","trueBody":{"id":6509,"nodeType":"Block","src":"33059:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3234","id":6505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33110:2:23","typeDescriptions":{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},"value":"24"},{"id":6506,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6489,"src":"33114:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_24_by_1","typeString":"int_const 24"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6504,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"33080:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33080:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6508,"nodeType":"RevertStatement","src":"33073:47:23"}]}}]},"documentation":{"id":6487,"nodeType":"StructuredDocumentation","src":"32605:307:23","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"},"id":6512,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"32926:7:23","nodeType":"FunctionDefinition","parameters":{"id":6490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6489,"mutability":"mutable","name":"value","nameLocation":"32941:5:23","nodeType":"VariableDeclaration","scope":6512,"src":"32934:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6488,"name":"int256","nodeType":"ElementaryTypeName","src":"32934:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32933:14:23"},"returnParameters":{"id":6493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6492,"mutability":"mutable","name":"downcasted","nameLocation":"32977:10:23","nodeType":"VariableDeclaration","scope":6512,"src":"32971:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":6491,"name":"int24","nodeType":"ElementaryTypeName","src":"32971:5:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"32970:18:23"},"scope":6605,"src":"32917:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6537,"nodeType":"Block","src":"33527:148:23","statements":[{"expression":{"id":6525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6520,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"33537:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6523,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"33556:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6522,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33550:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":6521,"name":"int16","nodeType":"ElementaryTypeName","src":"33550:5:23","typeDescriptions":{}}},"id":6524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33550:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33537:25:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":6526,"nodeType":"ExpressionStatement","src":"33537:25:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6527,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6518,"src":"33576:10:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6528,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"33590:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33576:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6536,"nodeType":"IfStatement","src":"33572:97:23","trueBody":{"id":6535,"nodeType":"Block","src":"33597:72:23","statements":[{"errorCall":{"arguments":[{"hexValue":"3136","id":6531,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"33648:2:23","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},{"id":6532,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6515,"src":"33652:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6530,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"33618:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33618:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6534,"nodeType":"RevertStatement","src":"33611:47:23"}]}}]},"documentation":{"id":6513,"nodeType":"StructuredDocumentation","src":"33143:307:23","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"},"id":6538,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33464:7:23","nodeType":"FunctionDefinition","parameters":{"id":6516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6515,"mutability":"mutable","name":"value","nameLocation":"33479:5:23","nodeType":"VariableDeclaration","scope":6538,"src":"33472:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6514,"name":"int256","nodeType":"ElementaryTypeName","src":"33472:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33471:14:23"},"returnParameters":{"id":6519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6518,"mutability":"mutable","name":"downcasted","nameLocation":"33515:10:23","nodeType":"VariableDeclaration","scope":6538,"src":"33509:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":6517,"name":"int16","nodeType":"ElementaryTypeName","src":"33509:5:23","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33508:18:23"},"scope":6605,"src":"33455:220:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6563,"nodeType":"Block","src":"34058:146:23","statements":[{"expression":{"id":6551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6546,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"34068:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":6549,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"34086:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34081:4:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":6547,"name":"int8","nodeType":"ElementaryTypeName","src":"34081:4:23","typeDescriptions":{}}},"id":6550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34081:11:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34068:24:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":6552,"nodeType":"ExpressionStatement","src":"34068:24:23"},{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6555,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6553,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6544,"src":"34106:10:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":6554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"34120:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34106:19:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6562,"nodeType":"IfStatement","src":"34102:96:23","trueBody":{"id":6561,"nodeType":"Block","src":"34127:71:23","statements":[{"errorCall":{"arguments":[{"hexValue":"38","id":6557,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"34178:1:23","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},{"id":6558,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6541,"src":"34181:5:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6556,"name":"SafeCastOverflowedIntDowncast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4862,"src":"34148:29:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$","typeString":"function (uint8,int256) pure returns (error)"}},"id":6559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34148:39:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6560,"nodeType":"RevertStatement","src":"34141:46:23"}]}}]},"documentation":{"id":6539,"nodeType":"StructuredDocumentation","src":"33681:302:23","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"},"id":6564,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"33997:6:23","nodeType":"FunctionDefinition","parameters":{"id":6542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6541,"mutability":"mutable","name":"value","nameLocation":"34011:5:23","nodeType":"VariableDeclaration","scope":6564,"src":"34004:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6540,"name":"int256","nodeType":"ElementaryTypeName","src":"34004:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34003:14:23"},"returnParameters":{"id":6545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6544,"mutability":"mutable","name":"downcasted","nameLocation":"34046:10:23","nodeType":"VariableDeclaration","scope":6564,"src":"34041:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":6543,"name":"int8","nodeType":"ElementaryTypeName","src":"34041:4:23","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34040:17:23"},"scope":6605,"src":"33988:216:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6593,"nodeType":"Block","src":"34444:250:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6572,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"34557:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":6577,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34578:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6576,"name":"int256","nodeType":"ElementaryTypeName","src":"34578:6:23","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":6575,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34573:4:23","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":6578,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34573:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":6579,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34586:3:23","memberName":"max","nodeType":"MemberAccess","src":"34573:16:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6574,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34565:7:23","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6573,"name":"uint256","nodeType":"ElementaryTypeName","src":"34565:7:23","typeDescriptions":{}}},"id":6580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34565:25:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34557:33:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6587,"nodeType":"IfStatement","src":"34553:105:23","trueBody":{"id":6586,"nodeType":"Block","src":"34592:66:23","statements":[{"errorCall":{"arguments":[{"id":6583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"34641:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6582,"name":"SafeCastOverflowedUintToInt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4867,"src":"34613:27:23","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$returns$_t_error_$","typeString":"function (uint256) pure returns (error)"}},"id":6584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34613:34:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6585,"nodeType":"RevertStatement","src":"34606:41:23"}]}},{"expression":{"arguments":[{"id":6590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6567,"src":"34681:5:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34674:6:23","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6588,"name":"int256","nodeType":"ElementaryTypeName","src":"34674:6:23","typeDescriptions":{}}},"id":6591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34674:13:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6571,"id":6592,"nodeType":"Return","src":"34667:20:23"}]},"documentation":{"id":6565,"nodeType":"StructuredDocumentation","src":"34210:165:23","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."},"id":6594,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34389:8:23","nodeType":"FunctionDefinition","parameters":{"id":6568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6567,"mutability":"mutable","name":"value","nameLocation":"34406:5:23","nodeType":"VariableDeclaration","scope":6594,"src":"34398:13:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6566,"name":"uint256","nodeType":"ElementaryTypeName","src":"34398:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34397:15:23"},"returnParameters":{"id":6571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6570,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6594,"src":"34436:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6569,"name":"int256","nodeType":"ElementaryTypeName","src":"34436:6:23","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34435:8:23"},"scope":6605,"src":"34380:314:23","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6603,"nodeType":"Block","src":"34853:87:23","statements":[{"AST":{"nativeSrc":"34888:46:23","nodeType":"YulBlock","src":"34888:46:23","statements":[{"nativeSrc":"34902:22:23","nodeType":"YulAssignment","src":"34902:22:23","value":{"arguments":[{"arguments":[{"name":"b","nativeSrc":"34921:1:23","nodeType":"YulIdentifier","src":"34921:1:23"}],"functionName":{"name":"iszero","nativeSrc":"34914:6:23","nodeType":"YulIdentifier","src":"34914:6:23"},"nativeSrc":"34914:9:23","nodeType":"YulFunctionCall","src":"34914:9:23"}],"functionName":{"name":"iszero","nativeSrc":"34907:6:23","nodeType":"YulIdentifier","src":"34907:6:23"},"nativeSrc":"34907:17:23","nodeType":"YulFunctionCall","src":"34907:17:23"},"variableNames":[{"name":"u","nativeSrc":"34902:1:23","nodeType":"YulIdentifier","src":"34902:1:23"}]}]},"evmVersion":"paris","externalReferences":[{"declaration":6597,"isOffset":false,"isSlot":false,"src":"34921:1:23","valueSize":1},{"declaration":6600,"isOffset":false,"isSlot":false,"src":"34902:1:23","valueSize":1}],"flags":["memory-safe"],"id":6602,"nodeType":"InlineAssembly","src":"34863:71:23"}]},"documentation":{"id":6595,"nodeType":"StructuredDocumentation","src":"34700:90:23","text":" @dev Cast a boolean (false or true) to a uint256 (0 or 1) with no jump."},"id":6604,"implemented":true,"kind":"function","modifiers":[],"name":"toUint","nameLocation":"34804:6:23","nodeType":"FunctionDefinition","parameters":{"id":6598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6597,"mutability":"mutable","name":"b","nameLocation":"34816:1:23","nodeType":"VariableDeclaration","scope":6604,"src":"34811:6:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6596,"name":"bool","nodeType":"ElementaryTypeName","src":"34811:4:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"34810:8:23"},"returnParameters":{"id":6601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6600,"mutability":"mutable","name":"u","nameLocation":"34850:1:23","nodeType":"VariableDeclaration","scope":6604,"src":"34842:9:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6599,"name":"uint256","nodeType":"ElementaryTypeName","src":"34842:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34841:11:23"},"scope":6605,"src":"34795:145:23","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6606,"src":"769:34173:23","usedErrors":[4850,4855,4862,4867],"usedEvents":[]}],"src":"192:34751:23"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"id":24,"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SignedMath.sol","exportedSymbols":{"SafeCast":[6605],"SignedMath":[6749]},"id":6750,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":6607,"literals":["solidity","^","0.8",".20"],"nodeType":"PragmaDirective","src":"109:24:24"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"./SafeCast.sol","id":6609,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":6750,"sourceUnit":6606,"src":"135:40:24","symbolAliases":[{"foreign":{"id":6608,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"143:8:24","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SignedMath","contractDependencies":[],"contractKind":"library","documentation":{"id":6610,"nodeType":"StructuredDocumentation","src":"177:80:24","text":" @dev Standard signed math utilities missing in the Solidity language."},"fullyImplemented":true,"id":6749,"linearizedBaseContracts":[6749],"name":"SignedMath","nameLocation":"266:10:24","nodeType":"ContractDefinition","nodes":[{"body":{"id":6639,"nodeType":"Block","src":"746:215:24","statements":[{"id":6638,"nodeType":"UncheckedBlock","src":"756:199:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6622,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"894:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6623,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6615,"src":"900:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6624,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6617,"src":"904:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"900:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6626,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"899:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"arguments":[{"id":6631,"name":"condition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6613,"src":"932:9:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"expression":{"id":6629,"name":"SafeCast","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6605,"src":"916:8:24","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SafeCast_$6605_$","typeString":"type(library SafeCast)"}},"id":6630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"925:6:24","memberName":"toUint","nodeType":"MemberAccess","referencedDeclaration":6604,"src":"916:15:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$returns$_t_uint256_$","typeString":"function (bool) pure returns (uint256)"}},"id":6632,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"916:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6628,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"909:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6627,"name":"int256","nodeType":"ElementaryTypeName","src":"909:6:24","typeDescriptions":{}}},"id":6633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"909:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"899:44:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6635,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"898:46:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"894:50:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6621,"id":6637,"nodeType":"Return","src":"887:57:24"}]}]},"documentation":{"id":6611,"nodeType":"StructuredDocumentation","src":"283:374:24","text":" @dev Branchless ternary evaluation for `a ? b : c`. Gas costs are constant.\n IMPORTANT: This function may reduce bytecode size and consume less gas when used standalone.\n However, the compiler may optimize Solidity ternary operations (i.e. `a ? b : c`) to only compute\n one branch when needed, making this function more expensive."},"id":6640,"implemented":true,"kind":"function","modifiers":[],"name":"ternary","nameLocation":"671:7:24","nodeType":"FunctionDefinition","parameters":{"id":6618,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6613,"mutability":"mutable","name":"condition","nameLocation":"684:9:24","nodeType":"VariableDeclaration","scope":6640,"src":"679:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6612,"name":"bool","nodeType":"ElementaryTypeName","src":"679:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":6615,"mutability":"mutable","name":"a","nameLocation":"702:1:24","nodeType":"VariableDeclaration","scope":6640,"src":"695:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6614,"name":"int256","nodeType":"ElementaryTypeName","src":"695:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6617,"mutability":"mutable","name":"b","nameLocation":"712:1:24","nodeType":"VariableDeclaration","scope":6640,"src":"705:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6616,"name":"int256","nodeType":"ElementaryTypeName","src":"705:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"678:36:24"},"returnParameters":{"id":6621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6620,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6640,"src":"738:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6619,"name":"int256","nodeType":"ElementaryTypeName","src":"738:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"737:8:24"},"scope":6749,"src":"662:299:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6658,"nodeType":"Block","src":"1102:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6651,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"1127:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":6652,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"1131:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1127:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6654,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6643,"src":"1134:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6655,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6645,"src":"1137:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6650,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"1119:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1119:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6649,"id":6657,"nodeType":"Return","src":"1112:27:24"}]},"documentation":{"id":6641,"nodeType":"StructuredDocumentation","src":"967:66:24","text":" @dev Returns the largest of two signed numbers."},"id":6659,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"1047:3:24","nodeType":"FunctionDefinition","parameters":{"id":6646,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6643,"mutability":"mutable","name":"a","nameLocation":"1058:1:24","nodeType":"VariableDeclaration","scope":6659,"src":"1051:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6642,"name":"int256","nodeType":"ElementaryTypeName","src":"1051:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6645,"mutability":"mutable","name":"b","nameLocation":"1068:1:24","nodeType":"VariableDeclaration","scope":6659,"src":"1061:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6644,"name":"int256","nodeType":"ElementaryTypeName","src":"1061:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1050:20:24"},"returnParameters":{"id":6649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6648,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6659,"src":"1094:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6647,"name":"int256","nodeType":"ElementaryTypeName","src":"1094:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1093:8:24"},"scope":6749,"src":"1038:108:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6677,"nodeType":"Block","src":"1288:44:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6670,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"1313:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6671,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"1317:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1313:5:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":6673,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6662,"src":"1320:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},{"id":6674,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6664,"src":"1323:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_int256","typeString":"int256"},{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6669,"name":"ternary","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6640,"src":"1305:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_int256_$_t_int256_$returns$_t_int256_$","typeString":"function (bool,int256,int256) pure returns (int256)"}},"id":6675,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1305:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6668,"id":6676,"nodeType":"Return","src":"1298:27:24"}]},"documentation":{"id":6660,"nodeType":"StructuredDocumentation","src":"1152:67:24","text":" @dev Returns the smallest of two signed numbers."},"id":6678,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"1233:3:24","nodeType":"FunctionDefinition","parameters":{"id":6665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6662,"mutability":"mutable","name":"a","nameLocation":"1244:1:24","nodeType":"VariableDeclaration","scope":6678,"src":"1237:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6661,"name":"int256","nodeType":"ElementaryTypeName","src":"1237:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6664,"mutability":"mutable","name":"b","nameLocation":"1254:1:24","nodeType":"VariableDeclaration","scope":6678,"src":"1247:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6663,"name":"int256","nodeType":"ElementaryTypeName","src":"1247:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1236:20:24"},"returnParameters":{"id":6668,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6667,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6678,"src":"1280:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6666,"name":"int256","nodeType":"ElementaryTypeName","src":"1280:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1279:8:24"},"scope":6749,"src":"1224:108:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6721,"nodeType":"Block","src":"1537:162:24","statements":[{"assignments":[6689],"declarations":[{"constant":false,"id":6689,"mutability":"mutable","name":"x","nameLocation":"1606:1:24","nodeType":"VariableDeclaration","scope":6721,"src":"1599:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6688,"name":"int256","nodeType":"ElementaryTypeName","src":"1599:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6702,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6701,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6690,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"1611:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":6691,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"1615:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1611:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6693,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1610:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6699,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6694,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"1622:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6695,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"1626:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1622:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6697,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1621:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":6698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1632:1:24","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1621:12:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6700,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1620:14:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1610:24:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"1599:35:24"},{"expression":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6703,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"1651:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":6708,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6689,"src":"1671:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1663:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6706,"name":"uint256","nodeType":"ElementaryTypeName","src":"1663:7:24","typeDescriptions":{}}},"id":6709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1663:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6710,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"1663:17:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6705,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1656:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":6704,"name":"int256","nodeType":"ElementaryTypeName","src":"1656:6:24","typeDescriptions":{}}},"id":6712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1656:25:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6713,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6681,"src":"1685:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6714,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6683,"src":"1689:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1685:5:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6716,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:7:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1656:35:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6718,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1655:37:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"1651:41:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":6687,"id":6720,"nodeType":"Return","src":"1644:48:24"}]},"documentation":{"id":6679,"nodeType":"StructuredDocumentation","src":"1338:126:24","text":" @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."},"id":6722,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"1478:7:24","nodeType":"FunctionDefinition","parameters":{"id":6684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6681,"mutability":"mutable","name":"a","nameLocation":"1493:1:24","nodeType":"VariableDeclaration","scope":6722,"src":"1486:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6680,"name":"int256","nodeType":"ElementaryTypeName","src":"1486:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":6683,"mutability":"mutable","name":"b","nameLocation":"1503:1:24","nodeType":"VariableDeclaration","scope":6722,"src":"1496:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6682,"name":"int256","nodeType":"ElementaryTypeName","src":"1496:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1485:20:24"},"returnParameters":{"id":6687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6722,"src":"1529:6:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6685,"name":"int256","nodeType":"ElementaryTypeName","src":"1529:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1528:8:24"},"scope":6749,"src":"1469:230:24","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":6747,"nodeType":"Block","src":"1843:767:24","statements":[{"id":6746,"nodeType":"UncheckedBlock","src":"1853:751:24","statements":[{"assignments":[6731],"declarations":[{"constant":false,"id":6731,"mutability":"mutable","name":"mask","nameLocation":"2424:4:24","nodeType":"VariableDeclaration","scope":6746,"src":"2417:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6730,"name":"int256","nodeType":"ElementaryTypeName","src":"2417:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":6735,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6732,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"2431:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":6733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2436:3:24","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"2431:8:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"2417:22:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":6740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6738,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6725,"src":"2576:1:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":6739,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"2580:4:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2576:8:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":6741,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2575:10:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":6742,"name":"mask","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6731,"src":"2588:4:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"2575:17:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":6737,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2567:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":6736,"name":"uint256","nodeType":"ElementaryTypeName","src":"2567:7:24","typeDescriptions":{}}},"id":6744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2567:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":6729,"id":6745,"nodeType":"Return","src":"2560:33:24"}]}]},"documentation":{"id":6723,"nodeType":"StructuredDocumentation","src":"1705:78:24","text":" @dev Returns the absolute unsigned value of a signed value."},"id":6748,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nameLocation":"1797:3:24","nodeType":"FunctionDefinition","parameters":{"id":6726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6725,"mutability":"mutable","name":"n","nameLocation":"1808:1:24","nodeType":"VariableDeclaration","scope":6748,"src":"1801:8:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":6724,"name":"int256","nodeType":"ElementaryTypeName","src":"1801:6:24","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"1800:10:24"},"returnParameters":{"id":6729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6728,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":6748,"src":"1834:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6727,"name":"uint256","nodeType":"ElementaryTypeName","src":"1834:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1833:9:24"},"scope":6749,"src":"1788:822:24","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":6750,"src":"258:2354:24","usedErrors":[],"usedEvents":[]}],"src":"109:2504:24"}},"contracts/PepenadeCrush.sol":{"id":25,"ast":{"absolutePath":"contracts/PepenadeCrush.sol","exportedSymbols":{"ECDSA":[2933],"EIP712":[3160],"EIP712Upgradeable":[1157],"Initializable":[585],"Ownable2StepUpgradeable":[136],"PepenadeCrush":[7242],"UUPSUpgradeable":[767]},"id":7243,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":6751,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"40:23:25"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":6753,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7243,"sourceUnit":768,"src":"67:100:25","symbolAliases":[{"foreign":{"id":6752,"name":"UUPSUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"75:15:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":6755,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7243,"sourceUnit":586,"src":"169:96:25","symbolAliases":[{"foreign":{"id":6754,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"177:13:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","id":6757,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7243,"sourceUnit":1158,"src":"267:111:25","symbolAliases":[{"foreign":{"id":6756,"name":"EIP712Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"275:17:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol","id":6759,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7243,"sourceUnit":137,"src":"380:111:25","symbolAliases":[{"foreign":{"id":6758,"name":"Ownable2StepUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"388:23:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":6761,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7243,"sourceUnit":2934,"src":"495:75:25","symbolAliases":[{"foreign":{"id":6760,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"503:5:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":6763,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7243,"sourceUnit":3161,"src":"572:77:25","symbolAliases":[{"foreign":{"id":6762,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"580:6:25","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":6765,"name":"Initializable","nameLocations":["743:13:25"],"nodeType":"IdentifierPath","referencedDeclaration":585,"src":"743:13:25"},"id":6766,"nodeType":"InheritanceSpecifier","src":"743:13:25"},{"baseName":{"id":6767,"name":"UUPSUpgradeable","nameLocations":["763:15:25"],"nodeType":"IdentifierPath","referencedDeclaration":767,"src":"763:15:25"},"id":6768,"nodeType":"InheritanceSpecifier","src":"763:15:25"},{"baseName":{"id":6769,"name":"EIP712Upgradeable","nameLocations":["785:17:25"],"nodeType":"IdentifierPath","referencedDeclaration":1157,"src":"785:17:25"},"id":6770,"nodeType":"InheritanceSpecifier","src":"785:17:25"},{"baseName":{"id":6771,"name":"Ownable2StepUpgradeable","nameLocations":["809:23:25"],"nodeType":"IdentifierPath","referencedDeclaration":136,"src":"809:23:25"},"id":6772,"nodeType":"InheritanceSpecifier","src":"809:23:25"}],"canonicalName":"PepenadeCrush","contractDependencies":[],"contractKind":"contract","documentation":{"id":6764,"nodeType":"StructuredDocumentation","src":"653:59:25","text":"@title Fear & Greed: Pepenade Crush\n @notice TODO"},"fullyImplemented":true,"id":7242,"linearizedBaseContracts":[7242,136,331,813,1157,1203,767,1213,585],"name":"PepenadeCrush","nameLocation":"721:13:25","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":6773,"nodeType":"StructuredDocumentation","src":"841:73:25","text":"@notice The address of the backend wallet that will sign the messages"},"functionSelector":"65d65e86","id":6775,"mutability":"mutable","name":"backendSigner","nameLocation":"935:13:25","nodeType":"VariableDeclaration","scope":7242,"src":"920:28:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6774,"name":"address","nodeType":"ElementaryTypeName","src":"920:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"canonicalName":"PepenadeCrush.ScoreMessage","documentation":{"id":6776,"nodeType":"StructuredDocumentation","src":"957:77:25","text":"@notice The message struct containing the player address, score and nonce"},"id":6783,"members":[{"constant":false,"id":6778,"mutability":"mutable","name":"player","nameLocation":"1079:6:25","nodeType":"VariableDeclaration","scope":6783,"src":"1071:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6777,"name":"address","nodeType":"ElementaryTypeName","src":"1071:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6780,"mutability":"mutable","name":"score","nameLocation":"1104:5:25","nodeType":"VariableDeclaration","scope":6783,"src":"1096:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6779,"name":"uint256","nodeType":"ElementaryTypeName","src":"1096:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6782,"mutability":"mutable","name":"nonce","nameLocation":"1127:5:25","nodeType":"VariableDeclaration","scope":6783,"src":"1120:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":6781,"name":"string","nodeType":"ElementaryTypeName","src":"1120:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"ScoreMessage","nameLocation":"1047:12:25","nodeType":"StructDefinition","scope":7242,"src":"1040:100:25","visibility":"public"},{"anonymous":false,"documentation":{"id":6784,"nodeType":"StructuredDocumentation","src":"1148:70:25","text":"@notice Event emitted when player's high score reaches a milestone"},"eventSelector":"8da40c9f0f3cb646a9e622b55b658f50e706fdff375424af86b5e90e0a3cf732","id":6794,"name":"MilestoneReached","nameLocation":"1230:16:25","nodeType":"EventDefinition","parameters":{"id":6793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6786,"indexed":true,"mutability":"mutable","name":"player","nameLocation":"1273:6:25","nodeType":"VariableDeclaration","scope":6794,"src":"1257:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6785,"name":"address","nodeType":"ElementaryTypeName","src":"1257:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":6788,"indexed":false,"mutability":"mutable","name":"milestoneIndex","nameLocation":"1298:14:25","nodeType":"VariableDeclaration","scope":6794,"src":"1290:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6787,"name":"uint256","nodeType":"ElementaryTypeName","src":"1290:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6790,"indexed":false,"mutability":"mutable","name":"highScore","nameLocation":"1331:9:25","nodeType":"VariableDeclaration","scope":6794,"src":"1323:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6789,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6792,"indexed":false,"mutability":"mutable","name":"isCrew","nameLocation":"1356:6:25","nodeType":"VariableDeclaration","scope":6794,"src":"1351:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6791,"name":"bool","nodeType":"ElementaryTypeName","src":"1351:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1246:123:25"},"src":"1224:146:25"},{"anonymous":false,"documentation":{"id":6795,"nodeType":"StructuredDocumentation","src":"1378:64:25","text":"@notice Event emitted when the backend wallet address is set"},"eventSelector":"d1e88985151fc6b7a0cf6b9d009f9878a420330db3463adc53971c69fbd86ed9","id":6799,"name":"BackendSignerSet","nameLocation":"1454:16:25","nodeType":"EventDefinition","parameters":{"id":6798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6797,"indexed":false,"mutability":"mutable","name":"backendSigner","nameLocation":"1479:13:25","nodeType":"VariableDeclaration","scope":6799,"src":"1471:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6796,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1470:23:25"},"src":"1448:46:25"},{"documentation":{"id":6800,"nodeType":"StructuredDocumentation","src":"1502:22:25","text":"@dev Custom errors"},"errorSelector":"a1f39833","id":6804,"name":"NonceAlreadyUsed","nameLocation":"1536:16:25","nodeType":"ErrorDefinition","parameters":{"id":6803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6802,"mutability":"mutable","name":"nonce","nameLocation":"1560:5:25","nodeType":"VariableDeclaration","scope":6804,"src":"1553:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":6801,"name":"string","nodeType":"ElementaryTypeName","src":"1553:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1552:14:25"},"src":"1530:37:25"},{"errorSelector":"815e1d64","id":6806,"name":"InvalidSigner","nameLocation":"1579:13:25","nodeType":"ErrorDefinition","parameters":{"id":6805,"nodeType":"ParameterList","parameters":[],"src":"1592:2:25"},"src":"1573:22:25"},{"errorSelector":"2e901ef0","id":6812,"name":"ScoreBelowThreshold","nameLocation":"1607:19:25","nodeType":"ErrorDefinition","parameters":{"id":6811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6808,"mutability":"mutable","name":"score","nameLocation":"1632:5:25","nodeType":"VariableDeclaration","scope":6812,"src":"1627:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6807,"name":"uint","nodeType":"ElementaryTypeName","src":"1627:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":6810,"mutability":"mutable","name":"threshold","nameLocation":"1644:9:25","nodeType":"VariableDeclaration","scope":6812,"src":"1639:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6809,"name":"uint","nodeType":"ElementaryTypeName","src":"1639:4:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1626:28:25"},"src":"1601:54:25"},{"constant":false,"documentation":{"id":6813,"nodeType":"StructuredDocumentation","src":"1663:57:25","text":"@notice Mapping of player address to their high score"},"functionSelector":"ba5bf0e7","id":6817,"mutability":"mutable","name":"highScore","nameLocation":"1761:9:25","nodeType":"VariableDeclaration","scope":7242,"src":"1726:44:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6816,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6814,"name":"address","nodeType":"ElementaryTypeName","src":"1734:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1726:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6815,"name":"uint256","nodeType":"ElementaryTypeName","src":"1745:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"documentation":{"id":6818,"nodeType":"StructuredDocumentation","src":"1779:68:25","text":"@notice Mapping of player address to their high score milestones"},"functionSelector":"0036db13","id":6822,"mutability":"mutable","name":"reachedMilestoneIndex","nameLocation":"1888:21:25","nodeType":"VariableDeclaration","scope":7242,"src":"1853:56:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6821,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6819,"name":"address","nodeType":"ElementaryTypeName","src":"1861:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1853:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6820,"name":"uint256","nodeType":"ElementaryTypeName","src":"1872:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"documentation":{"id":6823,"nodeType":"StructuredDocumentation","src":"1918:55:25","text":"@notice Mapping of crew address to their high score"},"functionSelector":"24f2ab29","id":6827,"mutability":"mutable","name":"crewHighScore","nameLocation":"2014:13:25","nodeType":"VariableDeclaration","scope":7242,"src":"1979:48:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6826,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6824,"name":"address","nodeType":"ElementaryTypeName","src":"1987:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1979:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6825,"name":"uint256","nodeType":"ElementaryTypeName","src":"1998:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"documentation":{"id":6828,"nodeType":"StructuredDocumentation","src":"2036:66:25","text":"@notice Mapping of crew address to their high score milestones"},"functionSelector":"fd140d16","id":6832,"mutability":"mutable","name":"crewReachedMilestoneIndex","nameLocation":"2143:25:25","nodeType":"VariableDeclaration","scope":7242,"src":"2108:60:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6831,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6829,"name":"address","nodeType":"ElementaryTypeName","src":"2116:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"2108:27:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6830,"name":"uint256","nodeType":"ElementaryTypeName","src":"2127:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"documentation":{"id":6833,"nodeType":"StructuredDocumentation","src":"2177:75:25","text":"@notice Mapping of nonce to a boolean indicating if it was already used"},"functionSelector":"b24fce88","id":6837,"mutability":"mutable","name":"nonces","nameLocation":"2289:6:25","nodeType":"VariableDeclaration","scope":7242,"src":"2258:37:25","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"typeName":{"id":6836,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6834,"name":"string","nodeType":"ElementaryTypeName","src":"2266:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"2258:23:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6835,"name":"bool","nodeType":"ElementaryTypeName","src":"2276:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":6859,"nodeType":"Block","src":"2538:134:25","statements":[{"expression":{"arguments":[{"expression":{"id":6846,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2564:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":6847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2568:6:25","memberName":"sender","nodeType":"MemberAccess","src":"2564:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6845,"name":"__Ownable_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"2549:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6848,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2549:26:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6849,"nodeType":"ExpressionStatement","src":"2549:26:25"},{"expression":{"arguments":[{"hexValue":"506570656e6164654372757368","id":6851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2600:15:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a5dc49eb092cbd30cc3ab225e60f157c3586f13584c7a347dbb16a5b7930d84","typeString":"literal_string \"PepenadeCrush\""},"value":"PepenadeCrush"},{"hexValue":"31","id":6852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2617:3:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1a5dc49eb092cbd30cc3ab225e60f157c3586f13584c7a347dbb16a5b7930d84","typeString":"literal_string \"PepenadeCrush\""},{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":6850,"name":"__EIP712_init","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":870,"src":"2586:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory,string memory)"}},"id":6853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2586:35:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6854,"nodeType":"ExpressionStatement","src":"2586:35:25"},{"expression":{"arguments":[{"id":6856,"name":"_backendSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6840,"src":"2649:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":6855,"name":"setBackendSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7115,"src":"2632:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":6857,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2632:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6858,"nodeType":"ExpressionStatement","src":"2632:32:25"}]},"documentation":{"id":6838,"nodeType":"StructuredDocumentation","src":"2304:163:25","text":"@notice Initializes the contract with the backend wallet address and the deployer as the owner\n @param _backendSigner The address of the backend wallet"},"functionSelector":"c4d66de8","id":6860,"implemented":true,"kind":"function","modifiers":[{"id":6843,"kind":"modifierInvocation","modifierName":{"id":6842,"name":"initializer","nameLocations":["2526:11:25"],"nodeType":"IdentifierPath","referencedDeclaration":439,"src":"2526:11:25"},"nodeType":"ModifierInvocation","src":"2526:11:25"}],"name":"initialize","nameLocation":"2482:10:25","nodeType":"FunctionDefinition","parameters":{"id":6841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6840,"mutability":"mutable","name":"_backendSigner","nameLocation":"2501:14:25","nodeType":"VariableDeclaration","scope":6860,"src":"2493:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6839,"name":"address","nodeType":"ElementaryTypeName","src":"2493:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2492:24:25"},"returnParameters":{"id":6844,"nodeType":"ParameterList","parameters":[],"src":"2538:0:25"},"scope":7242,"src":"2473:199:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6875,"nodeType":"Block","src":"3014:59:25","statements":[{"expression":{"arguments":[{"id":6870,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6864,"src":"3039:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}},{"id":6871,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6866,"src":"3048:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"66616c7365","id":6872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3059:5:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6869,"name":"_setHighScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"3025:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_ScoreMessage_$6783_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (struct PepenadeCrush.ScoreMessage memory,bytes memory,bool)"}},"id":6873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3025:40:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6874,"nodeType":"ExpressionStatement","src":"3025:40:25"}]},"documentation":{"id":6861,"nodeType":"StructuredDocumentation","src":"2680:219:25","text":"@notice Adds a score to a player's current score\n @param message The message containing the player address, score and nonce\n @param signature The signature of the message signed by the backend wallet"},"functionSelector":"3ae5bd82","id":6876,"implemented":true,"kind":"function","modifiers":[],"name":"setHighScore","nameLocation":"2914:12:25","nodeType":"FunctionDefinition","parameters":{"id":6867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6864,"mutability":"mutable","name":"message","nameLocation":"2957:7:25","nodeType":"VariableDeclaration","scope":6876,"src":"2937:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage"},"typeName":{"id":6863,"nodeType":"UserDefinedTypeName","pathNode":{"id":6862,"name":"ScoreMessage","nameLocations":["2937:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":6783,"src":"2937:12:25"},"referencedDeclaration":6783,"src":"2937:12:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_storage_ptr","typeString":"struct PepenadeCrush.ScoreMessage"}},"visibility":"internal"},{"constant":false,"id":6866,"mutability":"mutable","name":"signature","nameLocation":"2988:9:25","nodeType":"VariableDeclaration","scope":6876,"src":"2975:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6865,"name":"bytes","nodeType":"ElementaryTypeName","src":"2975:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2926:78:25"},"returnParameters":{"id":6868,"nodeType":"ParameterList","parameters":[],"src":"3014:0:25"},"scope":7242,"src":"2905:168:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6890,"nodeType":"Block","src":"3194:58:25","statements":[{"expression":{"arguments":[{"id":6885,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6879,"src":"3219:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}},{"id":6886,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6881,"src":"3228:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"74727565","id":6887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3239:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6884,"name":"_setHighScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7000,"src":"3205:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_ScoreMessage_$6783_memory_ptr_$_t_bytes_memory_ptr_$_t_bool_$returns$__$","typeString":"function (struct PepenadeCrush.ScoreMessage memory,bytes memory,bool)"}},"id":6888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3205:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6889,"nodeType":"ExpressionStatement","src":"3205:39:25"}]},"functionSelector":"369ccde7","id":6891,"implemented":true,"kind":"function","modifiers":[],"name":"setCrewHighScore","nameLocation":"3090:16:25","nodeType":"FunctionDefinition","parameters":{"id":6882,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6879,"mutability":"mutable","name":"message","nameLocation":"3137:7:25","nodeType":"VariableDeclaration","scope":6891,"src":"3117:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage"},"typeName":{"id":6878,"nodeType":"UserDefinedTypeName","pathNode":{"id":6877,"name":"ScoreMessage","nameLocations":["3117:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":6783,"src":"3117:12:25"},"referencedDeclaration":6783,"src":"3117:12:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_storage_ptr","typeString":"struct PepenadeCrush.ScoreMessage"}},"visibility":"internal"},{"constant":false,"id":6881,"mutability":"mutable","name":"signature","nameLocation":"3168:9:25","nodeType":"VariableDeclaration","scope":6891,"src":"3155:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6880,"name":"bytes","nodeType":"ElementaryTypeName","src":"3155:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3106:78:25"},"returnParameters":{"id":6883,"nodeType":"ParameterList","parameters":[],"src":"3194:0:25"},"scope":7242,"src":"3081:171:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":6999,"nodeType":"Block","src":"3391:1377:25","statements":[{"expression":{"arguments":[{"expression":{"id":6902,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"3416:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}},"id":6903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3424:5:25","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":6782,"src":"3416:13:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":6901,"name":"_consumeNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7201,"src":"3402:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory)"}},"id":6904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3402:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6905,"nodeType":"ExpressionStatement","src":"3402:28:25"},{"expression":{"arguments":[{"id":6907,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"3458:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}},{"id":6908,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6896,"src":"3467:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":6906,"name":"_verifySignature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7179,"src":"3441:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_ScoreMessage_$6783_memory_ptr_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (struct PepenadeCrush.ScoreMessage memory,bytes memory) view"}},"id":6909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3441:36:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6910,"nodeType":"ExpressionStatement","src":"3441:36:25"},{"assignments":[6914],"declarations":[{"constant":false,"id":6914,"mutability":"mutable","name":"scoreMapping","nameLocation":"3527:12:25","nodeType":"VariableDeclaration","scope":6999,"src":"3490:49:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6913,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6911,"name":"address","nodeType":"ElementaryTypeName","src":"3499:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3490:28:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6912,"name":"uint256","nodeType":"ElementaryTypeName","src":"3510:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"id":6919,"initialValue":{"condition":{"id":6915,"name":"isCrew","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"3542:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6917,"name":"highScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6817,"src":"3567:9:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3542:34:25","trueExpression":{"id":6916,"name":"crewHighScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6827,"src":"3551:13:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3490:86:25"},{"assignments":[6923],"declarations":[{"constant":false,"id":6923,"mutability":"mutable","name":"reachedMilestoneMapping","nameLocation":"3624:23:25","nodeType":"VariableDeclaration","scope":6999,"src":"3587:60:25","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":6922,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":6920,"name":"address","nodeType":"ElementaryTypeName","src":"3596:7:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3587:28:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":6921,"name":"uint256","nodeType":"ElementaryTypeName","src":"3607:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"id":6928,"initialValue":{"condition":{"id":6924,"name":"isCrew","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"3650:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":6926,"name":"reachedMilestoneIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6822,"src":"3687:21:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3650:58:25","trueExpression":{"id":6925,"name":"crewReachedMilestoneIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6832,"src":"3659:25:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"nodeType":"VariableDeclarationStatement","src":"3587:121:25"},{"assignments":[6930],"declarations":[{"constant":false,"id":6930,"mutability":"mutable","name":"newScore","nameLocation":"3729:8:25","nodeType":"VariableDeclaration","scope":6999,"src":"3721:16:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6929,"name":"uint256","nodeType":"ElementaryTypeName","src":"3721:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6933,"initialValue":{"expression":{"id":6931,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"3740:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}},"id":6932,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3748:5:25","memberName":"score","nodeType":"MemberAccess","referencedDeclaration":6780,"src":"3740:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3721:32:25"},{"assignments":[6935],"declarations":[{"constant":false,"id":6935,"mutability":"mutable","name":"currentMilestone","nameLocation":"3772:16:25","nodeType":"VariableDeclaration","scope":6999,"src":"3764:24:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6934,"name":"uint256","nodeType":"ElementaryTypeName","src":"3764:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6940,"initialValue":{"baseExpression":{"id":6936,"name":"reachedMilestoneMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"3791:23:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6939,"indexExpression":{"expression":{"id":6937,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"3815:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}},"id":6938,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3823:6:25","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"3815:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3791:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3764:66:25"},{"assignments":[6942],"declarations":[{"constant":false,"id":6942,"mutability":"mutable","name":"nextMilestoneScore","nameLocation":"3849:18:25","nodeType":"VariableDeclaration","scope":6999,"src":"3841:26:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":6941,"name":"uint256","nodeType":"ElementaryTypeName","src":"3841:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":6948,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6944,"name":"currentMilestone","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6935,"src":"3888:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6945,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3907:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3888:20:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6943,"name":"getMilestoneScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"3870:17:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3870:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3841:68:25"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6949,"name":"newScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"4004:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":6950,"name":"nextMilestoneScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"4015:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4004:29:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6958,"nodeType":"IfStatement","src":"4000:118:25","trueBody":{"id":6957,"nodeType":"Block","src":"4035:83:25","statements":[{"errorCall":{"arguments":[{"id":6953,"name":"newScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"4077:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6954,"name":"nextMilestoneScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"4087:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6952,"name":"ScoreBelowThreshold","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6812,"src":"4057:19:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$","typeString":"function (uint256,uint256) pure returns (error)"}},"id":6955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4057:49:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":6956,"nodeType":"RevertStatement","src":"4050:56:25"}]}},{"body":{"id":6990,"nodeType":"Block","src":"4304:362:25","statements":[{"expression":{"id":6966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"4319:41:25","subExpression":{"baseExpression":{"id":6962,"name":"reachedMilestoneMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"4319:23:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6965,"indexExpression":{"expression":{"id":6963,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"4343:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}},"id":6964,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4351:6:25","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"4343:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4319:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6967,"nodeType":"ExpressionStatement","src":"4319:41:25"},{"expression":{"id":6977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":6968,"name":"nextMilestoneScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"4375:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":6970,"name":"reachedMilestoneMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"4414:23:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6973,"indexExpression":{"expression":{"id":6971,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"4438:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}},"id":6972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4446:6:25","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"4438:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4414:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":6974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4456:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4414:43:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":6969,"name":"getMilestoneScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7059,"src":"4396:17:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":6976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4396:62:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4375:83:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6978,"nodeType":"ExpressionStatement","src":"4375:83:25"},{"eventCall":{"arguments":[{"expression":{"id":6980,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"4515:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}},"id":6981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4523:6:25","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"4515:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":6982,"name":"reachedMilestoneMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6923,"src":"4548:23:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6985,"indexExpression":{"expression":{"id":6983,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"4572:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}},"id":6984,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4580:6:25","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"4572:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4548:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6986,"name":"newScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"4606:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":6987,"name":"isCrew","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6898,"src":"4633:6:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":6979,"name":"MilestoneReached","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6794,"src":"4480:16:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$","typeString":"function (address,uint256,uint256,bool)"}},"id":6988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4480:174:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":6989,"nodeType":"EmitStatement","src":"4475:179:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":6961,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":6959,"name":"newScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"4272:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":6960,"name":"nextMilestoneScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6942,"src":"4284:18:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4272:30:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":6991,"nodeType":"WhileStatement","src":"4265:401:25"},{"expression":{"id":6997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":6992,"name":"scoreMapping","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6914,"src":"4721:12:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":6995,"indexExpression":{"expression":{"id":6993,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6894,"src":"4734:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}},"id":6994,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4742:6:25","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"4734:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4721:28:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":6996,"name":"newScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6930,"src":"4752:8:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4721:39:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":6998,"nodeType":"ExpressionStatement","src":"4721:39:25"}]},"id":7000,"implemented":true,"kind":"function","modifiers":[],"name":"_setHighScore","nameLocation":"3269:13:25","nodeType":"FunctionDefinition","parameters":{"id":6899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":6894,"mutability":"mutable","name":"message","nameLocation":"3313:7:25","nodeType":"VariableDeclaration","scope":7000,"src":"3293:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage"},"typeName":{"id":6893,"nodeType":"UserDefinedTypeName","pathNode":{"id":6892,"name":"ScoreMessage","nameLocations":["3293:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":6783,"src":"3293:12:25"},"referencedDeclaration":6783,"src":"3293:12:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_storage_ptr","typeString":"struct PepenadeCrush.ScoreMessage"}},"visibility":"internal"},{"constant":false,"id":6896,"mutability":"mutable","name":"signature","nameLocation":"3344:9:25","nodeType":"VariableDeclaration","scope":7000,"src":"3331:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":6895,"name":"bytes","nodeType":"ElementaryTypeName","src":"3331:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":6898,"mutability":"mutable","name":"isCrew","nameLocation":"3369:6:25","nodeType":"VariableDeclaration","scope":7000,"src":"3364:11:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":6897,"name":"bool","nodeType":"ElementaryTypeName","src":"3364:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3282:100:25"},"returnParameters":{"id":6900,"nodeType":"ParameterList","parameters":[],"src":"3391:0:25"},"scope":7242,"src":"3260:1508:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7058,"nodeType":"Block","src":"5148:361:25","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7008,"name":"milestoneIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"5163:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":7009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5181:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5163:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7014,"nodeType":"IfStatement","src":"5159:60:25","trueBody":{"id":7013,"nodeType":"Block","src":"5184:35:25","statements":[{"expression":{"hexValue":"30","id":7011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5206:1:25","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":7007,"id":7012,"nodeType":"Return","src":"5199:8:25"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7015,"name":"milestoneIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"5233:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":7016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5251:1:25","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5233:19:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7021,"nodeType":"IfStatement","src":"5229:61:25","trueBody":{"id":7020,"nodeType":"Block","src":"5254:36:25","statements":[{"expression":{"hexValue":"3130","id":7018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5276:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"functionReturnParameters":7007,"id":7019,"nodeType":"Return","src":"5269:9:25"}]}},{"assignments":[7023],"declarations":[{"constant":false,"id":7023,"mutability":"mutable","name":"a","nameLocation":"5310:1:25","nodeType":"VariableDeclaration","scope":7058,"src":"5302:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7022,"name":"uint256","nodeType":"ElementaryTypeName","src":"5302:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7025,"initialValue":{"hexValue":"3130","id":7024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5314:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"VariableDeclarationStatement","src":"5302:14:25"},{"assignments":[7027],"declarations":[{"constant":false,"id":7027,"mutability":"mutable","name":"b","nameLocation":"5335:1:25","nodeType":"VariableDeclaration","scope":7058,"src":"5327:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7026,"name":"uint256","nodeType":"ElementaryTypeName","src":"5327:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7029,"initialValue":{"hexValue":"3230","id":7028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5339:2:25","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"nodeType":"VariableDeclarationStatement","src":"5327:14:25"},{"body":{"id":7054,"nodeType":"Block","src":"5397:84:25","statements":[{"assignments":[7041],"declarations":[{"constant":false,"id":7041,"mutability":"mutable","name":"c","nameLocation":"5420:1:25","nodeType":"VariableDeclaration","scope":7054,"src":"5412:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7040,"name":"uint256","nodeType":"ElementaryTypeName","src":"5412:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7045,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7044,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7042,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"5424:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":7043,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"5428:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5424:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5412:17:25"},{"expression":{"id":7048,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7046,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7023,"src":"5444:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7047,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"5448:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5444:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7049,"nodeType":"ExpressionStatement","src":"5444:5:25"},{"expression":{"id":7052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7050,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"5464:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7051,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7041,"src":"5468:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5464:5:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7053,"nodeType":"ExpressionStatement","src":"5464:5:25"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":7036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7034,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"5372:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":7035,"name":"milestoneIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7003,"src":"5376:14:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5372:18:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7055,"initializationExpression":{"assignments":[7031],"declarations":[{"constant":false,"id":7031,"mutability":"mutable","name":"i","nameLocation":"5365:1:25","nodeType":"VariableDeclaration","scope":7055,"src":"5357:9:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7030,"name":"uint256","nodeType":"ElementaryTypeName","src":"5357:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":7033,"initialValue":{"hexValue":"32","id":7032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5369:1:25","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"VariableDeclarationStatement","src":"5357:13:25"},"isSimpleCounterLoop":true,"loopExpression":{"expression":{"id":7038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5392:3:25","subExpression":{"id":7037,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7031,"src":"5392:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7039,"nodeType":"ExpressionStatement","src":"5392:3:25"},"nodeType":"ForStatement","src":"5352:129:25"},{"expression":{"id":7056,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7027,"src":"5500:1:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":7007,"id":7057,"nodeType":"Return","src":"5493:8:25"}]},"documentation":{"id":7001,"nodeType":"StructuredDocumentation","src":"4776:269:25","text":"@notice Calculates the score for a given milestone\n @dev The milestones are calculated as Fibonacci numbers, starting from 10\n @param milestoneIndex The 1-based index of the milestone. The first milestone to beat has index 1\n @return uint256"},"functionSelector":"3796e04f","id":7059,"implemented":true,"kind":"function","modifiers":[],"name":"getMilestoneScore","nameLocation":"5060:17:25","nodeType":"FunctionDefinition","parameters":{"id":7004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7003,"mutability":"mutable","name":"milestoneIndex","nameLocation":"5096:14:25","nodeType":"VariableDeclaration","scope":7059,"src":"5088:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7002,"name":"uint256","nodeType":"ElementaryTypeName","src":"5088:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5077:40:25"},"returnParameters":{"id":7007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7006,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7059,"src":"5139:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7005,"name":"uint256","nodeType":"ElementaryTypeName","src":"5139:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5138:9:25"},"scope":7242,"src":"5051:458:25","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":7075,"nodeType":"Block","src":"5872:65:25","statements":[{"expression":{"arguments":[{"id":7071,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7063,"src":"5905:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}},{"id":7072,"name":"encodedMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7065,"src":"5914:14:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7070,"name":"_verifyMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7145,"src":"5890:14:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_ScoreMessage_$6783_memory_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct PepenadeCrush.ScoreMessage memory,bytes32) view returns (bool)"}},"id":7073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5890:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7069,"id":7074,"nodeType":"Return","src":"5883:46:25"}]},"documentation":{"id":7060,"nodeType":"StructuredDocumentation","src":"5517:212:25","text":"@notice Utility function to check if the message encoding is valid\n @param message The message containing the player address, score and nonce\n @param encodedMessage Hashed, ABI encoded message"},"functionSelector":"0f2929e7","id":7076,"implemented":true,"kind":"function","modifiers":[],"name":"isMessageEncodingValid","nameLocation":"5744:22:25","nodeType":"FunctionDefinition","parameters":{"id":7066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7063,"mutability":"mutable","name":"message","nameLocation":"5797:7:25","nodeType":"VariableDeclaration","scope":7076,"src":"5777:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage"},"typeName":{"id":7062,"nodeType":"UserDefinedTypeName","pathNode":{"id":7061,"name":"ScoreMessage","nameLocations":["5777:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":6783,"src":"5777:12:25"},"referencedDeclaration":6783,"src":"5777:12:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_storage_ptr","typeString":"struct PepenadeCrush.ScoreMessage"}},"visibility":"internal"},{"constant":false,"id":7065,"mutability":"mutable","name":"encodedMessage","nameLocation":"5823:14:25","nodeType":"VariableDeclaration","scope":7076,"src":"5815:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7064,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5815:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5766:78:25"},"returnParameters":{"id":7069,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7068,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7076,"src":"5866:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7067,"name":"bool","nodeType":"ElementaryTypeName","src":"5866:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5865:6:25"},"scope":7242,"src":"5735:202:25","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7097,"nodeType":"Block","src":"6275:104:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":7091,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7080,"src":"6350:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}],"id":7090,"name":"_hashMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"6337:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ScoreMessage_$6783_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct PepenadeCrush.ScoreMessage memory) pure returns (bytes32)"}},"id":7092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6337:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7089,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"6320:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":7093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6320:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7094,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7082,"src":"6361:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7087,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"6306:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2933_$","typeString":"type(library ECDSA)"}},"id":7088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6312:7:25","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"6306:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":7095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6306:65:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":7086,"id":7096,"nodeType":"Return","src":"6286:85:25"}]},"documentation":{"id":7077,"nodeType":"StructuredDocumentation","src":"5945:197:25","text":"@notice Utility function to get the signer of a message\n @param message The message containing the player address, score and nonce\n @param signature The signature of the message"},"functionSelector":"f70003d5","id":7098,"implemented":true,"kind":"function","modifiers":[],"name":"getSigner","nameLocation":"6157:9:25","nodeType":"FunctionDefinition","parameters":{"id":7083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7080,"mutability":"mutable","name":"message","nameLocation":"6197:7:25","nodeType":"VariableDeclaration","scope":7098,"src":"6177:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage"},"typeName":{"id":7079,"nodeType":"UserDefinedTypeName","pathNode":{"id":7078,"name":"ScoreMessage","nameLocations":["6177:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":6783,"src":"6177:12:25"},"referencedDeclaration":6783,"src":"6177:12:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_storage_ptr","typeString":"struct PepenadeCrush.ScoreMessage"}},"visibility":"internal"},{"constant":false,"id":7082,"mutability":"mutable","name":"signature","nameLocation":"6228:9:25","nodeType":"VariableDeclaration","scope":7098,"src":"6215:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7081,"name":"bytes","nodeType":"ElementaryTypeName","src":"6215:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6166:78:25"},"returnParameters":{"id":7086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7085,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7098,"src":"6266:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7084,"name":"address","nodeType":"ElementaryTypeName","src":"6266:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6265:9:25"},"scope":7242,"src":"6148:231:25","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":7114,"nodeType":"Block","src":"6601:97:25","statements":[{"expression":{"id":7108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":7106,"name":"backendSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"6612:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":7107,"name":"_backendSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"6628:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6612:30:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":7109,"nodeType":"ExpressionStatement","src":"6612:30:25"},{"eventCall":{"arguments":[{"id":7111,"name":"_backendSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7101,"src":"6675:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":7110,"name":"BackendSignerSet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6799,"src":"6658:16:25","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":7112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6658:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":7113,"nodeType":"EmitStatement","src":"6653:37:25"}]},"documentation":{"id":7099,"nodeType":"StructuredDocumentation","src":"6387:141:25","text":"@notice Sets the backend wallet address. Can only be called by the owner\n @param _backendSigner The address of the backend wallet"},"functionSelector":"36f95670","id":7115,"implemented":true,"kind":"function","modifiers":[{"id":7104,"kind":"modifierInvocation","modifierName":{"id":7103,"name":"onlyOwner","nameLocations":["6591:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":226,"src":"6591:9:25"},"nodeType":"ModifierInvocation","src":"6591:9:25"}],"name":"setBackendSigner","nameLocation":"6543:16:25","nodeType":"FunctionDefinition","parameters":{"id":7102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7101,"mutability":"mutable","name":"_backendSigner","nameLocation":"6568:14:25","nodeType":"VariableDeclaration","scope":7115,"src":"6560:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7100,"name":"address","nodeType":"ElementaryTypeName","src":"6560:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6559:24:25"},"returnParameters":{"id":7105,"nodeType":"ParameterList","parameters":[],"src":"6601:0:25"},"scope":7242,"src":"6534:164:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":7144,"nodeType":"Block","src":"7041:181:25","statements":[{"assignments":[7127],"declarations":[{"constant":false,"id":7127,"mutability":"mutable","name":"expectedDigest","nameLocation":"7060:14:25","nodeType":"VariableDeclaration","scope":7144,"src":"7052:22:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7126,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7052:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7133,"initialValue":{"arguments":[{"arguments":[{"id":7130,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7119,"src":"7107:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}],"id":7129,"name":"_hashMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"7094:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ScoreMessage_$6783_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct PepenadeCrush.ScoreMessage memory) pure returns (bytes32)"}},"id":7131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7094:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7128,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"7077:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":7132,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7077:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7052:64:25"},{"assignments":[7135],"declarations":[{"constant":false,"id":7135,"mutability":"mutable","name":"digest","nameLocation":"7135:6:25","nodeType":"VariableDeclaration","scope":7144,"src":"7127:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7127:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7139,"initialValue":{"arguments":[{"id":7137,"name":"rawMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7121,"src":"7161:10:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7136,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"7144:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":7138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7144:28:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7127:45:25"},{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":7142,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7140,"name":"expectedDigest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7127,"src":"7190:14:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":7141,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7135,"src":"7208:6:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7190:24:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":7125,"id":7143,"nodeType":"Return","src":"7183:31:25"}]},"documentation":{"id":7116,"nodeType":"StructuredDocumentation","src":"6706:203:25","text":"@dev Verifies if the message was constructed correctly\n @param message The message containing the player address, score, nonce\n @param rawMessage The raw message\n @return bool"},"id":7145,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyMessage","nameLocation":"6924:14:25","nodeType":"FunctionDefinition","parameters":{"id":7122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7119,"mutability":"mutable","name":"message","nameLocation":"6969:7:25","nodeType":"VariableDeclaration","scope":7145,"src":"6949:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage"},"typeName":{"id":7118,"nodeType":"UserDefinedTypeName","pathNode":{"id":7117,"name":"ScoreMessage","nameLocations":["6949:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":6783,"src":"6949:12:25"},"referencedDeclaration":6783,"src":"6949:12:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_storage_ptr","typeString":"struct PepenadeCrush.ScoreMessage"}},"visibility":"internal"},{"constant":false,"id":7121,"mutability":"mutable","name":"rawMessage","nameLocation":"6995:10:25","nodeType":"VariableDeclaration","scope":7145,"src":"6987:18:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6987:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6938:74:25"},"returnParameters":{"id":7125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7145,"src":"7035:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":7123,"name":"bool","nodeType":"ElementaryTypeName","src":"7035:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7034:6:25"},"scope":7242,"src":"6915:307:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7178,"nodeType":"Block","src":"7588:223:25","statements":[{"assignments":[7155],"declarations":[{"constant":false,"id":7155,"mutability":"mutable","name":"digest","nameLocation":"7607:6:25","nodeType":"VariableDeclaration","scope":7178,"src":"7599:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7154,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7599:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":7161,"initialValue":{"arguments":[{"arguments":[{"id":7158,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7149,"src":"7646:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}],"id":7157,"name":"_hashMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7231,"src":"7633:12:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_struct$_ScoreMessage_$6783_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct PepenadeCrush.ScoreMessage memory) pure returns (bytes32)"}},"id":7159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7633:21:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":7156,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":959,"src":"7616:16:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":7160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7616:39:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7599:56:25"},{"assignments":[7163],"declarations":[{"constant":false,"id":7163,"mutability":"mutable","name":"signer","nameLocation":"7674:6:25","nodeType":"VariableDeclaration","scope":7178,"src":"7666:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7162,"name":"address","nodeType":"ElementaryTypeName","src":"7666:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":7169,"initialValue":{"arguments":[{"id":7166,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7155,"src":"7697:6:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":7167,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7151,"src":"7705:9:25","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":7164,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"7683:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2933_$","typeString":"type(library ECDSA)"}},"id":7165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7689:7:25","memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2689,"src":"7683:13:25","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$","typeString":"function (bytes32,bytes memory) pure returns (address)"}},"id":7168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7683:32:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"7666:49:25"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":7172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":7170,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7163,"src":"7730:6:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":7171,"name":"backendSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6775,"src":"7740:13:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7730:23:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7177,"nodeType":"IfStatement","src":"7726:78:25","trueBody":{"id":7176,"nodeType":"Block","src":"7755:49:25","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":7173,"name":"InvalidSigner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6806,"src":"7777:13:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":7174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7777:15:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7175,"nodeType":"RevertStatement","src":"7770:22:25"}]}}]},"documentation":{"id":7146,"nodeType":"StructuredDocumentation","src":"7230:235:25","text":"@dev Verifies if the message was signed by the backend wallet. Reverts with InvalidSigner if not\n @param message The message containing the player address, score, nonce\n @param signature The signature of the message"},"id":7179,"implemented":true,"kind":"function","modifiers":[],"name":"_verifySignature","nameLocation":"7480:16:25","nodeType":"FunctionDefinition","parameters":{"id":7152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7149,"mutability":"mutable","name":"message","nameLocation":"7527:7:25","nodeType":"VariableDeclaration","scope":7179,"src":"7507:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage"},"typeName":{"id":7148,"nodeType":"UserDefinedTypeName","pathNode":{"id":7147,"name":"ScoreMessage","nameLocations":["7507:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":6783,"src":"7507:12:25"},"referencedDeclaration":6783,"src":"7507:12:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_storage_ptr","typeString":"struct PepenadeCrush.ScoreMessage"}},"visibility":"internal"},{"constant":false,"id":7151,"mutability":"mutable","name":"signature","nameLocation":"7558:9:25","nodeType":"VariableDeclaration","scope":7179,"src":"7545:22:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":7150,"name":"bytes","nodeType":"ElementaryTypeName","src":"7545:5:25","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7496:78:25"},"returnParameters":{"id":7153,"nodeType":"ParameterList","parameters":[],"src":"7588:0:25"},"scope":7242,"src":"7471:340:25","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":7200,"nodeType":"Block","src":"8070:127:25","statements":[{"condition":{"baseExpression":{"id":7185,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"8085:6:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":7187,"indexExpression":{"id":7186,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7182,"src":"8092:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8085:13:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7193,"nodeType":"IfStatement","src":"8081:76:25","trueBody":{"id":7192,"nodeType":"Block","src":"8100:57:25","statements":[{"errorCall":{"arguments":[{"id":7189,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7182,"src":"8139:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7188,"name":"NonceAlreadyUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6804,"src":"8122:16:25","typeDescriptions":{"typeIdentifier":"t_function_error_pure$_t_string_memory_ptr_$returns$_t_error_$","typeString":"function (string memory) pure returns (error)"}},"id":7190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:23:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":7191,"nodeType":"RevertStatement","src":"8115:30:25"}]}},{"expression":{"id":7198,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7194,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":6837,"src":"8169:6:25","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string memory => bool)"}},"id":7196,"indexExpression":{"id":7195,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7182,"src":"8176:5:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8169:13:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":7197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8185:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8169:20:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":7199,"nodeType":"ExpressionStatement","src":"8169:20:25"}]},"documentation":{"id":7180,"nodeType":"StructuredDocumentation","src":"7819:193:25","text":"@notice Validates whether a nonce was already used and marks it as used\n @param nonce The nonce to validate\n @dev Reverts with NonceAlreadyUsed if the nonce was already used"},"id":7201,"implemented":true,"kind":"function","modifiers":[],"name":"_consumeNonce","nameLocation":"8027:13:25","nodeType":"FunctionDefinition","parameters":{"id":7183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7182,"mutability":"mutable","name":"nonce","nameLocation":"8055:5:25","nodeType":"VariableDeclaration","scope":7201,"src":"8041:19:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":7181,"name":"string","nodeType":"ElementaryTypeName","src":"8041:6:25","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8040:21:25"},"returnParameters":{"id":7184,"nodeType":"ParameterList","parameters":[],"src":"8070:0:25"},"scope":7242,"src":"8018:179:25","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":7230,"nodeType":"Block","src":"8476:377:25","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"53636f72654d657373616765286164647265737320706c617965722c75696e743235362073636f72652c737472696e67206e6f6e636529","id":7214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8604:57:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_da64709d5ffe5185cbc562c5de92c99255f19190474bd52f276b7952bf74983e","typeString":"literal_string \"ScoreMessage(address player,uint256 score,string nonce)\""},"value":"ScoreMessage(address player,uint256 score,string nonce)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da64709d5ffe5185cbc562c5de92c99255f19190474bd52f276b7952bf74983e","typeString":"literal_string \"ScoreMessage(address player,uint256 score,string nonce)\""}],"id":7213,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8568:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8568:116:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":7216,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"8707:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}},"id":7217,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8715:6:25","memberName":"player","nodeType":"MemberAccess","referencedDeclaration":6778,"src":"8707:14:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":7218,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"8744:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}},"id":7219,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8752:5:25","memberName":"score","nodeType":"MemberAccess","referencedDeclaration":6780,"src":"8744:13:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"expression":{"id":7223,"name":"message","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7205,"src":"8796:7:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage memory"}},"id":7224,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8804:5:25","memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":6782,"src":"8796:13:25","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":7222,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8790:5:25","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":7221,"name":"bytes","nodeType":"ElementaryTypeName","src":"8790:5:25","typeDescriptions":{}}},"id":7225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8790:20:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7220,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8780:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8780:31:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":7211,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8535:3:25","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":7212,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8539:6:25","memberName":"encode","nodeType":"MemberAccess","src":"8535:10:25","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":7227,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8535:295:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":7210,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8507:9:25","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":7228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8507:338:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":7209,"id":7229,"nodeType":"Return","src":"8487:358:25"}]},"documentation":{"id":7202,"nodeType":"StructuredDocumentation","src":"8205:167:25","text":"@dev ABI encodes the message and hashes it using keccak256\n @param message The message containing the player address, score, nonce\n @return bytes32"},"id":7231,"implemented":true,"kind":"function","modifiers":[],"name":"_hashMessage","nameLocation":"8387:12:25","nodeType":"FunctionDefinition","parameters":{"id":7206,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7205,"mutability":"mutable","name":"message","nameLocation":"8430:7:25","nodeType":"VariableDeclaration","scope":7231,"src":"8410:27:25","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_memory_ptr","typeString":"struct PepenadeCrush.ScoreMessage"},"typeName":{"id":7204,"nodeType":"UserDefinedTypeName","pathNode":{"id":7203,"name":"ScoreMessage","nameLocations":["8410:12:25"],"nodeType":"IdentifierPath","referencedDeclaration":6783,"src":"8410:12:25"},"referencedDeclaration":6783,"src":"8410:12:25","typeDescriptions":{"typeIdentifier":"t_struct$_ScoreMessage_$6783_storage_ptr","typeString":"struct PepenadeCrush.ScoreMessage"}},"visibility":"internal"}],"src":"8399:45:25"},"returnParameters":{"id":7209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7208,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":7231,"src":"8467:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":7207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8467:7:25","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8466:9:25"},"scope":7242,"src":"8378:475:25","stateMutability":"pure","virtual":false,"visibility":"private"},{"baseFunctions":[721],"body":{"id":7240,"nodeType":"Block","src":"9091:2:25","statements":[]},"documentation":{"id":7232,"nodeType":"StructuredDocumentation","src":"8861:126:25","text":"@dev Upgrades the contract to a new implementation\n @param newImplementation The address of the new implementation"},"id":7241,"implemented":true,"kind":"function","modifiers":[{"id":7238,"kind":"modifierInvocation","modifierName":{"id":7237,"name":"onlyOwner","nameLocations":["9081:9:25"],"nodeType":"IdentifierPath","referencedDeclaration":226,"src":"9081:9:25"},"nodeType":"ModifierInvocation","src":"9081:9:25"}],"name":"_authorizeUpgrade","nameLocation":"9002:17:25","nodeType":"FunctionDefinition","overrides":{"id":7236,"nodeType":"OverrideSpecifier","overrides":[],"src":"9072:8:25"},"parameters":{"id":7235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7234,"mutability":"mutable","name":"newImplementation","nameLocation":"9038:17:25","nodeType":"VariableDeclaration","scope":7241,"src":"9030:25:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7233,"name":"address","nodeType":"ElementaryTypeName","src":"9030:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9019:43:25"},"returnParameters":{"id":7239,"nodeType":"ParameterList","parameters":[],"src":"9091:0:25"},"scope":7242,"src":"8993:100:25","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7243,"src":"712:8384:25","usedErrors":[167,172,348,351,612,617,1271,1284,1601,1863,2596,2601,2606,6804,6806,6812],"usedEvents":[31,178,356,1165,1183,6794,6799]}],"src":"40:9058:25"}},"contracts/Proxy.sol":{"id":26,"ast":{"absolutePath":"contracts/Proxy.sol","exportedSymbols":{"ERC1967Proxy":[1251],"ERC1967Utils":[1545],"Proxy":[1581]},"id":7246,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":7244,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"40:23:26"},{"absolutePath":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","file":"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol","id":7245,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7246,"sourceUnit":1252,"src":"67:64:26","symbolAliases":[],"unitAlias":""}],"src":"40:93:26"}},"contracts/test/PepenadeCrushV2Test.sol":{"id":27,"ast":{"absolutePath":"contracts/test/PepenadeCrushV2Test.sol","exportedSymbols":{"ECDSA":[2933],"EIP712":[3160],"EIP712Upgradeable":[1157],"Initializable":[585],"Ownable2StepUpgradeable":[136],"PepenadeCrushV2Test":[7311],"UUPSUpgradeable":[767]},"id":7312,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":7247,"literals":["solidity","0.8",".27"],"nodeType":"PragmaDirective","src":"40:23:27"},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol","id":7249,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7312,"sourceUnit":768,"src":"67:100:27","symbolAliases":[{"foreign":{"id":7248,"name":"UUPSUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":767,"src":"75:15:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol","id":7251,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7312,"sourceUnit":586,"src":"169:96:27","symbolAliases":[{"foreign":{"id":7250,"name":"Initializable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":585,"src":"177:13:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","file":"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol","id":7253,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7312,"sourceUnit":1158,"src":"267:111:27","symbolAliases":[{"foreign":{"id":7252,"name":"EIP712Upgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"275:17:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol","file":"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol","id":7255,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7312,"sourceUnit":137,"src":"380:111:27","symbolAliases":[{"foreign":{"id":7254,"name":"Ownable2StepUpgradeable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":136,"src":"388:23:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","id":7257,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7312,"sourceUnit":2934,"src":"495:75:27","symbolAliases":[{"foreign":{"id":7256,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2933,"src":"503:5:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","file":"@openzeppelin/contracts/utils/cryptography/EIP712.sol","id":7259,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":7312,"sourceUnit":3161,"src":"572:77:27","symbolAliases":[{"foreign":{"id":7258,"name":"EIP712","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3160,"src":"580:6:27","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":7261,"name":"Initializable","nameLocations":["872:13:27"],"nodeType":"IdentifierPath","referencedDeclaration":585,"src":"872:13:27"},"id":7262,"nodeType":"InheritanceSpecifier","src":"872:13:27"},{"baseName":{"id":7263,"name":"UUPSUpgradeable","nameLocations":["892:15:27"],"nodeType":"IdentifierPath","referencedDeclaration":767,"src":"892:15:27"},"id":7264,"nodeType":"InheritanceSpecifier","src":"892:15:27"},{"baseName":{"id":7265,"name":"EIP712Upgradeable","nameLocations":["914:17:27"],"nodeType":"IdentifierPath","referencedDeclaration":1157,"src":"914:17:27"},"id":7266,"nodeType":"InheritanceSpecifier","src":"914:17:27"},{"baseName":{"id":7267,"name":"Ownable2StepUpgradeable","nameLocations":["938:23:27"],"nodeType":"IdentifierPath","referencedDeclaration":136,"src":"938:23:27"},"id":7268,"nodeType":"InheritanceSpecifier","src":"938:23:27"}],"canonicalName":"PepenadeCrushV2Test","contractDependencies":[],"contractKind":"contract","documentation":{"id":7260,"nodeType":"StructuredDocumentation","src":"653:182:27","text":"@title HighScore contract for upgrade testing purposes\n @notice UUPS upgradable contract, used to store the high score for Pepenade Crush game by utilizing EIP-712 standard"},"fullyImplemented":true,"id":7311,"linearizedBaseContracts":[7311,136,331,813,1157,1203,767,1213,585],"name":"PepenadeCrushV2Test","nameLocation":"844:19:27","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":7269,"nodeType":"StructuredDocumentation","src":"970:73:27","text":"@notice The address of the backend wallet that will sign the messages"},"functionSelector":"65d65e86","id":7271,"mutability":"mutable","name":"backendSigner","nameLocation":"1064:13:27","nodeType":"VariableDeclaration","scope":7311,"src":"1049:28:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7270,"name":"address","nodeType":"ElementaryTypeName","src":"1049:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"documentation":{"id":7272,"nodeType":"StructuredDocumentation","src":"1086:57:27","text":"@notice Mapping of player address to their high score"},"functionSelector":"ba5bf0e7","id":7276,"mutability":"mutable","name":"highScore","nameLocation":"1184:9:27","nodeType":"VariableDeclaration","scope":7311,"src":"1149:44:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":7275,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7273,"name":"address","nodeType":"ElementaryTypeName","src":"1157:7:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1149:27:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7274,"name":"uint256","nodeType":"ElementaryTypeName","src":"1168:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"documentation":{"id":7277,"nodeType":"StructuredDocumentation","src":"1202:64:27","text":"@notice Mapping of nonces to check if they were already used"},"functionSelector":"b24fce88","id":7281,"mutability":"mutable","name":"nonces","nameLocation":"1303:6:27","nodeType":"VariableDeclaration","scope":7311,"src":"1272:37:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"typeName":{"id":7280,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":7278,"name":"string","nodeType":"ElementaryTypeName","src":"1280:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"nodeType":"Mapping","src":"1272:23:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_string_memory_ptr_$_t_bool_$","typeString":"mapping(string => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":7279,"name":"bool","nodeType":"ElementaryTypeName","src":"1290:4:27","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"documentation":{"id":7282,"nodeType":"StructuredDocumentation","src":"1318:39:27","text":"@notice The version of the contract"},"functionSelector":"54fd4d50","id":7285,"mutability":"mutable","name":"version","nameLocation":"1377:7:27","nodeType":"VariableDeclaration","scope":7311,"src":"1363:31:27","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":7283,"name":"string","nodeType":"ElementaryTypeName","src":"1363:6:27","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":{"hexValue":"322e302e30","id":7284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1387:7:27","typeDescriptions":{"typeIdentifier":"t_stringliteral_b4bcb154e38601c389396fa918314da42d4626f13ef6d0ceb07e5f5d26b2fbc3","typeString":"literal_string \"2.0.0\""},"value":"2.0.0"},"visibility":"public"},{"body":{"id":7299,"nodeType":"Block","src":"1617:45:27","statements":[{"expression":{"id":7297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":7293,"name":"highScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7276,"src":"1628:9:27","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":7295,"indexExpression":{"id":7294,"name":"player","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7288,"src":"1638:6:27","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1628:17:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":7296,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7290,"src":"1649:5:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1628:26:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":7298,"nodeType":"ExpressionStatement","src":"1628:26:27"}]},"documentation":{"id":7286,"nodeType":"StructuredDocumentation","src":"1403:125:27","text":"@notice Sets the high score for a player\n @param player The player address\n @param score The score to set"},"functionSelector":"d119db4c","id":7300,"implemented":true,"kind":"function","modifiers":[],"name":"addScore","nameLocation":"1543:8:27","nodeType":"FunctionDefinition","parameters":{"id":7291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7288,"mutability":"mutable","name":"player","nameLocation":"1570:6:27","nodeType":"VariableDeclaration","scope":7300,"src":"1562:14:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7287,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":7290,"mutability":"mutable","name":"score","nameLocation":"1595:5:27","nodeType":"VariableDeclaration","scope":7300,"src":"1587:13:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":7289,"name":"uint256","nodeType":"ElementaryTypeName","src":"1587:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1551:56:27"},"returnParameters":{"id":7292,"nodeType":"ParameterList","parameters":[],"src":"1617:0:27"},"scope":7311,"src":"1534:128:27","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[721],"body":{"id":7309,"nodeType":"Block","src":"1900:2:27","statements":[]},"documentation":{"id":7301,"nodeType":"StructuredDocumentation","src":"1670:126:27","text":"@dev Upgrades the contract to a new implementation\n @param newImplementation The address of the new implementation"},"id":7310,"implemented":true,"kind":"function","modifiers":[{"id":7307,"kind":"modifierInvocation","modifierName":{"id":7306,"name":"onlyOwner","nameLocations":["1890:9:27"],"nodeType":"IdentifierPath","referencedDeclaration":226,"src":"1890:9:27"},"nodeType":"ModifierInvocation","src":"1890:9:27"}],"name":"_authorizeUpgrade","nameLocation":"1811:17:27","nodeType":"FunctionDefinition","overrides":{"id":7305,"nodeType":"OverrideSpecifier","overrides":[],"src":"1881:8:27"},"parameters":{"id":7304,"nodeType":"ParameterList","parameters":[{"constant":false,"id":7303,"mutability":"mutable","name":"newImplementation","nameLocation":"1847:17:27","nodeType":"VariableDeclaration","scope":7310,"src":"1839:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7302,"name":"address","nodeType":"ElementaryTypeName","src":"1839:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1828:43:27"},"returnParameters":{"id":7308,"nodeType":"ParameterList","parameters":[],"src":"1900:0:27"},"scope":7311,"src":"1802:100:27","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":7312,"src":"835:1070:27","usedErrors":[167,172,348,351,612,617,1271,1284,1601,1863],"usedEvents":[31,178,356,1165,1183]}],"src":"40:1867:27"}}},"contracts":{"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol":{"Ownable2StepUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.fd3a7203.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This extension of the {Ownable} contract includes a two-step mechanism to transfer ownership, where the new owner must call {acceptOwnership} in order to replace the old one. This can help prevent common mistakes, such as transfers of ownership to incorrect accounts, or to contracts that are unable to interact with the permission system. The initial owner is specified at deployment time in the constructor for `Ownable`. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":\"Ownable2StepUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol\":{\"keccak256\":\"0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23\",\"dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4\"]},\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","evm":{"methodIdentifiers":{"acceptOwnership()":"79ba5097","owner()":"8da5cb5b","pendingOwner()":"e30c3978","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"factoryDependencies":{},"missingLibraries":[]}},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"OwnableUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.fd3a7203.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","evm":{"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"factoryDependencies":{},"missingLibraries":[]}},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"Initializable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.fd3a7203.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}","evm":{},"factoryDependencies":{},"missingLibraries":[]}},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"UUPSUpgradeable":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.fd3a7203.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e\",\"dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr\"]},\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c\",\"dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]}},\"version\":1}","evm":{"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","proxiableUUID()":"52d1902d","upgradeToAndCall(address,bytes)":"4f1ef286"}},"factoryDependencies":{},"missingLibraries":[]}},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"ContextUpgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"}],"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.fd3a7203.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}","evm":{},"factoryDependencies":{},"missingLibraries":[]}},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"EIP712Upgradeable":{"abi":[{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.fd3a7203.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":\"EIP712Upgradeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol\":{\"keccak256\":\"0x7a618cd9a1eea21201ec2ed8484080ca6225215e8883723bef34b9dcf22aa3b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a73451277e35206f1f8b9f20b2cd41732081bd23523f5a2c64e1e67694c33\",\"dweb:/ipfs/QmdPVK7KACRpoavNUoixGsi8jBWeZUJfNYCzZbHGSGz5yu\"]},\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","evm":{"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"factoryDependencies":{},"missingLibraries":[]}},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"IERC1967":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"previousAdmin","type":"address"},{"indexed":false,"internalType":"address","name":"newAdmin","type":"address"}],"name":"AdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"beacon","type":"address"}],"name":"BeaconUpgraded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"}],"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.fd3a7203.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"ERC-1967: Proxy Storage Slots. This interface contains the events defined in the ERC.\",\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":\"IERC1967\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1967.sol\":{\"keccak256\":\"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d\",\"dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7\"]}},\"version\":1}","evm":{},"factoryDependencies":{},"missingLibraries":[]}},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"IERC5267":{"abi":[{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.fd3a7203.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"eip712Domain()\":{\"details\":\"returns the fields and values that describe the domain separator used by this contract for EIP-712 signature.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":\"IERC5267\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]}},\"version\":1}","evm":{"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"factoryDependencies":{},"missingLibraries":[]}},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"IERC1822Proxiable":{"abi":[{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.fd3a7203.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC-1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196\",\"dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA\"]}},\"version\":1}","evm":{"methodIdentifiers":{"proxiableUUID()":"52d1902d"}},"factoryDependencies":{},"missingLibraries":[]}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"ERC1967Proxy":{"abi":[{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_version":"0.8.27","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.27+commit.fd3a7203.mod"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"implementation","type":"address"},{"internalType":"bytes","name":"_data","type":"bytes"}],"stateMutability":"payable","type":"constructor"},{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"stateMutability":"payable","type":"fallback"}],"devdoc":{"details":"This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an implementation address that can be changed. This address is stored in storage in the location specified by https://eips.ethereum.org/EIPS/eip-1967[ERC-1967], so that it doesn't conflict with the storage layout of the implementation behind the proxy.","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}]},"events":{"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"constructor":{"details":"Initializes the upgradeable proxy with an initial implementation specified by `implementation`. If `_data` is nonempty, it's used as data in a delegate call to `implementation`. This will typically be an encoded function call, and allows initializing the storage of the proxy like a Solidity constructor. Requirements: - If `data` is empty, `msg.value` must be zero."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":"ERC1967Proxy"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/interfaces/IERC1967.sol":{"keccak256":"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486","license":"MIT","urls":["bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d","dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"]},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol":{"keccak256":"0x0a8a5b994d4c4da9f61d128945cc8c9e60dcbc72bf532f72ae42a48ea90eed9a","license":"MIT","urls":["bzz-raw://e63ae15b6b1079b9d3c73913424d4278139f9e9c9658316675b9c48d5883a50d","dweb:/ipfs/QmWLxBYfp8j1YjNMabWgv75ELTaK2eEYEEGx7qsJbxVZZq"]},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"keccak256":"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06","license":"MIT","urls":["bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c","dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR"]},"@openzeppelin/contracts/proxy/Proxy.sol":{"keccak256":"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd","license":"MIT","urls":["bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac","dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e"]},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c","license":"MIT","urls":["bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa","dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"]},"@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5","license":"MIT","urls":["bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23","dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"]},"@openzeppelin/contracts/utils/Errors.sol":{"keccak256":"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123","license":"MIT","urls":["bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf","dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"]},"@openzeppelin/contracts/utils/StorageSlot.sol":{"keccak256":"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97","license":"MIT","urls":["bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b","dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"]}},"version":1},"zk_version":"1.5.8"},"eravm":{"bytecode":"000400000000000200000060031002700000001f0530018f000000550430019700000056033001970000000100200190000000440000c13d0000008002000039000000400020043f0000005d02000041000000000202041a000000000004004b000000130000613d000000000601034f0000000007000019000000006806043c0000000007870436000000000047004b0000000f0000c13d0000005802200197000000000005004b000000210000613d000000000141034f0000000305500210000000000604043300000000065601cf000000000656022f000000000101043b0000010005500089000000000151022f00000000015101cf000000000161019f000000000014043500000060013002100000000003000414000000560030009c0000005603008041000000c003300210000000000113019f014f014a0000040f00000060051002700000001f0450018f0000005503500198000000320000613d000000000601034f0000000007000019000000006806043c0000000007870436000000000037004b0000002e0000c13d0000005605500197000000000004004b000000400000613d000000000131034f0000000304400210000000000603043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000013043500000060015002100000000100200190000000640000613d000001500001042e0000001f0230003900000057022001970000008002200039000000400020043f0000008002400039000000000004004b000000510000613d0000008006000039000000000701034f000000007807043c0000000006860436000000000026004b0000004d0000c13d000000000005004b0000005e0000613d000000000141034f0000000304500210000000000502043300000000054501cf000000000545022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000151019f0000000000120435000000400030008c000000630000413d000000800600043d000000580060009c000000650000a13d00000000010000190000015100010430000000a00200043d000000590020009c000000630000213d0000001f01200039000000000031004b00000000040000190000005a040080410000005a01100197000000000001004b00000000050000190000005a050040410000005a0010009c000000000504c019000000000005004b000000630000c13d00000080012000390000000001010433000000590010009c0000007e0000a13d0000006901000041000000000010043f0000004101000039000000040010043f000000650100004100000151000104300000001f041000390000006a044001970000003f044000390000006a04400197000000400700043d0000000004470019000000000074004b00000000050000390000000105004039000000590040009c000000780000213d0000000100500190000000780000c13d0000008003300039000000400040043f0000000008170436000000a0022000390000000004210019000000000034004b000000630000213d000000000001004b0000009c0000613d000000000300001900000000043800190000000005230019000000000505043300000000005404350000002003300039000000000013004b000000950000413d000200000008001d000300000007001d0000000001710019000000200110003900000000000104350000005b01000041000000000010044300000004006004430000000001000414000000560010009c0000005601008041000000c0011002100000005c011001c70000800202000039000400000006001d014f01450000040f0000000100200190000001040000613d00000004060000290000005805600197000000000101043b000000000001004b000000b80000c13d0000006801000041000000000010043f000000040050043f000000650100004100000151000104300000005d01000041000000000201041a0000005e02200197000000000252019f000000000021041b0000000001000414000000560010009c0000005601008041000000c0011002100000005f011001c70000800d0200003900000002030000390000006004000041000100000005001d014f01400000040f0000000403000029000000010020019000000003010000290000000202000029000000630000613d0000000001010433000000000001004b000000d60000c13d0000000001000416000000000001004b000001050000613d0000006601000041000000000010043f00000063010000410000015100010430000000560010009c00000056010080410000006001100210000000560020009c00000056020080410000004002200210000000000121019f0000000002000414000000560020009c0000005602008041000000c002200210000000000112019f0000000002030019014f014a0000040f000000600310027000000056053001980000010a0000c13d0000006003000039000000800400003900000000010304330000000100200190000001310000613d000000000001004b000001050000c13d0000005b010000410000000000100443000000040100002900000004001004430000000001000414000000560010009c0000005601008041000000c0011002100000005c011001c70000800202000039014f01450000040f0000000100200190000001040000613d000000000101043b000000000001004b000001050000c13d0000006401000041000000000010043f0000000101000029000000040010043f00000065010000410000015100010430000000000001042f0000002001000039000001000010044300000120000004430000006701000041000001500001042e0000001f0350003900000057033001970000003f033000390000006104300197000000400300043d0000000004430019000000000034004b00000000060000390000000106004039000000590040009c000000780000213d0000000100600190000000780000c13d000000400040043f0000001f0650018f000000000453043600000055075001980000000005740019000001230000613d000000000801034f0000000009040019000000008a08043c0000000009a90436000000000059004b0000011f0000c13d000000000006004b000000e90000613d000000000171034f0000000306600210000000000705043300000000076701cf000000000767022f000000000101043b0000010006600089000000000161022f00000000016101cf000000000171019f0000000000150435000000e90000013d000000000001004b000001370000c13d0000006201000041000000000010043f00000063010000410000015100010430000000560040009c00000056040080410000004002400210000000560010009c00000056010080410000006001100210000000000121019f0000015100010430000000000001042f00000143002104210000000102000039000000000001042d0000000002000019000000000001042d00000148002104230000000102000039000000000001042d0000000002000019000000000001042d0000014d002104250000000102000039000000000001042d0000000002000019000000000001042d0000014f00000432000001500001042e00000151000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffe000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe0000000000000000000000000ffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000ffffffffffffffff80000000000000000000000000000000000000000000000000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830200000200000000000000000000000000000024000000000000000000000000360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcffffffffffffffffffffffff00000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b00000000000000000000000000000000000000000000000000000003ffffffe0d6bda2750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000009996b315000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000b398979f0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000004c9c8ce3000000000000000000000000000000000000000000000000000000004e487b7100000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0000000000000000000000000000000000000000000000000000000000000000099e1d16e4d45b79cd5b382228217d25dfba0db24f05470159d28d941c106ebfd"},"evm":{"bytecode":{"object":"000400000000000200000060031002700000001f0530018f000000550430019700000056033001970000000100200190000000440000c13d0000008002000039000000400020043f0000005d02000041000000000202041a000000000004004b000000130000613d000000000601034f0000000007000019000000006806043c0000000007870436000000000047004b0000000f0000c13d0000005802200197000000000005004b000000210000613d000000000141034f0000000305500210000000000604043300000000065601cf000000000656022f000000000101043b0000010005500089000000000151022f00000000015101cf000000000161019f000000000014043500000060013002100000000003000414000000560030009c0000005603008041000000c003300210000000000113019f014f014a0000040f00000060051002700000001f0450018f0000005503500198000000320000613d000000000601034f0000000007000019000000006806043c0000000007870436000000000037004b0000002e0000c13d0000005605500197000000000004004b000000400000613d000000000131034f0000000304400210000000000603043300000000064601cf000000000646022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000161019f000000000013043500000060015002100000000100200190000000640000613d000001500001042e0000001f0230003900000057022001970000008002200039000000400020043f0000008002400039000000000004004b000000510000613d0000008006000039000000000701034f000000007807043c0000000006860436000000000026004b0000004d0000c13d000000000005004b0000005e0000613d000000000141034f0000000304500210000000000502043300000000054501cf000000000545022f000000000101043b0000010004400089000000000141022f00000000014101cf000000000151019f0000000000120435000000400030008c000000630000413d000000800600043d000000580060009c000000650000a13d00000000010000190000015100010430000000a00200043d000000590020009c000000630000213d0000001f01200039000000000031004b00000000040000190000005a040080410000005a01100197000000000001004b00000000050000190000005a050040410000005a0010009c000000000504c019000000000005004b000000630000c13d00000080012000390000000001010433000000590010009c0000007e0000a13d0000006901000041000000000010043f0000004101000039000000040010043f000000650100004100000151000104300000001f041000390000006a044001970000003f044000390000006a04400197000000400700043d0000000004470019000000000074004b00000000050000390000000105004039000000590040009c000000780000213d0000000100500190000000780000c13d0000008003300039000000400040043f0000000008170436000000a0022000390000000004210019000000000034004b000000630000213d000000000001004b0000009c0000613d000000000300001900000000043800190000000005230019000000000505043300000000005404350000002003300039000000000013004b000000950000413d000200000008001d000300000007001d0000000001710019000000200110003900000000000104350000005b01000041000000000010044300000004006004430000000001000414000000560010009c0000005601008041000000c0011002100000005c011001c70000800202000039000400000006001d014f01450000040f0000000100200190000001040000613d00000004060000290000005805600197000000000101043b000000000001004b000000b80000c13d0000006801000041000000000010043f000000040050043f000000650100004100000151000104300000005d01000041000000000201041a0000005e02200197000000000252019f000000000021041b0000000001000414000000560010009c0000005601008041000000c0011002100000005f011001c70000800d0200003900000002030000390000006004000041000100000005001d014f01400000040f0000000403000029000000010020019000000003010000290000000202000029000000630000613d0000000001010433000000000001004b000000d60000c13d0000000001000416000000000001004b000001050000613d0000006601000041000000000010043f00000063010000410000015100010430000000560010009c00000056010080410000006001100210000000560020009c00000056020080410000004002200210000000000121019f0000000002000414000000560020009c0000005602008041000000c002200210000000000112019f0000000002030019014f014a0000040f000000600310027000000056053001980000010a0000c13d0000006003000039000000800400003900000000010304330000000100200190000001310000613d000000000001004b000001050000c13d0000005b010000410000000000100443000000040100002900000004001004430000000001000414000000560010009c0000005601008041000000c0011002100000005c011001c70000800202000039014f01450000040f0000000100200190000001040000613d000000000101043b000000000001004b000001050000c13d0000006401000041000000000010043f0000000101000029000000040010043f00000065010000410000015100010430000000000001042f0000002001000039000001000010044300000120000004430000006701000041000001500001042e0000001f0350003900000057033001970000003f033000390000006104300197000000400300043d0000000004430019000000000034004b00000000060000390000000106004039000000590040009c000000780000213d0000000100600190000000780000c13d000000400040043f0000001f0650018f000000000453043600000055075001980000000005740019000001230000613d000000000801034f0000000009040019000000008a08043c0000000009a90436000000000059004b0000011f0000c13d000000000006004b000000e90000613d000000000171034f0000000306600210000000000705043300000000076701cf000000000767022f000000000101043b0000010006600089000000000161022f00000000016101cf000000000171019f0000000000150435000000e90000013d000000000001004b000001370000c13d0000006201000041000000000010043f00000063010000410000015100010430000000560040009c00000056040080410000004002400210000000560010009c00000056010080410000006001100210000000000121019f0000015100010430000000000001042f00000143002104210000000102000039000000000001042d0000000002000019000000000001042d00000148002104230000000102000039000000000001042d0000000002000019000000000001042d0000014d002104250000000102000039000000000001042d0000000002000019000000000001042d0000014f00000432000001500001042e00000151000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffe000000000000000000000000000000000000000000000000000000000ffffffff00000000000000000000000000000000000000000000000000000001ffffffe0000000000000000000000000ffffffffffffffffffffffffffffffffffffffff000000000000000000000000000000000000000000000000ffffffffffffffff80000000000000000000000000000000000000000000000000000000000000001806aa1896bbf26568e884a7374b41e002500962caba6a15023a8d90e8508b830200000200000000000000000000000000000024000000000000000000000000360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcffffffffffffffffffffffff00000000000000000000000000000000000000000200000000000000000000000000000000000000000000000000000000000000bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b00000000000000000000000000000000000000000000000000000003ffffffe0d6bda2750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000040000000000000000000000009996b315000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000024000000000000000000000000b398979f0000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000004c9c8ce3000000000000000000000000000000000000000000000000000000004e487b7100000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0000000000000000000000000000000000000000000000000000000000000000099e1d16e4d45b79cd5b382228217d25dfba0db24f05470159d28d941c106ebfd"}},"hash":"0100006ded3e8328ff9180f94e1bb5ad7159419a27492d6bb626ad3cc2d10664","factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"ERC1967Utils":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_version":"0.8.27","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.27+commit.fd3a7203.mod"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"admin","type":"address"}],"name":"ERC1967InvalidAdmin","type":"error"},{"inputs":[{"internalType":"address","name":"beacon","type":"address"}],"name":"ERC1967InvalidBeacon","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"}],"devdoc":{"details":"This library provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[ERC-1967] slots.","errors":{"ERC1967InvalidAdmin(address)":[{"details":"The `admin` of the proxy is invalid."}],"ERC1967InvalidBeacon(address)":[{"details":"The `beacon` of the proxy is invalid."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}]},"kind":"dev","methods":{},"stateVariables":{"ADMIN_SLOT":{"details":"Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."},"BEACON_SLOT":{"details":"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."},"IMPLEMENTATION_SLOT":{"details":"Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":"ERC1967Utils"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/interfaces/IERC1967.sol":{"keccak256":"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486","license":"MIT","urls":["bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d","dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"]},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"keccak256":"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06","license":"MIT","urls":["bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c","dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR"]},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c","license":"MIT","urls":["bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa","dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"]},"@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5","license":"MIT","urls":["bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23","dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"]},"@openzeppelin/contracts/utils/Errors.sol":{"keccak256":"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123","license":"MIT","urls":["bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf","dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"]},"@openzeppelin/contracts/utils/StorageSlot.sol":{"keccak256":"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97","license":"MIT","urls":["bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b","dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"]}},"version":1},"zk_version":"1.5.8"},"eravm":{"bytecode":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000006b1babf9c4e830b22fdcf7d18dcb73ddf8b145748a91a8510eaa1e2921a08a15"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000006b1babf9c4e830b22fdcf7d18dcb73ddf8b145748a91a8510eaa1e2921a08a15"}},"hash":"010000079ad08b212fb449ea78cd50a41a5e1437879b10575da8e01311624b40","factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"@openzeppelin/contracts/proxy/Proxy.sol":{"Proxy":{"abi":[{"stateMutability":"payable","type":"fallback"}],"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.fd3a7203.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0xc3f2ec76a3de8ed7a7007c46166f5550c72c7709e3fc7e8bb3111a7191cdedbd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e73efb4c2ca655882dc237c6b4f234a9bd36d97159d8fcaa837eb01171f726ac\",\"dweb:/ipfs/QmTNnnv7Gu5fs5G1ZMh7Fexp8N4XUs3XrNAngjcxgiss3e\"]}},\"version\":1}","evm":{},"factoryDependencies":{},"missingLibraries":[]}},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"IBeacon":{"abi":[{"inputs":[],"name":"implementation","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.fd3a7203.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}","evm":{"methodIdentifiers":{"implementation()":"5c60da1b"}},"factoryDependencies":{},"missingLibraries":[]}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_version":"0.8.27","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.27+commit.fd3a7203.mod"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"}],"devdoc":{"details":"Collection of functions related to the address type","errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}]},"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/utils/Address.sol":"Address"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5","license":"MIT","urls":["bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23","dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"]},"@openzeppelin/contracts/utils/Errors.sol":{"keccak256":"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123","license":"MIT","urls":["bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf","dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"]}},"version":1},"zk_version":"1.5.8"},"eravm":{"bytecode":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000e758ab9033cca8cafb73652703fa60d9437ec649a0aa8468edf637d32c3b05ec"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000e758ab9033cca8cafb73652703fa60d9437ec649a0aa8468edf637d32c3b05ec"}},"hash":"010000075530485f47869a31153d549e3995d0cd590045f7b790618d28cfe2e4","factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"@openzeppelin/contracts/utils/Errors.sol":{"Errors":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_version":"0.8.27","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.27+commit.fd3a7203.mod"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"FailedDeployment","type":"error"},{"inputs":[{"internalType":"uint256","name":"balance","type":"uint256"},{"internalType":"uint256","name":"needed","type":"uint256"}],"name":"InsufficientBalance","type":"error"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"MissingPrecompile","type":"error"}],"devdoc":{"details":"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._","errors":{"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"FailedDeployment()":[{"details":"The deployment failed."}],"InsufficientBalance(uint256,uint256)":[{"details":"The ETH balance of the account is not enough to perform the operation."}],"MissingPrecompile(address)":[{"details":"A necessary precompile is missing."}]},"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/utils/Errors.sol":"Errors"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/utils/Errors.sol":{"keccak256":"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123","license":"MIT","urls":["bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf","dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"]}},"version":1},"zk_version":"1.5.8"},"eravm":{"bytecode":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000007a546a8e8001426fd4c2437d2140674e3a5c6e7de3c8cbaa117868eadc64f3ae"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000007a546a8e8001426fd4c2437d2140674e3a5c6e7de3c8cbaa117868eadc64f3ae"}},"hash":"010000075f5206c6b26199c47e8b870da3335531beb570bb8d48e1ce1bb33783","factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"@openzeppelin/contracts/utils/Panic.sol":{"Panic":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_version":"0.8.27","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.27+commit.fd3a7203.mod"},"language":"Solidity","output":{"abi":[],"devdoc":{"details":"Helper library for emitting standardized panic codes. ```solidity contract Example {      using Panic for uint256;      // Use any of the declared internal constants      function foo() { Panic.GENERIC.panic(); }      // Alternatively      function foo() { Panic.panic(Panic.GENERIC); } } ``` Follows the list from https://github.com/ethereum/solidity/blob/v0.8.24/libsolutil/ErrorCodes.h[libsolutil]. _Available since v5.1._","kind":"dev","methods":{},"stateVariables":{"ARRAY_OUT_OF_BOUNDS":{"details":"array out of bounds access"},"ASSERT":{"details":"used by the assert() builtin"},"DIVISION_BY_ZERO":{"details":"division or modulo by zero"},"EMPTY_ARRAY_POP":{"details":"empty array pop"},"ENUM_CONVERSION_ERROR":{"details":"enum conversion error"},"GENERIC":{"details":"generic / unspecified error"},"INVALID_INTERNAL_FUNCTION":{"details":"calling invalid internal function"},"RESOURCE_ERROR":{"details":"resource error (too large allocation or too large array)"},"STORAGE_ENCODING_ERROR":{"details":"invalid encoding in storage"},"UNDER_OVERFLOW":{"details":"arithmetic underflow or overflow"}},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/utils/Panic.sol":"Panic"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","license":"MIT","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"]}},"version":1},"zk_version":"1.5.8"},"eravm":{"bytecode":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000007a228007f6966c475b6bc3a24d2177c197b7db99a08eebd4f86fc1705c390ede"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000007a228007f6966c475b6bc3a24d2177c197b7db99a08eebd4f86fc1705c390ede"}},"hash":"0100000702c946bb0a5a04ad43cb213c407b98a4cfb6ad1eed9c37e36c72b501","factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"@openzeppelin/contracts/utils/ShortStrings.sol":{"ShortStrings":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_version":"0.8.27","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.27+commit.fd3a7203.mod"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"}],"devdoc":{"details":"This library provides functions to convert short memory strings into a `ShortString` type that can be used as an immutable variable. Strings of arbitrary length can be optimized using this library if they are short enough (up to 31 bytes) by packing them with their length (1 byte) in a single EVM word (32 bytes). Additionally, a fallback mechanism can be used for every other case. Usage example: ```solidity contract Named {     using ShortStrings for *;     ShortString private immutable _name;     string private _nameFallback;     constructor(string memory contractName) {         _name = contractName.toShortStringWithFallback(_nameFallback);     }     function name() external view returns (string memory) {         return _name.toStringWithFallback(_nameFallback);     } } ```","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/utils/ShortStrings.sol":"ShortStrings"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/utils/ShortStrings.sol":{"keccak256":"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549","license":"MIT","urls":["bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a","dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK"]},"@openzeppelin/contracts/utils/StorageSlot.sol":{"keccak256":"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97","license":"MIT","urls":["bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b","dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"]}},"version":1},"zk_version":"1.5.8"},"eravm":{"bytecode":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000003deeeb26f55593b60727794381a9ab0dd6e8751c6c1568a5ad22bb6df5435c6c"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000003deeeb26f55593b60727794381a9ab0dd6e8751c6c1568a5ad22bb6df5435c6c"}},"hash":"0100000734ea85539cec4c07076f2cf858f9ddbc761e3f701cdd74692932c374","factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"@openzeppelin/contracts/utils/StorageSlot.sol":{"StorageSlot":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_version":"0.8.27","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.27+commit.fd3a7203.mod"},"language":"Solidity","output":{"abi":[],"devdoc":{"details":"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC-1967 implementation slot: ```solidity contract ERC1967 {     // Define the slot. Alternatively, use the SlotDerivation library to derive the slot.     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ``` TIP: Consider using this library along with {SlotDerivation}.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/utils/StorageSlot.sol":"StorageSlot"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/utils/StorageSlot.sol":{"keccak256":"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97","license":"MIT","urls":["bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b","dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"]}},"version":1},"zk_version":"1.5.8"},"eravm":{"bytecode":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000005432aa197550ac8380cdca533f9082d94182864e1baf74418b46d6304ce6e23f"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000005432aa197550ac8380cdca533f9082d94182864e1baf74418b46d6304ce6e23f"}},"hash":"0100000719edaa24f1f087c480b2ac336b77f4d852bd170d5aa65ccfc3de815f","factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_version":"0.8.27","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.27+commit.fd3a7203.mod"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"length","type":"uint256"}],"name":"StringsInsufficientHexLength","type":"error"}],"devdoc":{"details":"String operations.","errors":{"StringsInsufficientHexLength(uint256,uint256)":[{"details":"The `value` string doesn't fit in the specified `length`."}]},"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/utils/Strings.sol":"Strings"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","license":"MIT","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"]},"@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed","license":"MIT","urls":["bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0","dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49"]},"@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea","license":"MIT","urls":["bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d","dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"]},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","license":"MIT","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"]},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","license":"MIT","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"]}},"version":1},"zk_version":"1.5.8"},"eravm":{"bytecode":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000038a434734176aabb14639eca019b9845a75d2b382f69ee57cda97170ca3b36a5"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e0000001000010430000000000000000000000000000000000000000000000000000000020000000000000000000000000000004000000100000000000000000038a434734176aabb14639eca019b9845a75d2b382f69ee57cda97170ca3b36a5"}},"hash":"01000007adcfad26677236606baa5e8641faf3ef22b2898b6a6776cf9587b901","factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_version":"0.8.27","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.27+commit.fd3a7203.mod"},"language":"Solidity","output":{"abi":[{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"}],"devdoc":{"details":"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.","errors":{"ECDSAInvalidSignature()":[{"details":"The signature derives the `address(0)`."}],"ECDSAInvalidSignatureLength(uint256)":[{"details":"The signature has an invalid length."}],"ECDSAInvalidSignatureS(bytes32)":[{"details":"The signature has an S value that is in the upper half order."}]},"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":"ECDSA"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84","license":"MIT","urls":["bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9","dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"]}},"version":1},"zk_version":"1.5.8"},"eravm":{"bytecode":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000b4e3c8ae9eb04cf21467d00bb1bb59dfaf8487363ed910cd334f2bebd4f84d5a"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000b4e3c8ae9eb04cf21467d00bb1bb59dfaf8487363ed910cd334f2bebd4f84d5a"}},"hash":"01000007e877d4a5158faff0798b6934a574cf1c081ccc03f7f08655393caddc","factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"EIP712":{"abi":[{"inputs":[],"name":"InvalidShortString","type":"error"},{"inputs":[{"internalType":"string","name":"str","type":"string"}],"name":"StringTooLong","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"}],"metadata":"{\"compiler\":{\"version\":\"0.8.27+commit.fd3a7203.mod\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidShortString\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"str\",\"type\":\"string\"}],\"name\":\"StringTooLong\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"EIP712DomainChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"eip712Domain\",\"outputs\":[{\"internalType\":\"bytes1\",\"name\":\"fields\",\"type\":\"bytes1\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"version\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"verifyingContract\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"uint256[]\",\"name\":\"extensions\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\",\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP-712] is a standard for hashing and signing of typed structured data. The encoding scheme specified in the EIP requires a domain separator and a hash of the typed structured data, whose encoding is very generic and therefore its implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in order to produce the hash of their typed data using a combination of `abi.encode` and `keccak256`. This contract implements the EIP-712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. NOTE: In the upgradeable version of this contract, the cached values will correspond to the address, and the domain separator of the implementation contract. This will cause the {_domainSeparatorV4} function to always rebuild the separator from the immutable values, which is cheaper than accessing a cached version in cold storage.\",\"events\":{\"EIP712DomainChanged()\":{\"details\":\"MAY be emitted to signal that the domain could have changed.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP-712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"},\"eip712Domain()\":{\"details\":\"See {IERC-5267}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":\"EIP712\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC5267.sol\":{\"keccak256\":\"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a\",\"dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP\"]},\"@openzeppelin/contracts/utils/Panic.sol\":{\"keccak256\":\"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a\",\"dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG\"]},\"@openzeppelin/contracts/utils/ShortStrings.sol\":{\"keccak256\":\"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a\",\"dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b\",\"dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0\",\"dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49\"]},\"@openzeppelin/contracts/utils/cryptography/EIP712.sol\":{\"keccak256\":\"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c\",\"dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p\"]},\"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol\":{\"keccak256\":\"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e\",\"dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d\",\"dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8\",\"dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03\",\"dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ\"]}},\"version\":1}","evm":{"methodIdentifiers":{"eip712Domain()":"84b0196e"}},"factoryDependencies":{},"missingLibraries":[]}},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"MessageHashUtils":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_version":"0.8.27","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.27+commit.fd3a7203.mod"},"language":"Solidity","output":{"abi":[],"devdoc":{"details":"Signature message hash utilities for producing digests to be consumed by {ECDSA} recovery or signing. The library provides methods for generating a hash of a message that conforms to the https://eips.ethereum.org/EIPS/eip-191[ERC-191] and https://eips.ethereum.org/EIPS/eip-712[EIP 712] specifications.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":"MessageHashUtils"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","license":"MIT","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"]},"@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed","license":"MIT","urls":["bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0","dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49"]},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575","license":"MIT","urls":["bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e","dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs"]},"@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea","license":"MIT","urls":["bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d","dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"]},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","license":"MIT","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"]},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","license":"MIT","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"]}},"version":1},"zk_version":"1.5.8"},"eravm":{"bytecode":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000007517153f946ab87c943a7a0ef4df6b075dc4af143c0070d213160767dfd75b84"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000007517153f946ab87c943a7a0ef4df6b075dc4af143c0070d213160767dfd75b84"}},"hash":"01000007636d93206a5be6e55437f0f6b2a68e4baf104c491498da832668e32f","factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_version":"0.8.27","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.27+commit.fd3a7203.mod"},"language":"Solidity","output":{"abi":[],"devdoc":{"details":"Standard math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/utils/math/Math.sol":"Math"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","license":"MIT","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"]},"@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea","license":"MIT","urls":["bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d","dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"]},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","license":"MIT","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"]}},"version":1},"zk_version":"1.5.8"},"eravm":{"bytecode":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000007dbeec28ff475408bfb8d713be3566f14277f7e453dce6708e2b228f78dacc1e"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000007dbeec28ff475408bfb8d713be3566f14277f7e453dce6708e2b228f78dacc1e"}},"hash":"01000007bcc6cccc4daf31389f184b3c11ba14b19f17814cb7ac43da9523bb83","factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_version":"0.8.27","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.27+commit.fd3a7203.mod"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntDowncast","type":"error"},{"inputs":[{"internalType":"int256","name":"value","type":"int256"}],"name":"SafeCastOverflowedIntToUint","type":"error"},{"inputs":[{"internalType":"uint8","name":"bits","type":"uint8"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintDowncast","type":"error"},{"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"SafeCastOverflowedUintToInt","type":"error"}],"devdoc":{"details":"Wrappers over Solidity's uintXX/intXX/bool casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.","errors":{"SafeCastOverflowedIntDowncast(uint8,int256)":[{"details":"Value doesn't fit in an int of `bits` size."}],"SafeCastOverflowedIntToUint(int256)":[{"details":"An int value doesn't fit in an uint of `bits` size."}],"SafeCastOverflowedUintDowncast(uint8,uint256)":[{"details":"Value doesn't fit in an uint of `bits` size."}],"SafeCastOverflowedUintToInt(uint256)":[{"details":"An uint value doesn't fit in an int of `bits` size."}]},"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/utils/math/SafeCast.sol":"SafeCast"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","license":"MIT","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"]}},"version":1},"zk_version":"1.5.8"},"eravm":{"bytecode":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000e26e76392c00b7d78884cd8245eb18a9dcc329942a1009d2c21519a28e4b83bf"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e00000010000104300000000000000000000000000000000000000000000000000000000200000000000000000000000000000040000001000000000000000000e26e76392c00b7d78884cd8245eb18a9dcc329942a1009d2c21519a28e4b83bf"}},"hash":"01000007c0baae6b120956631629434597825f0c38b2c86a45b954aa1983af61","factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"SignedMath":{"abi":[],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_version":"0.8.27","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.27+commit.fd3a7203.mod"},"language":"Solidity","output":{"abi":[],"devdoc":{"details":"Standard signed math utilities missing in the Solidity language.","kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"compilationTarget":{"@openzeppelin/contracts/utils/math/SignedMath.sol":"SignedMath"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","license":"MIT","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"]},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","license":"MIT","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"]}},"version":1},"zk_version":"1.5.8"},"eravm":{"bytecode":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000003422cc934bce7b43ec2777f276d145a6b68d1cb92ebab15ca1e6de6437fcdc65"},"evm":{"bytecode":{"object":"00000001002001900000000c0000613d0000008001000039000000400010043f0000000001000416000000000001004b0000000c0000c13d00000020010000390000010000100443000001200000044300000005010000410000000f0001042e000000000100001900000010000104300000000e000004320000000f0001042e000000100001043000000000000000000000000000000000000000000000000000000002000000000000000000000000000000400000010000000000000000003422cc934bce7b43ec2777f276d145a6b68d1cb92ebab15ca1e6de6437fcdc65"}},"hash":"01000007f74b655fe2d1f424e9dd7f657b712505c73281bec361df23de1e60fb","factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"contracts/PepenadeCrush.sol":{"PepenadeCrush":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"InvalidSigner","type":"error"},{"inputs":[{"internalType":"string","name":"nonce","type":"string"}],"name":"NonceAlreadyUsed","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"uint256","name":"threshold","type":"uint256"}],"name":"ScoreBelowThreshold","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"backendSigner","type":"address"}],"name":"BackendSignerSet","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"milestoneIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"highScore","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isCrew","type":"bool"}],"name":"MilestoneReached","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"backendSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"crewHighScore","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"crewReachedMilestoneIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"milestoneIndex","type":"uint256"}],"name":"getMilestoneScore","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"string","name":"nonce","type":"string"}],"internalType":"struct PepenadeCrush.ScoreMessage","name":"message","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"getSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"highScore","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_backendSigner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"string","name":"nonce","type":"string"}],"internalType":"struct PepenadeCrush.ScoreMessage","name":"message","type":"tuple"},{"internalType":"bytes32","name":"encodedMessage","type":"bytes32"}],"name":"isMessageEncodingValid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"nonces","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"reachedMilestoneIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_backendSigner","type":"address"}],"name":"setBackendSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"string","name":"nonce","type":"string"}],"internalType":"struct PepenadeCrush.ScoreMessage","name":"message","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"setCrewHighScore","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"string","name":"nonce","type":"string"}],"internalType":"struct PepenadeCrush.ScoreMessage","name":"message","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"setHighScore","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_version":"0.8.27","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.27+commit.fd3a7203.mod"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[],"name":"ECDSAInvalidSignature","type":"error"},{"inputs":[{"internalType":"uint256","name":"length","type":"uint256"}],"name":"ECDSAInvalidSignatureLength","type":"error"},{"inputs":[{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"ECDSAInvalidSignatureS","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"InvalidSigner","type":"error"},{"inputs":[{"internalType":"string","name":"nonce","type":"string"}],"name":"NonceAlreadyUsed","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"uint256","name":"threshold","type":"uint256"}],"name":"ScoreBelowThreshold","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"backendSigner","type":"address"}],"name":"BackendSignerSet","type":"event"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"player","type":"address"},{"indexed":false,"internalType":"uint256","name":"milestoneIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"highScore","type":"uint256"},{"indexed":false,"internalType":"bool","name":"isCrew","type":"bool"}],"name":"MilestoneReached","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"backendSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"crewHighScore","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"crewReachedMilestoneIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"milestoneIndex","type":"uint256"}],"name":"getMilestoneScore","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"string","name":"nonce","type":"string"}],"internalType":"struct PepenadeCrush.ScoreMessage","name":"message","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"getSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"highScore","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_backendSigner","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"string","name":"nonce","type":"string"}],"internalType":"struct PepenadeCrush.ScoreMessage","name":"message","type":"tuple"},{"internalType":"bytes32","name":"encodedMessage","type":"bytes32"}],"name":"isMessageEncodingValid","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"nonces","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"reachedMilestoneIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_backendSigner","type":"address"}],"name":"setBackendSigner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"string","name":"nonce","type":"string"}],"internalType":"struct PepenadeCrush.ScoreMessage","name":"message","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"setCrewHighScore","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"string","name":"nonce","type":"string"}],"internalType":"struct PepenadeCrush.ScoreMessage","name":"message","type":"tuple"},{"internalType":"bytes","name":"signature","type":"bytes"}],"name":"setHighScore","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ECDSAInvalidSignature()":[{"details":"The signature derives the `address(0)`."}],"ECDSAInvalidSignatureLength(uint256)":[{"details":"The signature has an invalid length."}],"ECDSAInvalidSignatureS(bytes32)":[{"details":"The signature has an S value that is in the upper half order."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NonceAlreadyUsed(string)":[{"details":"Custom errors"}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"EIP712DomainChanged()":{"details":"MAY be emitted to signal that the domain could have changed."},"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"eip712Domain()":{"details":"See {IERC-5267}."},"getMilestoneScore(uint256)":{"details":"The milestones are calculated as Fibonacci numbers, starting from 10","params":{"milestoneIndex":"The 1-based index of the milestone. The first milestone to beat has index 1"},"returns":{"_0":"uint256"}},"getSigner((address,uint256,string),bytes)":{"params":{"message":"The message containing the player address, score and nonce","signature":"The signature of the message"}},"initialize(address)":{"params":{"_backendSigner":"The address of the backend wallet"}},"isMessageEncodingValid((address,uint256,string),bytes32)":{"params":{"encodedMessage":"Hashed, ABI encoded message","message":"The message containing the player address, score and nonce"}},"owner()":{"details":"Returns the address of the current owner."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"proxiableUUID()":{"details":"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"setBackendSigner(address)":{"params":{"_backendSigner":"The address of the backend wallet"}},"setHighScore((address,uint256,string),bytes)":{"params":{"message":"The message containing the player address, score and nonce","signature":"The signature of the message signed by the backend wallet"}},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"title":"Fear & Greed: Pepenade Crush","version":1},"userdoc":{"events":{"BackendSignerSet(address)":{"notice":"Event emitted when the backend wallet address is set"},"MilestoneReached(address,uint256,uint256,bool)":{"notice":"Event emitted when player's high score reaches a milestone"}},"kind":"user","methods":{"backendSigner()":{"notice":"The address of the backend wallet that will sign the messages"},"crewHighScore(address)":{"notice":"Mapping of crew address to their high score"},"crewReachedMilestoneIndex(address)":{"notice":"Mapping of crew address to their high score milestones"},"getMilestoneScore(uint256)":{"notice":"Calculates the score for a given milestone"},"getSigner((address,uint256,string),bytes)":{"notice":"Utility function to get the signer of a message"},"highScore(address)":{"notice":"Mapping of player address to their high score"},"initialize(address)":{"notice":"Initializes the contract with the backend wallet address and the deployer as the owner"},"isMessageEncodingValid((address,uint256,string),bytes32)":{"notice":"Utility function to check if the message encoding is valid"},"nonces(string)":{"notice":"Mapping of nonce to a boolean indicating if it was already used"},"reachedMilestoneIndex(address)":{"notice":"Mapping of player address to their high score milestones"},"setBackendSigner(address)":{"notice":"Sets the backend wallet address. Can only be called by the owner"},"setHighScore((address,uint256,string),bytes)":{"notice":"Adds a score to a player's current score"}},"notice":"TODO","version":1}},"settings":{"compilationTarget":{"contracts/PepenadeCrush.sol":"PepenadeCrush"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol":{"keccak256":"0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716","license":"MIT","urls":["bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23","dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4"]},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"keccak256":"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a","license":"MIT","urls":["bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6","dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"]},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"keccak256":"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b","license":"MIT","urls":["bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609","dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"]},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"keccak256":"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27","license":"MIT","urls":["bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e","dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr"]},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"keccak256":"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397","license":"MIT","urls":["bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9","dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"]},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"keccak256":"0x7a618cd9a1eea21201ec2ed8484080ca6225215e8883723bef34b9dcf22aa3b5","license":"MIT","urls":["bzz-raw://287a73451277e35206f1f8b9f20b2cd41732081bd23523f5a2c64e1e67694c33","dweb:/ipfs/QmdPVK7KACRpoavNUoixGsi8jBWeZUJfNYCzZbHGSGz5yu"]},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"keccak256":"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486","license":"MIT","urls":["bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d","dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"]},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"keccak256":"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92","license":"MIT","urls":["bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a","dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"]},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"keccak256":"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d","license":"MIT","urls":["bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196","dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA"]},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"keccak256":"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06","license":"MIT","urls":["bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c","dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR"]},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c","license":"MIT","urls":["bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa","dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"]},"@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5","license":"MIT","urls":["bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23","dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"]},"@openzeppelin/contracts/utils/Errors.sol":{"keccak256":"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123","license":"MIT","urls":["bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf","dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"]},"@openzeppelin/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","license":"MIT","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"]},"@openzeppelin/contracts/utils/ShortStrings.sol":{"keccak256":"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549","license":"MIT","urls":["bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a","dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK"]},"@openzeppelin/contracts/utils/StorageSlot.sol":{"keccak256":"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97","license":"MIT","urls":["bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b","dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"]},"@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed","license":"MIT","urls":["bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0","dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49"]},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84","license":"MIT","urls":["bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9","dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"]},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"keccak256":"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d","license":"MIT","urls":["bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c","dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p"]},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575","license":"MIT","urls":["bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e","dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs"]},"@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea","license":"MIT","urls":["bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d","dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"]},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","license":"MIT","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"]},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","license":"MIT","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"]},"contracts/PepenadeCrush.sol":{"keccak256":"0xcde79f6e832bc0c209c60a321b7f9bdf9bf305b4d5c54c8fb26ada8f2b346343","license":"UNLICENSED","urls":["bzz-raw://95e3cf178ebe63a122a082f11ec9cdd5f12984b6a332d9c29b450a8b26d47be9","dweb:/ipfs/QmX5WDh47QMTR8YQB7BLkHEk7AkK3qJY1sXDnfBMwMv5m8"]}},"version":1},"zk_version":"1.5.8"},"eravm":{"bytecode":""},"evm":{"bytecode":{"object":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","acceptOwnership()":"79ba5097","backendSigner()":"65d65e86","crewHighScore(address)":"24f2ab29","crewReachedMilestoneIndex(address)":"fd140d16","eip712Domain()":"84b0196e","getMilestoneScore(uint256)":"3796e04f","getSigner((address,uint256,string),bytes)":"f70003d5","highScore(address)":"ba5bf0e7","initialize(address)":"c4d66de8","isMessageEncodingValid((address,uint256,string),bytes32)":"0f2929e7","nonces(string)":"b24fce88","owner()":"8da5cb5b","pendingOwner()":"e30c3978","proxiableUUID()":"52d1902d","reachedMilestoneIndex(address)":"0036db13","renounceOwnership()":"715018a6","setBackendSigner(address)":"36f95670","setCrewHighScore((address,uint256,string),bytes)":"369ccde7","setHighScore((address,uint256,string),bytes)":"3ae5bd82","transferOwnership(address)":"f2fde38b","upgradeToAndCall(address,bytes)":"4f1ef286"}},"hash":"010003cfb5100a1ca9514739f18a1dd1f61b371a54b47ec3213a49a747def689","factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}},"contracts/test/PepenadeCrushV2Test.sol":{"PepenadeCrushV2Test":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"score","type":"uint256"}],"name":"addScore","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"backendSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"highScore","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"nonces","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"metadata":{"llvm_options":[],"optimizer_settings":{"is_debug_logging_enabled":false,"is_fallback_to_size_enabled":false,"is_verify_each_enabled":false,"level_back_end":"Aggressive","level_middle_end":"Aggressive","level_middle_end_size":"Zero"},"solc_version":"0.8.27","solc_zkvm_edition":"1.0.1","source_metadata":{"compiler":{"version":"0.8.27+commit.fd3a7203.mod"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"target","type":"address"}],"name":"AddressEmptyCode","type":"error"},{"inputs":[{"internalType":"address","name":"implementation","type":"address"}],"name":"ERC1967InvalidImplementation","type":"error"},{"inputs":[],"name":"ERC1967NonPayable","type":"error"},{"inputs":[],"name":"FailedCall","type":"error"},{"inputs":[],"name":"InvalidInitialization","type":"error"},{"inputs":[],"name":"NotInitializing","type":"error"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"OwnableInvalidOwner","type":"error"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"OwnableUnauthorizedAccount","type":"error"},{"inputs":[],"name":"UUPSUnauthorizedCallContext","type":"error"},{"inputs":[{"internalType":"bytes32","name":"slot","type":"bytes32"}],"name":"UUPSUnsupportedProxiableUUID","type":"error"},{"anonymous":false,"inputs":[],"name":"EIP712DomainChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint64","name":"version","type":"uint64"}],"name":"Initialized","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferStarted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"implementation","type":"address"}],"name":"Upgraded","type":"event"},{"inputs":[],"name":"UPGRADE_INTERFACE_VERSION","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"acceptOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"player","type":"address"},{"internalType":"uint256","name":"score","type":"uint256"}],"name":"addScore","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"backendSigner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"eip712Domain","outputs":[{"internalType":"bytes1","name":"fields","type":"bytes1"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"version","type":"string"},{"internalType":"uint256","name":"chainId","type":"uint256"},{"internalType":"address","name":"verifyingContract","type":"address"},{"internalType":"bytes32","name":"salt","type":"bytes32"},{"internalType":"uint256[]","name":"extensions","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"highScore","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"nonces","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pendingOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"proxiableUUID","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newImplementation","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"upgradeToAndCall","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"version","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"}],"devdoc":{"errors":{"AddressEmptyCode(address)":[{"details":"There's no code at `target` (it is not a contract)."}],"ERC1967InvalidImplementation(address)":[{"details":"The `implementation` of the proxy is invalid."}],"ERC1967NonPayable()":[{"details":"An upgrade function sees `msg.value > 0` that may be lost."}],"FailedCall()":[{"details":"A call to an address target failed. The target may have reverted."}],"InvalidInitialization()":[{"details":"The contract is already initialized."}],"NotInitializing()":[{"details":"The contract is not initializing."}],"OwnableInvalidOwner(address)":[{"details":"The owner is not a valid owner account. (eg. `address(0)`)"}],"OwnableUnauthorizedAccount(address)":[{"details":"The caller account is not authorized to perform an operation."}],"UUPSUnauthorizedCallContext()":[{"details":"The call is from an unauthorized context."}],"UUPSUnsupportedProxiableUUID(bytes32)":[{"details":"The storage `slot` is unsupported as a UUID."}]},"events":{"EIP712DomainChanged()":{"details":"MAY be emitted to signal that the domain could have changed."},"Initialized(uint64)":{"details":"Triggered when the contract has been initialized or reinitialized."},"Upgraded(address)":{"details":"Emitted when the implementation is upgraded."}},"kind":"dev","methods":{"acceptOwnership()":{"details":"The new owner accepts the ownership transfer."},"addScore(address,uint256)":{"params":{"player":"The player address","score":"The score to set"}},"eip712Domain()":{"details":"See {IERC-5267}."},"owner()":{"details":"Returns the address of the current owner."},"pendingOwner()":{"details":"Returns the address of the pending owner."},"proxiableUUID()":{"details":"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."},"upgradeToAndCall(address,bytes)":{"custom:oz-upgrades-unsafe-allow-reachable":"delegatecall","details":"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."}},"title":"HighScore contract for upgrade testing purposes","version":1},"userdoc":{"kind":"user","methods":{"addScore(address,uint256)":{"notice":"Sets the high score for a player"},"backendSigner()":{"notice":"The address of the backend wallet that will sign the messages"},"highScore(address)":{"notice":"Mapping of player address to their high score"},"nonces(string)":{"notice":"Mapping of nonces to check if they were already used"},"version()":{"notice":"The version of the contract"}},"notice":"UUPS upgradable contract, used to store the high score for Pepenade Crush game by utilizing EIP-712 standard","version":1}},"settings":{"compilationTarget":{"contracts/test/PepenadeCrushV2Test.sol":"PepenadeCrushV2Test"},"evmVersion":"paris","libraries":{},"metadata":{"bytecodeHash":"ipfs"},"optimizer":{"enabled":true,"runs":200},"remappings":[]},"sources":{"@openzeppelin/contracts-upgradeable/access/Ownable2StepUpgradeable.sol":{"keccak256":"0xe9570c90b688339474e80090b0cdf0b2c85c25aa28cc6044d489dda9efc2c716","license":"MIT","urls":["bzz-raw://f358f7eab8cc53b784d5ff3f82073124d797638aee71487beca3543414a46a23","dweb:/ipfs/QmWy153MjdHfUbqtCKELubAmMavjBEeRByTDv9MMoUVZN4"]},"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol":{"keccak256":"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a","license":"MIT","urls":["bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6","dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"]},"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol":{"keccak256":"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b","license":"MIT","urls":["bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609","dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"]},"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol":{"keccak256":"0xf72d3b11f41fccbbdcacd121f994daab8267ccfceb1fb4f247e4ba274c169d27","license":"MIT","urls":["bzz-raw://1e46ee40ddc9e2009176ce5d76aa2c046fd68f2ed52d02d77db191365b7c5b2e","dweb:/ipfs/QmZnxgPmCCHosdvbh4J65uTaFYeGtZGzQ1sXRdeh1y68Zr"]},"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol":{"keccak256":"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397","license":"MIT","urls":["bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9","dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"]},"@openzeppelin/contracts-upgradeable/utils/cryptography/EIP712Upgradeable.sol":{"keccak256":"0x7a618cd9a1eea21201ec2ed8484080ca6225215e8883723bef34b9dcf22aa3b5","license":"MIT","urls":["bzz-raw://287a73451277e35206f1f8b9f20b2cd41732081bd23523f5a2c64e1e67694c33","dweb:/ipfs/QmdPVK7KACRpoavNUoixGsi8jBWeZUJfNYCzZbHGSGz5yu"]},"@openzeppelin/contracts/interfaces/IERC1967.sol":{"keccak256":"0xb25a4f11fa80c702bf5cd85adec90e6f6f507f32f4a8e6f5dbc31e8c10029486","license":"MIT","urls":["bzz-raw://6917f8a323e7811f041aecd4d9fd6e92455a6fba38a797ac6f6e208c7912b79d","dweb:/ipfs/QmShuYv55wYHGi4EFkDB8QfF7ZCHoKk2efyz3AWY1ExSq7"]},"@openzeppelin/contracts/interfaces/IERC5267.sol":{"keccak256":"0x92aa1df62dc3d33f1656d63bede0923e0df0b706ad4137c8b10b0a8fe549fd92","license":"MIT","urls":["bzz-raw://c5c0f29195ad64cbe556da8e257dac8f05f78c53f90323c0d2accf8e6922d33a","dweb:/ipfs/QmQ61TED8uaCZwcbh8KkgRSsCav7x7HbcGHwHts3U4DmUP"]},"@openzeppelin/contracts/interfaces/draft-IERC1822.sol":{"keccak256":"0xc42facb5094f2f35f066a7155bda23545e39a3156faef3ddc00185544443ba7d","license":"MIT","urls":["bzz-raw://d3b36282ab029b46bd082619a308a2ea11c309967b9425b7b7a6eb0b0c1c3196","dweb:/ipfs/QmP2YVfDB2FoREax3vJu7QhDnyYRMw52WPrCD4vdT2kuDA"]},"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol":{"keccak256":"0x911c3346ee26afe188f3b9dc267ef62a7ccf940aba1afa963e3922f0ca3d8a06","license":"MIT","urls":["bzz-raw://04539f4419e44a831807d7203375d2bc6a733da256efd02e51290f5d5015218c","dweb:/ipfs/QmPZ97gsAAgaMRPiE2WJfkzRsudQnW5tPAvMgGj1jcTJtR"]},"@openzeppelin/contracts/proxy/beacon/IBeacon.sol":{"keccak256":"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c","license":"MIT","urls":["bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa","dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"]},"@openzeppelin/contracts/utils/Address.sol":{"keccak256":"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5","license":"MIT","urls":["bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23","dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb"]},"@openzeppelin/contracts/utils/Errors.sol":{"keccak256":"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123","license":"MIT","urls":["bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf","dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB"]},"@openzeppelin/contracts/utils/Panic.sol":{"keccak256":"0xf7fe324703a64fc51702311dc51562d5cb1497734f074e4f483bfb6717572d7a","license":"MIT","urls":["bzz-raw://c6a5ff4f9fd8649b7ee20800b7fa387d3465bd77cf20c2d1068cd5c98e1ed57a","dweb:/ipfs/QmVSaVJf9FXFhdYEYeCEfjMVHrxDh5qL4CGkxdMWpQCrqG"]},"@openzeppelin/contracts/utils/ShortStrings.sol":{"keccak256":"0x7d94fa0af099a2172eb01f9c8a8a443cbe7e0e43654841563e4e09968efdb549","license":"MIT","urls":["bzz-raw://65e38fb76b6add407d4557753ae83dd1268e8261195dbe5c19a580d5ba6e4e9a","dweb:/ipfs/QmTkGSJtaQrqjcyWM4AgemeEmKgtDydKPPVRajsUJRQSrK"]},"@openzeppelin/contracts/utils/StorageSlot.sol":{"keccak256":"0xcf74f855663ce2ae00ed8352666b7935f6cddea2932fdf2c3ecd30a9b1cd0e97","license":"MIT","urls":["bzz-raw://9f660b1f351b757dfe01438e59888f31f33ded3afcf5cb5b0d9bf9aa6f320a8b","dweb:/ipfs/QmarDJ5hZEgBtCmmrVzEZWjub9769eD686jmzb2XpSU1cM"]},"@openzeppelin/contracts/utils/Strings.sol":{"keccak256":"0x725209b582291bb83058e3078624b53d15a133f7401c30295e7f3704181d2aed","license":"MIT","urls":["bzz-raw://0564ddb19c6d870e27b789d8f985283d815267ad7224883c2d5243c8bacc7dc0","dweb:/ipfs/QmeC953H4sj88ZRFdJNFdmpf7J9SksP1wK4jyMHLo66z49"]},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"keccak256":"0x69f54c02b7d81d505910ec198c11ed4c6a728418a868b906b4a0cf29946fda84","license":"MIT","urls":["bzz-raw://8e25e4bdb7ae1f21d23bfee996e22736fc0ab44cfabedac82a757b1edc5623b9","dweb:/ipfs/QmQdWQvB6JCP9ZMbzi8EvQ1PTETqkcTWrbcVurS7DKpa5n"]},"@openzeppelin/contracts/utils/cryptography/EIP712.sol":{"keccak256":"0x10eb97d047f8d84fe263a02bb4a656ac6674f6679d74532cc37546289e073a9d","license":"MIT","urls":["bzz-raw://3e41287d40b0c46982f1083d40d32de2761f009c5c51627fe79a7feb0ab1cf5c","dweb:/ipfs/Qme7dbh6HX3ZvUJdbQAcVqXkmyXyfcLiUZRhhon3cU6K8p"]},"@openzeppelin/contracts/utils/cryptography/MessageHashUtils.sol":{"keccak256":"0x4515543bc4c78561f6bea83ecfdfc3dead55bd59858287d682045b11de1ae575","license":"MIT","urls":["bzz-raw://60601f91440125727244fffd2ba84da7caafecaae0fd887c7ccfec678e02b61e","dweb:/ipfs/QmZnKPBtVDiQS9Dp8gZ4sa3ZeTrWVfqF7yuUd6Y8hwm1Rs"]},"@openzeppelin/contracts/utils/math/Math.sol":{"keccak256":"0xa00be322d7db5786750ce0ac7e2f5b633ac30a5ed5fa1ced1e74acfc19acecea","license":"MIT","urls":["bzz-raw://6c84e822f87cbdc4082533b626667b6928715bb2b1e8e7eb96954cebb9e38c8d","dweb:/ipfs/QmZmy9dgxLTerBAQDuuHqbL6EpgRxddqgv5KmwpXYVbKz1"]},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"keccak256":"0x195533c86d0ef72bcc06456a4f66a9b941f38eb403739b00f21fd7c1abd1ae54","license":"MIT","urls":["bzz-raw://b1d578337048cad08c1c03041cca5978eff5428aa130c781b271ad9e5566e1f8","dweb:/ipfs/QmPFKL2r9CBsMwmUqqdcFPfHZB2qcs9g1HDrPxzWSxomvy"]},"@openzeppelin/contracts/utils/math/SignedMath.sol":{"keccak256":"0xb1970fac7b64e6c09611e6691791e848d5e3fe410fa5899e7df2e0afd77a99e3","license":"MIT","urls":["bzz-raw://db5fbb3dddd8b7047465b62575d96231ba8a2774d37fb4737fbf23340fabbb03","dweb:/ipfs/QmVUSvooZKEdEdap619tcJjTLcAuH6QBdZqAzWwnAXZAWJ"]},"contracts/test/PepenadeCrushV2Test.sol":{"keccak256":"0x7eb11db000cad2dcce37ca69d7db4f1c4948fb1439f4a1cc8e690f03458db249","license":"UNLICENSED","urls":["bzz-raw://08a810997f095c016f78a97fecefbde7dd1f59003b76527f5f61f230fd5225e9","dweb:/ipfs/QmPhSoSrLtoYLDDwCVqipq6GWKegSBxMfftXKWf4Go24NY"]}},"version":1},"zk_version":"1.5.8"},"eravm":{"bytecode":""},"evm":{"bytecode":{"object":""},"methodIdentifiers":{"UPGRADE_INTERFACE_VERSION()":"ad3cb1cc","acceptOwnership()":"79ba5097","addScore(address,uint256)":"d119db4c","backendSigner()":"65d65e86","eip712Domain()":"84b0196e","highScore(address)":"ba5bf0e7","nonces(string)":"b24fce88","owner()":"8da5cb5b","pendingOwner()":"e30c3978","proxiableUUID()":"52d1902d","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b","upgradeToAndCall(address,bytes)":"4f1ef286","version()":"54fd4d50"}},"hash":"0100015bc890b1d4e37a75227994de146677ad42dbea2aa3835c68332389a4d3","factoryDependencies":{},"missingLibraries":[],"objectFormat":"raw"}}}}}